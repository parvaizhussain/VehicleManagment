@using System.Text.Json;
@{
    ViewData["Title"] = "Users";
    var Users = ViewBag.Users;
    var UserData = JsonSerializer.Deserialize<Domain.ViewModels.UserViewModel>(@ViewBag.JsonUserData);
}

@* ************** Content ************** *@
<input type="hidden" id="UserData" value="@ViewBag.JsonUserData">
<input type="hidden" id="UserDataJson" value="@ViewBag.JsonData">

<input type="hidden" id="SelectedRegion" value="">
<div class="row g-4 mb-4">
    <div class="col-sm-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-start justify-content-between">
                    <div class="content-left">
                        <span>Session</span>
                        <div class="d-flex align-items-center my-1">
                            <h4 class="mb-0 me-2">21,459</h4>
                            <span class="text-success">(+29%)</span>
                        </div>
                        <span>Total Users</span>
                    </div>
                    <span class="badge bg-label-primary rounded p-2">
                        <i class="ti ti-user ti-sm"></i>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-start justify-content-between">
                    <div class="content-left">
                        <span>Paid Users</span>
                        <div class="d-flex align-items-center my-1">
                            <h4 class="mb-0 me-2">4,567</h4>
                            <span class="text-success">(+18%)</span>
                        </div>
                        <span>Last week analytics </span>
                    </div>
                    <span class="badge bg-label-danger rounded p-2">
                        <i class="ti ti-user-plus ti-sm"></i>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-start justify-content-between">
                    <div class="content-left">
                        <span>Active Users</span>
                        <div class="d-flex align-items-center my-1">
                            <h4 class="mb-0 me-2">19,860</h4>
                            <span class="text-danger">(-14%)</span>
                        </div>
                        <span>Last week analytics</span>
                    </div>
                    <span class="badge bg-label-success rounded p-2">
                        <i class="ti ti-user-check ti-sm"></i>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-start justify-content-between">
                    <div class="content-left">
                        <span>Pending Users</span>
                        <div class="d-flex align-items-center my-1">
                            <h4 class="mb-0 me-2">237</h4>
                            <span class="text-success">(+42%)</span>
                        </div>
                        <span>Last week analytics</span>
                    </div>
                    <span class="badge bg-label-warning rounded p-2">
                        <i class="ti ti-user-exclamation ti-sm"></i>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Users List Table -->



<div class="card">
    <div class="card-header border-bottom">
        <h5 class="card-title mb-3">Search Filter</h5>
        <div class="d-flex justify-content-between align-items-center row pb-2 gap-3 gap-md-0">
            <div class="col-md-4 user_role"></div>
            <div class="col-md-4 user_plan"></div>
            <div class="col-md-4 user_status"></div>
        </div>
    </div>
  @*  <div class="card-datatable table-responsive">
        <table class="datatables-users table border-top">
            <thead>
                <tr>
                    <th></th>
                    <th>User</th>
                    <th>Role</th>
                    <th>Plan</th>
                    <th>Billing</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>*@

    <div class="card-datatable table-responsive mytable">
        <table class="datatables-users-mytable table border-top">
            <thead>
                <tr>
                    <th></th>
                    <th>User</th>
                    <th>Role</th>
                    <th>Plan</th>
                    <th>Billing</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>


    <!-- Offcanvas to add new user -->
    <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasAddUser" aria-labelledby="offcanvasAddUserLabel">
        <!--offcanvasAddUser-->

        <div class="offcanvas-header">
            <h5 id="offcanvasAddUserLabel" class="offcanvas-title">Add User</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body mx-0 flex-grow-0 pt-0 h-100">
            <form class="add-new-user pt-0" id="addNewUserForm" onsubmit="return false">

                <div class="col-lg-4 col-md-4 col-xs-12 col-sm-6 visiblityhidden">
                    <div class="form-group">
                        <label class="visiblityhidden">ID</label>
                        <input type="text" class="form-control userId visiblityhidden" />
                    </div>
                </div>

                <div class="mb-3">

                    <span class="stred">*</span><label class="form-label" for="add-user-fullname"> First Name</label>
                    <input type="text" class="form-control userfirstnameadd onlyalphabetallow" tabindex="1" autofocus />
                    <p class="error-message">* First Name Required</p>
                </div>
                <div class="mb-3">
                    <span class="stred">*</span><label class="form-label"> Last Name</label>
                    <input type="text" class="form-control userlastnameadd onlyalphabetallow" tabindex="2" />
                    <p class="error-message">* Last Name Required</p>
                </div>
                <div class="mb-3">

                    <span class="stred">*</span><label class="form-label"> User Email</label>
                    <input type="text" class="form-control useremailadd email_validation_csn" />
                    <p class="error-message">* Email Required</p>
                </div>
                <div class="mb-3">
                    <span class="stred">*</span><label c> Role</label>
                    <select class="form-control role_list form-select" tabindex="5">
                        <option value="subscriber">Subscriber</option>
                        <option value="editor">Editor</option>
                        <option value="maintainer">Maintainer</option>
                        <option value="author">Author</option>
                        <option value="admin">Admin</option>
                    </select>
                    <p class="error-message">* Role Required</p>


                </div>
                <div class="mb-3">
                    <span class="stred">*</span><label class="form-label"> AccessRights</label>
                    <select class="form-control accessrights_list form-select">
                        <option value="subscriber">Subscriber</option>
                        <option value="editor">Editor</option>
                        <option value="maintainer">Maintainer</option>
                        <option value="author">Author</option>
                        <option value="admin">Admin</option>
                    </select>
                    <p class="error-message">* AccessRights Required</p>
                </div>

                <div class="mb-3">
                    <span class="stred">*</span><label class="form-label"> Type</label>
                    <div class="form-check">
                        <input name="flexRadioDefault" class="form-check-input iscluster" type="radio" value="" id="flexclusteryes" value="Cluster" checked="">
                        <label class="form-check-label" for="flexRadioDefault1">
                            Cluster Based
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input iscluster" type="radio" name="flexRadioDefault" id="flexclusterno" value="Network">
                        <label class="form-check-label" for="flexRadioDefault2">
                            Network Based
                        </label>
                    </div>

                    <p class="error-message">* Cluster Required</p>
                </div>



                <div class="mb-3">
                    <span class="stred">*</span><label class="form-label"> Region List</label>
                    <div class="region_wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="selectboxes">
                            <ul class="regionselects"></ul>
                        </div>
                        <select name="regionOpt[]" multiple="multiple" id="regionOpt" class="regionlist form-control form-select select2">
                            <option value="CA">South Region</option>
                            <option value="NV">North Region</option>
                            <option value="OR">Central Region</option>
                        </select>

                        <p class="error-message">* Region Required</p>
                    </div>
                </div>

                <div class="mb-3">
                    <div class="marginupbtm col-lg-12 col-md-12 col-sm-12 col-xs-12 displayflxdiv clusterbasedhide">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 nopaddingleftright"><span class="stred">*</span><label class="form-label"> City List</label></div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right nopaddingleftright">


                            <div class="form-check">
                                <input type="checkbox" id="cityselectall" name="cityselectall" class="cityselectall form-check-input" onclick="selectallcity(this)" disabled>
                                <label class="form-check-label" for="cityselectall">
                                    Select All
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="city_wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12 clusterbasedhide">
                        <div class="selectboxes">
                            <ul class="cityselects"></ul>
                        </div>
                        <select name="cityOpt[]" multiple="multiple" id="cityOpt" class="citylist form-control form-select select2" disabled>
                            <option value="CA">Karachi</option>
                            <option value="NV">Lahore</option>
                            <option value="OR">Islamabad</option>
                        </select>

                    </div>
                </div>

                <div class="mb-3">
                    <div class="marginupbtm col-lg-12 col-md-12 col-sm-12 col-xs-12 displayflxdiv clusterbasedhide">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 nopaddingleftright"><span class="stred">*</span><label class="form-label"> Network List</label></div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right nopaddingleftright">


                            <div class="form-check">
                                <input type="checkbox" id="networkselectall" name="networkselectall" class="networkselectall form-check-input" onclick="selectallnetwork(this)" disabled>
                                <label class="form-check-label" for="networkselectall">
                                    Select All
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="network_wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12 clusterbasedhide">
                        <div class="selectboxes">
                            <ul class="networkselects"></ul>
                        </div>
                        <select name="networkOpt[]" multiple="multiple" id="networkOpt" class="networklist form-control form-select select2" disabled>
                            <option value="CA">Dha Network</option>
                            <option value="CA">clifton Network</option>

                        </select>
                        @*   <select id="select2Multiple" class="select2 form-select" multiple>
                        <option value="Karachi">DHA</option>


                        </select>*@
                    </div>
                </div>

                <div class="mb-3">
                    <div class="marginupbtm col-lg-12 col-md-12 col-sm-12 col-xs-12 displayflxdiv clusterbasedhide">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 nopaddingleftright"><span class="stred">*</span><label class="form-label"> Branch List</label></div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right nopaddingleftright">


                            <div class="form-check">
                                <input type="checkbox" id="branchselectall" name="branchselectall" class="branchselectall form-check-input" onclick="selectallbranch(this)" disabled>
                                <label class="form-check-label" for="branchselectall">
                                    Select All
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="branch_wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12 clusterbasedhide">
                        <span class="stred">*</span><label class="form-label"> Culster branch</label>
                        <div class="selectboxes">
                            <ul class="branchselects"></ul>
                        </div>
                        <select name="branchOpt[]" multiple="multiple" id="branchOpt" class="branchlist form-control form-select select2" disabled>
                            <option value="CA">Dha</option>
                            <option value="CA">clifton</option>
                        </select>

                    </div>
                </div>

                <div class="mb-3">
                    <div class="cluster_branch_wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="clusterselectboxes">
                            <ul class="clusterbranchselects"></ul>
                        </div>
                        <select name="clusterbranchOpt[]" multiple="multiple" id="clusterbranchOpt" class="clusterbranchlist form-control form-select select2" tabindex="11">
                            <option value="CA">Dha</option>
                            <option value="CA">clifton</option>
                        </select>
                    </div>
                </div>


                <div class="mb-3 password_wrapper">

                    <span class="stred">*</span><label class="form-label" for="user-role"> Password</label>
                    <input type="password" class="form-control userpassword1add" />
                    <p class="error-message">* Password Required</p>
                </div>
                <div class="mb-4 confirmpassword_wrapper">
                    <span class="stred">*</span><label class="form-label"> Confirm Password</label>
                    <input type="password" class="form-control userpassword2add" />
                    <p class="error-message">* Confirm Password Required</p>
                </div>
                <button type="submit" class="btn btn-primary me-sm-3 me-1 data-submit">Submit</button>
                <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="offcanvas">Cancel</button>
            </form>
        </div>

    </div>
</div>

<style>
    .error-message {
        display: none !important;
    }
</style>

 @*  <script src="~/assets/js/app-user-list.js" defer></script>*@
 <script defer>
    var mydata = $('#UserDataJson').val();

    var newdata = JSON.parse(mydata);
   
        LoadTable(newdata);
    function LoadTable(newdatas) {
        console.log(newdatas);
        var stutbl = '';
   var statusObj = {
            1: { title: 'Pending', class: 'bg-label-warning' },
            2: { title: 'Active', class: 'bg-label-success' },
            3: { title: 'Inactive', class: 'bg-label-secondary' }
        };
     
        for (var st = 0; st < newdatas.data.length; st++) {

            var $name = newdatas.data[st].FirstName + " " + newdatas.data[st].LastName;
                                $email = newdatas.data[st].Email;
                                $image = newdatas.data[st].avatar;
                            if ($image) {
                                // For Avatar image
                                var $output =
                                    '<img src="' + assetsPath + 'img/avatars/' + $image + '" alt="Avatar" class="rounded-circle">';
                            } else {
                                // For Avatar badge
                                var stateNum = Math.floor(Math.random() * 6);
                                var states = ['success', 'danger', 'warning', 'info', 'primary', 'secondary'];
                                var $state = states[stateNum],
                    $name = newdatas.data[st].FirstName + " " + newdatas.data[st].LastName,
                                    $initials = $name.match(/\b\w/g) || [];
                                $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();
                                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + '</span>';
                            }
                            // Creates full output for row
                            

            stutbl += '<tr>';
            //stutbl += '<td class="visiblityhidden"><input type="text" class="regionidedit" value="' + result[st].regionId + '"><input type="text" class="regionisdeleteedit" value="' + result[st].isDeleted + '"></td>';
            //stutbl += '<td ><span class="regionnameedit">' + result[st].regionName + '</span></td>';
            //stutbl += '<td><span class="regionshortnameedit">' + result[st].normalizedName + '</span></td>';
            //stutbl += '<td><span class="regioncodeedit">' + result[st].regionCode + '</span></td>';
            //if (model.AccessRights.Edit) {
            //    stutbl += '<td><button  class="btn btn-primary btn-xs edit_region linkbtns" title="Edit" onclick="edit_region(this)"> Edit</button><button class="btn btn-primary btn-xs regiondeletebtn linkbtns"  onclick="delete_region(this)">' + isdeleted + '</a>';
            //} else {
            //    stutbl += '<td><button  class="btn btn-primary btn-xs edit_region linkbtns anchor_disabled" title="Edit" onclick="edit_region(this)"> Edit</button><button class="btn btn-primary btn-xs regiondeletebtn linkbtns anchor_disabled"  onclick="delete_region(this)">' + isdeleted + '</a>';
            //}
            stutbl += '<td class="visiblityhidden"></td>';
            stutbl+='<td>';
            stutbl+='<div class="d-flex justify-content-start align-items-center user-name">';
            stutbl += '<div class="avatar-wrapper">';
                stutbl+='<div class="avatar avatar-sm me-3">';

                stutbl+=$output;
                stutbl+='</div>';
                stutbl+='</div>';
                stutbl+='<div class="d-flex flex-column">';
                stutbl+='<a href="#" class="text-body text-truncate"><span class="fw-semibold">';
                stutbl+=$name;
                stutbl+='</span></a>';
                stutbl+='<small class="text-muted">';
                stutbl+=$email;
                stutbl+='</small>';
                stutbl+='</div>';
                stutbl+='</div>';
            stutbl+='</td>';
              stutbl += '<td class="visiblityhidden"></td>';
                stutbl += '<td class="visiblityhidden"></td>';
                  stutbl += '<td class="visiblityhidden"></td>';
                    stutbl += '<td class="visiblityhidden"></td>';
                      stutbl += '<td class="visiblityhidden"></td>';

            stutbl += '</tr>';
        }

    


        $(".datatables-users-mytable tbody").html(stutbl);
       

        $(".datatables-users-mytable").DataTable({
            order: [[1, 'desc']],
            dom:
                '<"row me-2"' +
                '<"col-md-2"<"me-3"l>>' +
                '<"col-md-10"<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-end flex-md-row flex-column mb-3 mb-md-0"fB>>' +
                '>t' +
                '<"row mx-2"' +
                '<"col-sm-12 col-md-6"i>' +
                '<"col-sm-12 col-md-6"p>' +
                '>',
            language: {
                sLengthMenu: '_MENU_',
                search: '',
                searchPlaceholder: 'Search..'
            },
            // Buttons with Dropdown
            buttons: [
                {
                    extend: 'collection',
                    className: 'btn btn-label-secondary dropdown-toggle mx-3',
                    text: '<i class="ti ti-screen-share me-1 ti-xs"></i>Export',
                    buttons: [
                        {
                            extend: 'print',
                            text: '<i class="ti ti-printer me-2" ></i>Print',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5],
                                // prevent avatar to be print
                                format: {
                                    body: function (inner, coldex, rowdex) {
                                        if (inner.length <= 0) return inner;
                                        var el = $.parseHTML(inner);
                                        var result = '';
                                        $.each(el, function (index, item) {
                                            if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                result = result + item.lastChild.firstChild.textContent;
                                            } else if (item.innerText === undefined) {
                                                result = result + item.textContent;
                                            } else result = result + item.innerText;
                                        });
                                        return result;
                                    }
                                }
                            },
                            customize: function (win) {
                                //customize print view for dark
                                $(win.document.body)
                                    .css('color', headingColor)
                                    .css('border-color', borderColor)
                                    .css('background-color', bodyBg);
                                $(win.document.body)
                                    .find('table')
                                    .addClass('compact')
                                    .css('color', 'inherit')
                                    .css('border-color', 'inherit')
                                    .css('background-color', 'inherit');
                            }
                        },
                        {
                            extend: 'csv',
                            text: '<i class="ti ti-file-text me-2" ></i>Csv',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5],
                                // prevent avatar to be display
                                format: {
                                    body: function (inner, coldex, rowdex) {
                                        if (inner.length <= 0) return inner;
                                        var el = $.parseHTML(inner);
                                        var result = '';
                                        $.each(el, function (index, item) {
                                            if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                result = result + item.lastChild.firstChild.textContent;
                                            } else if (item.innerText === undefined) {
                                                result = result + item.textContent;
                                            } else result = result + item.innerText;
                                        });
                                        return result;
                                    }
                                }
                            }
                        },
                        {
                            extend: 'excel',
                            text: 'Excel',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5],
                                // prevent avatar to be display
                                format: {
                                    body: function (inner, coldex, rowdex) {
                                        if (inner.length <= 0) return inner;
                                        var el = $.parseHTML(inner);
                                        var result = '';
                                        $.each(el, function (index, item) {
                                            if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                result = result + item.lastChild.firstChild.textContent;
                                            } else if (item.innerText === undefined) {
                                                result = result + item.textContent;
                                            } else result = result + item.innerText;
                                        });
                                        return result;
                                    }
                                }
                            }
                        },
                        {
                            extend: 'pdf',
                            text: '<i class="ti ti-file-code-2 me-2"></i>Pdf',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5],
                                // prevent avatar to be display
                                format: {
                                    body: function (inner, coldex, rowdex) {
                                        if (inner.length <= 0) return inner;
                                        var el = $.parseHTML(inner);
                                        var result = '';
                                        $.each(el, function (index, item) {
                                            if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                result = result + item.lastChild.firstChild.textContent;
                                            } else if (item.innerText === undefined) {
                                                result = result + item.textContent;
                                            } else result = result + item.innerText;
                                        });
                                        return result;
                                    }
                                }
                            }
                        },
                        {
                            extend: 'copy',
                            text: '<i class="ti ti-copy me-2" ></i>Copy',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5],
                                // prevent avatar to be display
                                format: {
                                    body: function (inner, coldex, rowdex) {
                                        if (inner.length <= 0) return inner;
                                        var el = $.parseHTML(inner);
                                        var result = '';
                                        $.each(el, function (index, item) {
                                            if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                result = result + item.lastChild.firstChild.textContent;
                                            } else if (item.innerText === undefined) {
                                                result = result + item.textContent;
                                            } else result = result + item.innerText;
                                        });
                                        return result;
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">Add New User</span>',
                    className: 'add-new btn btn-primary',
                    attr: {
                        'data-bs-toggle': 'offcanvas',
                        'data-bs-target': '#offcanvasAddUser'
                    }
                }
            ],
            // For responsive popup
            responsive: {
                details: {
                    display: $.fn.dataTable.Responsive.display.modal({
                        header: function (row) {
                            var data = row.data();
                            return 'Details of ' + data['full_name'];
                        }
                    }),
                    type: 'column',
                    renderer: function (api, rowIdx, columns) {
                        var data = $.map(columns, function (col, i) {
                            return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)
                                ? '<tr data-dt-row="' +
                                col.rowIndex +
                                '" data-dt-column="' +
                                col.columnIndex +
                                '">' +
                                '<td>' +
                                col.title +
                                ':' +
                                '</td> ' +
                                '<td>' +
                                col.data +
                                '</td>' +
                                '</tr>'
                                : '';
                        }).join('');

                        return data ? $('<table class="table"/><tbody />').append(data) : false;
                    }
                }
            },
            initComplete: function () {
                // Adding role filter once table initialized
                this.api()
                    .columns(2)
                    .every(function () {
                        var column = this;
                        var select = $(
                            '<select id="UserRole" class="form-select text-capitalize"><option value=""> Select Role </option></select>'
                        )
                            .appendTo('.user_role')
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                column.search(val ? '^' + val + '$' : '', true, false).draw();
                            });

                        column
                            .data()
                            .unique()
                            .sort()
                            .each(function (d, j) {
                                select.append('<option value="' + d + '">' + d + '</option>');
                            });
                    });
                // Adding plan filter once table initialized
                this.api()
                    .columns(3)
                    .every(function () {
                        var column = this;
                        var select = $(
                            '<select id="UserPlan" class="form-select text-capitalize"><option value=""> Select Plan </option></select>'
                        )
                            .appendTo('.user_plan')
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                column.search(val ? '^' + val + '$' : '', true, false).draw();
                            });

                        column
                            .data()
                            .unique()
                            .sort()
                            .each(function (d, j) {
                                select.append('<option value="' + d + '">' + d + '</option>');
                            });
                    });
                // Adding status filter once table initialized
                this.api()
                    .columns(5)
                    .every(function () {
                        var column = this;
                        var select = $(
                            '<select id="FilterTransaction" class="form-select text-capitalize"><option value=""> Select Status </option></select>'
                        )
                            .appendTo('.user_status')
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                column.search(val ? '^' + val + '$' : '', true, false).draw();
                            });

                        column
                            .data()
                            .unique()
                            .sort()
                            .each(function (d, j) {
                                select.append(
                                    '<option value="' +
                                    statusObj[d].title +
                                    '" class="text-capitalize">' +
                                    statusObj[d].title +
                                    '</option>'
                                );
                            });
                    });
            }
        });
     
    }
 </script>

 <script defer>
    var mydata = $('#UserDataJson').val();

    //var model = JSON.parse($("#UserDataJson").val());
    console.log(mydata);
   // console.log(data);
    /**
    * Page User List
    */

    /**
    * Page User List
    */
  
    var newdata = JSON.parse(mydata);
    //{"data":[{"FirstName":"fahad","LastName":"siddiqui","pwd":"Microsoft","AccessRightsId":null,"AccessRights":null,"IsCluster":false,"Id":"1a71fdf9-39b2-4d6f-a669-b7964e7b3daa","UserName":"fahad.siddiqui@csn.edu.pk","NormalizedUserName":"FAHAD.SIDDIQUI@CSN.EDU.PK","Email":"fahad.siddiqui@csn.edu.pk","NormalizedEmail":"FAHAD.SIDDIQUI@CSN.EDU.PK","EmailConfirmed":true,"PasswordHash":null,"SecurityStamp":"MI726VJW64LQKJZBBB2QP6R6SXLILRD2","ConcurrencyStamp":"3094da68-20c5-4bbd-965f-e07a2444738a","PhoneNumber":null,"PhoneNumberConfirmed":false,"TwoFactorEnabled":false,"LockoutEnd":null,"LockoutEnabled":true,"AccessFailedCount":0}]};
    'use strict';

    // Datatable (jquery)
    $(function () {
        let borderColor, bodyBg, headingColor;

        if (isDarkStyle) {
            borderColor = config.colors_dark.borderColor;
            bodyBg = config.colors_dark.bodyBg;
            headingColor = config.colors_dark.headingColor;
        } else {
            borderColor = config.colors.borderColor;
            bodyBg = config.colors.bodyBg;
            headingColor = config.colors.headingColor;
        }

        // Variable declaration for table
        var dt_user_table = $('.datatables-users'),
            select2 = $('.select2'),
            userView = '/Apps/Users/View/Account',
            statusObj = {
                1: { title: 'Pending', class: 'bg-label-warning' },
                2: { title: 'Active', class: 'bg-label-success' },
                3: { title: 'Inactive', class: 'bg-label-secondary' }
            };

       
        if (dt_user_table.length) {
            var dt_user = dt_user_table.DataTable({
                data: newdata.data, //assetsPath + 'json/user-list.json', // JSON file to add data
                columns: [
                    // columns according to JSON
                    { data: '' },
                    { data: 'FirstName' },
                    //{ data: 'role' },
                    //{ data: 'current_plan' },
                    //{ data: 'billing' },
                    //{ data: 'status' },
                    //{ data: 'action' }
                ],
                columnDefs: [
                    {
                        // For Responsive
                        className: 'control',
                        searchable: false,
                        orderable: false,
                        responsivePriority: 2,
                        targets: 0,
                        render: function (data, type, full, meta) {
                            return '';
                        }
                    },
                    {
                        // User full name and email
                        targets: 1,
                        responsivePriority: 4,
                        render: function (data, type, full, meta) {
                            var $name = full['FirstName'] + " " + full['LastName'],
                                $email = full['Email'],
                                $image = full['avatar'];
                            if ($image) {
                                // For Avatar image
                                var $output =
                                    '<img src="' + assetsPath + 'img/avatars/' + $image + '" alt="Avatar" class="rounded-circle">';
                            } else {
                                // For Avatar badge
                                var stateNum = Math.floor(Math.random() * 6);
                                var states = ['success', 'danger', 'warning', 'info', 'primary', 'secondary'];
                                var $state = states[stateNum],
                                    $name = full['FirstName'] + " " + full['LastName'],
                                    $initials = $name.match(/\b\w/g) || [];
                                $initials = (($initials.shift() || '') + ($initials.pop() || '')).toUpperCase();
                                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + '</span>';
                            }
                            // Creates full output for row
                            var $row_output =
                                '<div class="d-flex justify-content-start align-items-center user-name">' +
                                '<div class="avatar-wrapper">' +
                                '<div class="avatar avatar-sm me-3">' +
                                $output +
                                '</div>' +
                                '</div>' +
                                '<div class="d-flex flex-column">' +
                                '<a href="#" class="text-body text-truncate"><span class="fw-semibold">' +
                                $name +
                                '</span></a>' +
                                '<small class="text-muted">' +
                                $email +
                                '</small>' +
                                '</div>' +
                                '</div>';
                            return $row_output;
                        }
                    },
                    //{
                    //    // User Role
                    //    targets: 2,
                    //    render: function (data, type, full, meta) {
                    //        var $role = full['role'];
                    //        var roleBadgeObj = {
                    //            Subscriber:
                    //                '<span class="badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30 me-2"><i class="ti ti-user ti-sm"></i></span>',
                    //            Author:
                    //                '<span class="badge badge-center rounded-pill bg-label-success w-px-30 h-px-30 me-2"><i class="ti ti-circle-check ti-sm"></i></span>',
                    //            Maintainer:
                    //                '<span class="badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30 me-2"><i class="ti ti-chart-pie-2 ti-sm"></i></span>',
                    //            Editor:
                    //                '<span class="badge badge-center rounded-pill bg-label-info w-px-30 h-px-30 me-2"><i class="ti ti-edit ti-sm"></i></span>',
                    //            Admin:
                    //                '<span class="badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30 me-2"><i class="ti ti-device-laptop ti-sm"></i></span>'
                    //        };
                    //        return "<span class='text-truncate d-flex align-items-center'>" + roleBadgeObj[$role] + $role + '</span>';
                    //    }
                    //},
                    //{
                    //    // Plans
                    //    targets: 3,
                    //    render: function (data, type, full, meta) {
                    //        var $plan = full['current_plan'];

                    //        return '<span class="fw-semibold">' + $plan + '</span>';
                    //    }
                    //},
                    //{
                    //    // User Status
                    //    targets: 5,
                    //    render: function (data, type, full, meta) {
                    //        var $status = full['status'];

                    //        return (
                    //            '<span class="badge ' +
                    //            statusObj[$status].class +
                    //            '" text-capitalized>' +
                    //            statusObj[$status].title +
                    //            '</span>'
                    //        );
                    //    }
                    //},
                    //{
                    //    // Actions
                    //    targets: -1,
                    //    title: 'Actions',
                    //    searchable: false,
                    //    orderable: false,
                    //    render: function (data, type, full, meta) {
                    //        return (
                    //            '<div class="d-flex align-items-center">' +
                    //            '<a href="javascript:;" class="text-body"><i class="ti ti-edit ti-sm me-2"></i></a>' +
                    //            '<a href="javascript:;" class="text-body delete-record"><i class="ti ti-trash ti-sm mx-2"></i></a>' +
                    //            '<a href="javascript:;" class="text-body dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical ti-sm mx-1"></i></a>' +
                    //            '<div class="dropdown-menu dropdown-menu-end m-0">' +
                    //            '<a href="' +
                    //            userView +
                    //            '" class="dropdown-item">View</a>' +
                    //            '<a href="javascript:;" class="dropdown-item">Suspend</a>' +
                    //            '</div>' +
                    //            '</div>'
                    //        );
                    //    }
                    //}
                ],
                order: [[1, 'desc']],
                dom:
                    '<"row me-2"' +
                    '<"col-md-2"<"me-3"l>>' +
                    '<"col-md-10"<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-end flex-md-row flex-column mb-3 mb-md-0"fB>>' +
                    '>t' +
                    '<"row mx-2"' +
                    '<"col-sm-12 col-md-6"i>' +
                    '<"col-sm-12 col-md-6"p>' +
                    '>',
                language: {
                    sLengthMenu: '_MENU_',
                    search: '',
                    searchPlaceholder: 'Search..'
                },
                // Buttons with Dropdown
                buttons: [
                    {
                        extend: 'collection',
                        className: 'btn btn-label-secondary dropdown-toggle mx-3',
                        text: '<i class="ti ti-screen-share me-1 ti-xs"></i>Export',
                        buttons: [
                            {
                                extend: 'print',
                                text: '<i class="ti ti-printer me-2" ></i>Print',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5],
                                    // prevent avatar to be print
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                },
                                customize: function (win) {
                                    //customize print view for dark
                                    $(win.document.body)
                                        .css('color', headingColor)
                                        .css('border-color', borderColor)
                                        .css('background-color', bodyBg);
                                    $(win.document.body)
                                        .find('table')
                                        .addClass('compact')
                                        .css('color', 'inherit')
                                        .css('border-color', 'inherit')
                                        .css('background-color', 'inherit');
                                }
                            },
                            {
                                extend: 'csv',
                                text: '<i class="ti ti-file-text me-2" ></i>Csv',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'excel',
                                text: 'Excel',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'pdf',
                                text: '<i class="ti ti-file-code-2 me-2"></i>Pdf',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            },
                            {
                                extend: 'copy',
                                text: '<i class="ti ti-copy me-2" ></i>Copy',
                                className: 'dropdown-item',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5],
                                    // prevent avatar to be display
                                    format: {
                                        body: function (inner, coldex, rowdex) {
                                            if (inner.length <= 0) return inner;
                                            var el = $.parseHTML(inner);
                                            var result = '';
                                            $.each(el, function (index, item) {
                                                if (item.classList !== undefined && item.classList.contains('user-name')) {
                                                    result = result + item.lastChild.firstChild.textContent;
                                                } else if (item.innerText === undefined) {
                                                    result = result + item.textContent;
                                                } else result = result + item.innerText;
                                            });
                                            return result;
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    {
                        text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">Add New User</span>',
                        className: 'add-new btn btn-primary',
                        attr: {
                            'data-bs-toggle': 'offcanvas',
                            'data-bs-target': '#offcanvasAddUser'
                        }
                    }
                ],
                // For responsive popup
                responsive: {
                    details: {
                        display: $.fn.dataTable.Responsive.display.modal({
                            header: function (row) {
                                var data = row.data();
                                return 'Details of ' + data['full_name'];
                            }
                        }),
                        type: 'column',
                        renderer: function (api, rowIdx, columns) {
                            var data = $.map(columns, function (col, i) {
                                return col.title !== '' // ? Do not show row in modal popup if title is blank (for check box)
                                    ? '<tr data-dt-row="' +
                                    col.rowIndex +
                                    '" data-dt-column="' +
                                    col.columnIndex +
                                    '">' +
                                    '<td>' +
                                    col.title +
                                    ':' +
                                    '</td> ' +
                                    '<td>' +
                                    col.data +
                                    '</td>' +
                                    '</tr>'
                                    : '';
                            }).join('');

                            return data ? $('<table class="table"/><tbody />').append(data) : false;
                        }
                    }
                },
                initComplete: function () {
                    // Adding role filter once table initialized
                    this.api()
                        .columns(2)
                        .every(function () {
                            var column = this;
                            var select = $(
                                '<select id="UserRole" class="form-select text-capitalize"><option value=""> Select Role </option></select>'
                            )
                                .appendTo('.user_role')
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                    column.search(val ? '^' + val + '$' : '', true, false).draw();
                                });

                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.append('<option value="' + d + '">' + d + '</option>');
                                });
                        });
                    // Adding plan filter once table initialized
                    this.api()
                        .columns(3)
                        .every(function () {
                            var column = this;
                            var select = $(
                                '<select id="UserPlan" class="form-select text-capitalize"><option value=""> Select Plan </option></select>'
                            )
                                .appendTo('.user_plan')
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                    column.search(val ? '^' + val + '$' : '', true, false).draw();
                                });

                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.append('<option value="' + d + '">' + d + '</option>');
                                });
                        });
                    // Adding status filter once table initialized
                    this.api()
                        .columns(5)
                        .every(function () {
                            var column = this;
                            var select = $(
                                '<select id="FilterTransaction" class="form-select text-capitalize"><option value=""> Select Status </option></select>'
                            )
                                .appendTo('.user_status')
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                    column.search(val ? '^' + val + '$' : '', true, false).draw();
                                });

                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.append(
                                        '<option value="' +
                                        statusObj[d].title +
                                        '" class="text-capitalize">' +
                                        statusObj[d].title +
                                        '</option>'
                                    );
                                });
                        });
                }
            });
        }

        // Delete Record
        $('.datatables-users tbody').on('click', '.delete-record', function () {
            dt_user.row($(this).parents('tr')).remove().draw();
        });

        // Filter form control to default size
        // ? setTimeout used for multilingual table initialization
        setTimeout(() => {
            $('.dataTables_filter .form-control').removeClass('form-control-sm');
            $('.dataTables_length .form-select').removeClass('form-select-sm');
        }, 300);
    });

    // Validation & Phone mask
    (function () {
        const phoneMaskList = document.querySelectorAll('.phone-mask'),
            addNewUserForm = document.getElementById('addNewUserForm');

        // Phone Number
        if (phoneMaskList) {
            phoneMaskList.forEach(function (phoneMask) {
                new Cleave(phoneMask, {
                    phone: true,
                    phoneRegionCode: 'US'
                });
            });
        }
        // Add New User Form Validation
        const fv = FormValidation.formValidation(addNewUserForm, {
            fields: {
                userFullname: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter fullname '
                        }
                    }
                },
                userEmail: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter your email'
                        },
                        emailAddress: {
                            message: 'The value is not a valid email address'
                        }
                    }
                }
            },
            plugins: {
                trigger: new FormValidation.plugins.Trigger(),
                bootstrap5: new FormValidation.plugins.Bootstrap5({
                    // Use this for enabling/changing valid/invalid class
                    eleValidClass: '',
                    rowSelector: function (field, ele) {
                        // field is the field name & ele is the field element
                        return '.mb-3';
                    }
                }),
                submitButton: new FormValidation.plugins.SubmitButton(),
                // Submit the form when all fields are valid
                // defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
                autoFocus: new FormValidation.plugins.AutoFocus()
            }
        });
    })();


</script>

@*<script src="~/assets/myjs/user.js"></script>*@










@*<!-- Content wrapper -->
<div class="content-wrapper">
    <!-- Content -->

    <div class="container-xxl flex-grow-1 container-p-y">
        <div class="row g-4 mb-4">
            <div class="col-sm-6 col-xl-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-start justify-content-between">
                            <div class="content-left">
                                <span>Session</span>
                                <div class="d-flex align-items-center my-1">
                                    <h4 class="mb-0 me-2">21,459</h4>
                                    <span class="text-success">(+29%)</span>
                                </div>
                                <span>Total Users</span>
                            </div>
                            <span class="badge bg-label-primary rounded p-2">
                                <i class="ti ti-user ti-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xl-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-start justify-content-between">
                            <div class="content-left">
                                <span>Paid Users</span>
                                <div class="d-flex align-items-center my-1">
                                    <h4 class="mb-0 me-2">4,567</h4>
                                    <span class="text-success">(+18%)</span>
                                </div>
                                <span>Last week analytics </span>
                            </div>
                            <span class="badge bg-label-danger rounded p-2">
                                <i class="ti ti-user-plus ti-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xl-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-start justify-content-between">
                            <div class="content-left">
                                <span>Active Users</span>
                                <div class="d-flex align-items-center my-1">
                                    <h4 class="mb-0 me-2">19,860</h4>
                                    <span class="text-danger">(-14%)</span>
                                </div>
                                <span>Last week analytics</span>
                            </div>
                            <span class="badge bg-label-success rounded p-2">
                                <i class="ti ti-user-check ti-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-xl-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-start justify-content-between">
                            <div class="content-left">
                                <span>Pending Users</span>
                                <div class="d-flex align-items-center my-1">
                                    <h4 class="mb-0 me-2">237</h4>
                                    <span class="text-success">(+42%)</span>
                                </div>
                                <span>Last week analytics</span>
                            </div>
                            <span class="badge bg-label-warning rounded p-2">
                                <i class="ti ti-user-exclamation ti-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Users List Table -->
        <div class="card">
            <div class="card-header border-bottom">
                <h5 class="card-title mb-3">Search Filter</h5>
                <div class="d-flex justify-content-between align-items-center row pb-2 gap-3 gap-md-0">
                    <div class="col-md-4 user_role"></div>
                    <div class="col-md-4 user_plan"></div>
                    <div class="col-md-4 user_status"></div>
                </div>
            </div>
            <div class="card-datatable table-responsive">
                <table class="datatables-users table border-top">
                    <thead>
                        <tr>
                            <th></th>
                            <th>User</th>
                            <th>Role</th>
                            <th>Plan</th>
                            <th>Billing</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <!-- Offcanvas to add new user -->
            <div class="offcanvas offcanvas-end"
                 tabindex="-1"
                 id="offcanvasAddUser"
                 aria-labelledby="offcanvasAddUserLabel">
                <div class="offcanvas-header">
                    <h5 id="offcanvasAddUserLabel" class="offcanvas-title">Add User</h5>
                    <button type="button"
                            class="btn-close text-reset"
                            data-bs-dismiss="offcanvas"
                            aria-label="Close"></button>
                </div>
                <div class="offcanvas-body mx-0 flex-grow-0 pt-0 h-100">
                    <form class="add-new-user pt-0" id="addNewUserForm" onsubmit="return false">
                        <div class="mb-3">
                            <label class="form-label" for="add-user-fullname">Full Name</label>
                            <input type="text"
                                   class="form-control"
                                   id="add-user-fullname"
                                   placeholder="John Doe"
                                   name="userFullname"
                                   aria-label="John Doe" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="add-user-email">Email</label>
                            <input type="text"
                                   id="add-user-email"
                                   class="form-control"
                                   placeholder="john.doe@example.com"
                                   aria-label="john.doe@example.com"
                                   name="userEmail" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="add-user-contact">Contact</label>
                            <input type="text"
                                   id="add-user-contact"
                                   class="form-control phone-mask"
                                   placeholder="+1 (609) 988-44-11"
                                   aria-label="john.doe@example.com"
                                   name="userContact" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="add-user-company">Company</label>
                            <input type="text"
                                   id="add-user-company"
                                   class="form-control"
                                   placeholder="Web Developer"
                                   aria-label="jdoe1"
                                   name="companyName" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="country">Country</label>
                            <select id="country" class="select2 form-select">
                                <option value="">Select</option>
                                <option value="Australia">Australia</option>
                                <option value="Bangladesh">Bangladesh</option>
                                <option value="Belarus">Belarus</option>
                                <option value="Brazil">Brazil</option>
                                <option value="Canada">Canada</option>
                                <option value="China">China</option>
                                <option value="France">France</option>
                                <option value="Germany">Germany</option>
                                <option value="India">India</option>
                                <option value="Indonesia">Indonesia</option>
                                <option value="Israel">Israel</option>
                                <option value="Italy">Italy</option>
                                <option value="Japan">Japan</option>
                                <option value="Korea">Korea, Republic of</option>
                                <option value="Mexico">Mexico</option>
                                <option value="Philippines">Philippines</option>
                                <option value="Russia">Russian Federation</option>
                                <option value="South Africa">South Africa</option>
                                <option value="Thailand">Thailand</option>
                                <option value="Turkey">Turkey</option>
                                <option value="Ukraine">Ukraine</option>
                                <option value="United Arab Emirates">United Arab Emirates</option>
                                <option value="United Kingdom">United Kingdom</option>
                                <option value="United States">United States</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="user-role">User Role</label>
                            <select id="user-role" class="form-select">
                                <option value="subscriber">Subscriber</option>
                                <option value="editor">Editor</option>
                                <option value="maintainer">Maintainer</option>
                                <option value="author">Author</option>
                                <option value="admin">Admin</option>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label class="form-label" for="user-plan">Select Plan</label>
                            <select id="user-plan" class="form-select">
                                <option value="basic">Basic</option>
                                <option value="enterprise">Enterprise</option>
                                <option value="company">Company</option>
                                <option value="team">Team</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary me-sm-3 me-1 data-submit">Submit</button>
                        <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="offcanvas">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- / Content -->
   

    <div class="content-backdrop fade"></div>
</div>
*@






<!-- Content wrapper -->

