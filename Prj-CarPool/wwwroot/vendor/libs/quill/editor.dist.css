@charset "UTF-8";
.ql-container {
  display: block;
  margin: 0;
  position: relative;
}
.ql-container.ql-disabled .ql-editor ul[data-checked] > li::before {
  pointer-events: none;
}
.ql-container.ql-disabled .ql-tooltip {
  visibility: hidden;
}

.ql-clipboard {
  position: absolute;
  overflow-y: hidden;
  left: -6250rem;
  height: 0.0625rem;
  top: 50%;
}
[dir=rtl] .ql-clipboard {
  left: auto;
  right: -6250rem;
}

.ql-editor {
  overflow-y: auto;
  height: 100%;
  -o-tab-size: 4;
     tab-size: 4;
  -moz-tab-size: 4;
  box-sizing: border-box;
  display: block;
  outline: none;
  word-wrap: break-word;
  white-space: pre-wrap;
}
.ql-editor > * {
  cursor: text;
}
.ql-editor.ql-blank::before {
  position: absolute;
  content: attr(data-placeholder);
  font-style: italic;
  left: 0;
  right: 0;
  pointer-events: none;
}

.ql-snow,
.ql-bubble {
  box-sizing: border-box;
}
.ql-snow *,
.ql-bubble * {
  box-sizing: border-box;
}
.ql-snow .ql-out-bottom,
.ql-snow .ql-out-top,
.ql-bubble .ql-out-bottom,
.ql-bubble .ql-out-top {
  visibility: hidden;
}
.ql-snow .ql-hidden,
.ql-bubble .ql-hidden {
  display: none !important;
}
.ql-snow .ql-even,
.ql-bubble .ql-even {
  fill-rule: evenodd;
}
.ql-snow .ql-empty,
.ql-bubble .ql-empty {
  fill: none;
}
.ql-snow .ql-transparent,
.ql-bubble .ql-transparent {
  opacity: 0.4;
}
.ql-snow .ql-thin,
.ql-snow .ql-stroke.ql-thin,
.ql-bubble .ql-thin,
.ql-bubble .ql-stroke.ql-thin {
  stroke-width: 1;
}
.ql-snow .ql-editor a,
.ql-bubble .ql-editor a {
  text-decoration: underline;
}
.ql-snow .ql-direction.ql-active svg:last-child,
.ql-bubble .ql-direction.ql-active svg:last-child {
  display: inline;
}
.ql-snow .ql-direction.ql-active svg:first-child,
.ql-bubble .ql-direction.ql-active svg:first-child {
  display: none;
}
.ql-snow .ql-direction svg:last-child,
.ql-bubble .ql-direction svg:last-child {
  display: none;
}
.ql-snow.ql-toolbar, .ql-snow .ql-toolbar,
.ql-bubble.ql-toolbar,
.ql-bubble .ql-toolbar {
  box-sizing: border-box;
  padding: 0.5rem;
}
.ql-snow.ql-toolbar::after, .ql-snow .ql-toolbar::after,
.ql-bubble.ql-toolbar::after,
.ql-bubble .ql-toolbar::after {
  clear: both;
  content: "";
  display: table;
}
.ql-snow.ql-toolbar button, .ql-snow .ql-toolbar button,
.ql-bubble.ql-toolbar button,
.ql-bubble .ql-toolbar button {
  float: left;
  display: inline-block;
  padding: 0.1875rem 0.3125rem;
  height: 1.5rem;
  width: 1.75rem;
  background: none;
  border: none;
  cursor: pointer;
}
.ql-snow.ql-toolbar button:active:hover, .ql-snow .ql-toolbar button:active:hover,
.ql-bubble.ql-toolbar button:active:hover,
.ql-bubble .ql-toolbar button:active:hover {
  outline: none;
}
[dir=rtl] .ql-snow.ql-toolbar button, [dir=rtl] .ql-snow .ql-toolbar button,
[dir=rtl] .ql-bubble.ql-toolbar button,
[dir=rtl] .ql-bubble .ql-toolbar button {
  float: right;
}
.ql-snow.ql-toolbar button svg, .ql-snow .ql-toolbar button svg,
.ql-bubble.ql-toolbar button svg,
.ql-bubble .ql-toolbar button svg {
  height: 100%;
  float: left;
}
[dir=rtl] .ql-snow.ql-toolbar button svg, [dir=rtl] .ql-snow .ql-toolbar button svg,
[dir=rtl] .ql-bubble.ql-toolbar button svg,
[dir=rtl] .ql-bubble .ql-toolbar button svg {
  float: right;
}
.ql-snow.ql-toolbar input.ql-image[type=file], .ql-snow .ql-toolbar input.ql-image[type=file],
.ql-bubble.ql-toolbar input.ql-image[type=file],
.ql-bubble .ql-toolbar input.ql-image[type=file] {
  display: none;
}
.ql-snow .ql-tooltip,
.ql-bubble .ql-tooltip {
  transform: translateY(0.625rem);
  position: absolute;
}
.ql-snow .ql-tooltip.ql-flip,
.ql-bubble .ql-tooltip.ql-flip {
  transform: translateY(-0.625rem);
}
.ql-snow .ql-tooltip a,
.ql-bubble .ql-tooltip a {
  cursor: pointer;
  text-decoration: none;
}
.ql-snow .ql-formats,
.ql-bubble .ql-formats {
  display: inline-block;
  margin-right: 0.9375rem;
  vertical-align: middle;
}
[dir=rtl] .ql-snow .ql-formats,
[dir=rtl] .ql-bubble .ql-formats {
  margin-right: 0;
  margin-left: 0.9375rem;
}
.ql-snow .ql-formats::after,
.ql-bubble .ql-formats::after {
  content: "";
  display: table;
  clear: both;
}
.ql-snow .ql-picker,
.ql-bubble .ql-picker {
  vertical-align: middle;
  position: relative;
  height: 1.5rem;
  display: inline-block;
  float: left;
}
[dir=rtl] .ql-snow .ql-picker,
[dir=rtl] .ql-bubble .ql-picker {
  float: right;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-options,
.ql-bubble .ql-picker.ql-expanded .ql-picker-options {
  top: 100%;
  display: block;
  z-index: 1;
  margin-top: -0.0625rem;
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label=""])::before, .ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label=""])::before, .ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label=""])::before {
  content: attr(data-label);
}
.ql-snow .ql-picker.ql-header,
.ql-bubble .ql-picker.ql-header {
  width: 6.125rem;
}
.ql-snow .ql-picker.ql-header .ql-picker-label::before,
.ql-snow .ql-picker.ql-header .ql-picker-item::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item::before {
  content: "Normal";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="1"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="1"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="1"]::before {
  content: "Heading 1";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="2"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="2"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="2"]::before {
  content: "Heading 2";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="3"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="3"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="3"]::before {
  content: "Heading 3";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="4"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="4"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="4"]::before {
  content: "Heading 4";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="5"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="5"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="5"]::before {
  content: "Heading 5";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="6"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="6"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="6"]::before {
  content: "Heading 6";
}
.ql-snow .ql-picker.ql-font,
.ql-bubble .ql-picker.ql-font {
  width: 6.75rem;
}
.ql-snow .ql-picker.ql-font .ql-picker-label::before,
.ql-snow .ql-picker.ql-font .ql-picker-item::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item::before {
  content: "Sans Serif";
}
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label[data-value=serif]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {
  content: "Serif";
}
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {
  content: "Monospace";
}
.ql-snow .ql-picker.ql-size,
.ql-bubble .ql-picker.ql-size {
  width: 6.125rem;
}
.ql-snow .ql-picker.ql-size .ql-picker-label::before,
.ql-snow .ql-picker.ql-size .ql-picker-item::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item::before {
  content: "Normal";
}
.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value=small]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=small]::before {
  content: "Small";
}
.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value=large]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=large]::before {
  content: "Large";
}
.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {
  content: "Huge";
}
.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg,
.ql-bubble .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg {
  position: absolute;
  top: 50%;
  right: 0;
  margin-top: -0.5625rem;
  width: 1.125rem;
}
[dir=rtl] .ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg,
[dir=rtl] .ql-bubble .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg {
  right: auto;
  left: 0;
}
.ql-snow .ql-picker-label,
.ql-bubble .ql-picker-label {
  position: relative;
  display: inline-block;
  padding-right: 0.125rem;
  padding-left: 0.5rem;
  height: 100%;
  width: 100%;
  border: 0.0625rem solid transparent;
  cursor: pointer;
}
.ql-snow .ql-picker-label::before,
.ql-bubble .ql-picker-label::before {
  line-height: 1.375rem;
  display: inline-block;
}
.ql-snow .ql-picker-options,
.ql-bubble .ql-picker-options {
  padding: 0.25rem 0.5rem;
  min-width: 100%;
  position: absolute;
  display: none;
  white-space: nowrap;
}
.ql-snow .ql-picker-options .ql-picker-item,
.ql-bubble .ql-picker-options .ql-picker-item {
  padding-bottom: 0.3125rem;
  padding-top: 0.3125rem;
  display: block;
  cursor: pointer;
}
.ql-snow .ql-color-picker,
.ql-snow .ql-icon-picker,
.ql-bubble .ql-color-picker,
.ql-bubble .ql-icon-picker {
  width: 1.75rem;
}
.ql-snow .ql-color-picker .ql-picker-label,
.ql-snow .ql-icon-picker .ql-picker-label,
.ql-bubble .ql-color-picker .ql-picker-label,
.ql-bubble .ql-icon-picker .ql-picker-label {
  padding: 0.125rem 0.25rem;
}
.ql-snow .ql-icon-picker .ql-picker-options,
.ql-bubble .ql-icon-picker .ql-picker-options {
  padding: 0.25rem 0;
}
.ql-snow .ql-icon-picker .ql-picker-item,
.ql-bubble .ql-icon-picker .ql-picker-item {
  padding: 0.125rem 0.25rem;
  width: 1.5rem;
  height: 1.5rem;
}
.ql-snow .ql-color-picker .ql-picker-options,
.ql-bubble .ql-color-picker .ql-picker-options {
  padding: 0.1875rem 0.3125rem;
  width: 9.5rem;
}
.ql-snow .ql-color-picker .ql-picker-item,
.ql-bubble .ql-color-picker .ql-picker-item {
  float: left;
  margin: 0.125rem;
  padding: 0;
  width: 1rem;
  height: 1rem;
  border: 0.0625rem solid transparent;
}
[dir=rtl] .ql-snow .ql-color-picker .ql-picker-item,
[dir=rtl] .ql-bubble .ql-color-picker .ql-picker-item {
  float: right;
}
.ql-snow .ql-color-picker.ql-background .ql-picker-item,
.ql-bubble .ql-color-picker.ql-background .ql-picker-item {
  background-color: #fff;
}
.ql-snow .ql-color-picker.ql-color .ql-picker-item,
.ql-bubble .ql-color-picker.ql-color .ql-picker-item {
  background-color: #000;
}
[dir=rtl] .ql-snow .ql-italic svg,
[dir=rtl] .ql-snow .ql-list svg,
[dir=rtl] .ql-snow .ql-indent svg,
[dir=rtl] .ql-snow .ql-direction svg,
[dir=rtl] .ql-snow .ql-align svg,
[dir=rtl] .ql-snow .ql-link svg,
[dir=rtl] .ql-snow .ql-image svg,
[dir=rtl] .ql-snow .ql-clean svg,
[dir=rtl] .ql-bubble .ql-italic svg,
[dir=rtl] .ql-bubble .ql-list svg,
[dir=rtl] .ql-bubble .ql-indent svg,
[dir=rtl] .ql-bubble .ql-direction svg,
[dir=rtl] .ql-bubble .ql-align svg,
[dir=rtl] .ql-bubble .ql-link svg,
[dir=rtl] .ql-bubble .ql-image svg,
[dir=rtl] .ql-bubble .ql-clean svg {
  transform: scaleX(-1);
}

.ql-snow.ql-toolbar,
.ql-snow .ql-toolbar {
  background: #fff;
  background-clip: padding-box;
}
.ql-snow .ql-editor {
  min-height: 15rem;
  background: #fff;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-label {
  z-index: 2;
  color: #ccc !important;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill {
  fill: #ccc !important;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke {
  stroke: #ccc !important;
}
.ql-snow .ql-stroke {
  fill: none;
  stroke-width: 2;
  stroke-linejoin: round;
  stroke-linecap: round;
}
.ql-snow .ql-stroke-miter {
  fill: none;
  stroke-width: 2;
  stroke-miterlimit: 10;
}
.ql-snow .ql-picker-label {
  border: 0.0625rem solid transparent;
}
.ql-snow .ql-picker-options {
  border: 0.0625rem solid transparent;
  background-color: #fff;
  background-clip: padding-box;
}
.ql-snow .ql-color-picker .ql-picker-item.ql-selected,
.ql-snow .ql-color-picker .ql-picker-item:hover {
  border-color: #000;
}
.ql-snow .ql-tooltip {
  display: flex;
  padding: 0.3125rem 0.75rem;
  background-color: #fff;
  background-clip: padding-box;
  white-space: nowrap;
}
.ql-snow .ql-tooltip::before {
  content: "Visit URL:";
  margin-right: 0.5rem;
  line-height: 1.625rem;
}
[dir=rtl] .ql-snow .ql-tooltip::before {
  margin-right: 0;
  margin-left: 0.5rem;
}
.ql-snow .ql-tooltip input[type=text] {
  display: none;
  margin: 0;
  padding: 0.1875rem 0.3125rem;
  width: 10.625rem;
  height: 1.625rem;
  font-size: 0.8125rem;
}
.ql-snow .ql-tooltip a.ql-preview {
  display: inline-block;
  vertical-align: top;
  max-width: 12.5rem;
  overflow-x: hidden;
  text-overflow: ellipsis;
}
.ql-snow .ql-tooltip a.ql-action::after {
  content: "Edit";
  margin-left: 1rem;
  padding-right: 0.5rem;
  border-right: 0.0625rem solid #ccc;
}
[dir=rtl] .ql-snow .ql-tooltip a.ql-action::after {
  margin-left: 0;
  margin-right: 1rem;
  padding-left: 0.5rem;
  padding-right: 0;
  border-right: 0;
  border-left: 0.0625rem solid #ccc;
}
.ql-snow .ql-tooltip a.ql-remove::before {
  content: "Remove";
  margin-left: 0.5rem;
}
[dir=rtl] .ql-snow .ql-tooltip a.ql-remove::before {
  margin-right: 0.5rem;
  margin-left: 0;
}
.ql-snow .ql-tooltip a {
  line-height: 1.625rem;
}
.ql-snow .ql-tooltip.ql-editing a.ql-preview, .ql-snow .ql-tooltip.ql-editing a.ql-remove {
  display: none;
}
.ql-snow .ql-tooltip.ql-editing input[type=text] {
  display: inline-block;
}
.ql-snow .ql-tooltip.ql-editing a.ql-action::after {
  content: "Save";
  border-right: 0;
  padding-right: 0;
}
[dir=rtl] .ql-snow .ql-tooltip.ql-editing a.ql-action::after {
  border-left: 0;
  padding-left: 0;
}
.ql-snow .ql-tooltip[data-mode=link]::before {
  content: "Enter link:";
}
.ql-snow .ql-tooltip[data-mode=formula]::before {
  content: "Enter formula:";
}
.ql-snow .ql-tooltip[data-mode=video]::before {
  content: "Enter video:";
}

.ql-bubble.ql-toolbar button:hover,
.ql-bubble.ql-toolbar button:focus,
.ql-bubble.ql-toolbar button.ql-active,
.ql-bubble.ql-toolbar .ql-picker-label:hover,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active,
.ql-bubble.ql-toolbar .ql-picker-item:hover,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected,
.ql-bubble .ql-toolbar button:hover,
.ql-bubble .ql-toolbar button:focus,
.ql-bubble .ql-toolbar button.ql-active,
.ql-bubble .ql-toolbar .ql-picker-label:hover,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active,
.ql-bubble .ql-toolbar .ql-picker-item:hover,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected {
  color: #fff;
}
.ql-bubble.ql-toolbar button:hover .ql-stroke,
.ql-bubble.ql-toolbar button:focus .ql-stroke,
.ql-bubble.ql-toolbar button.ql-active .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,
.ql-bubble.ql-toolbar button:hover .ql-stroke-miter,
.ql-bubble.ql-toolbar button:focus .ql-stroke-miter,
.ql-bubble.ql-toolbar button.ql-active .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,
.ql-bubble .ql-toolbar button:hover .ql-stroke,
.ql-bubble .ql-toolbar button:focus .ql-stroke,
.ql-bubble .ql-toolbar button.ql-active .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,
.ql-bubble .ql-toolbar button:hover .ql-stroke-miter,
.ql-bubble .ql-toolbar button:focus .ql-stroke-miter,
.ql-bubble .ql-toolbar button.ql-active .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter {
  stroke: #fff;
}
.ql-bubble.ql-toolbar button:hover .ql-fill,
.ql-bubble.ql-toolbar button:focus .ql-fill,
.ql-bubble.ql-toolbar button.ql-active .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-fill,
.ql-bubble.ql-toolbar button:hover .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar button:focus .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar button.ql-active .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar button:hover .ql-fill,
.ql-bubble .ql-toolbar button:focus .ql-fill,
.ql-bubble .ql-toolbar button.ql-active .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-fill,
.ql-bubble .ql-toolbar button:hover .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar button:focus .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar button.ql-active .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill {
  fill: #fff;
}
@media (pointer: coarse) {
  .ql-bubble.ql-toolbar button:hover:not(.ql-active),
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) {
    color: #ccc;
  }
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill {
    fill: #ccc;
  }
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter {
    stroke: #ccc;
  }
}
.ql-bubble .ql-stroke {
  fill: none;
  stroke: #ccc;
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-width: 2;
}
.ql-bubble .ql-stroke-miter {
  fill: none;
  stroke: #ccc;
  stroke-miterlimit: 10;
  stroke-width: 2;
}
.ql-bubble .ql-fill,
.ql-bubble .ql-stroke.ql-fill {
  fill: #ccc;
}
.ql-bubble .ql-picker {
  color: #ccc;
}
.ql-bubble .ql-picker.ql-expanded .ql-picker-label {
  z-index: 2;
  color: #777;
}
.ql-bubble .ql-picker.ql-expanded .ql-picker-label .ql-fill {
  fill: #777;
}
.ql-bubble .ql-picker.ql-expanded .ql-picker-label .ql-stroke {
  stroke: #777;
}
.ql-bubble .ql-picker-options {
  background-color: #444;
}
.ql-bubble .ql-color-picker .ql-picker-label svg,
.ql-bubble .ql-icon-picker .ql-picker-label svg {
  right: 0.25rem;
}
[dir=rtl] .ql-bubble .ql-color-picker .ql-picker-label svg,
[dir=rtl] .ql-bubble .ql-icon-picker .ql-picker-label svg {
  right: auto;
  left: 0.25rem;
}
.ql-bubble .ql-color-picker .ql-color-picker svg {
  margin: 0.0625rem;
}
.ql-bubble .ql-color-picker .ql-picker-item.ql-selected,
.ql-bubble .ql-color-picker .ql-picker-item:hover {
  border-color: #fff;
}
.ql-bubble .ql-toolbar .ql-formats {
  margin: 0.5rem 0.75rem 0.5rem 0;
}
[dir=rtl] .ql-bubble .ql-toolbar .ql-formats {
  margin: 0.5rem 0 0.5rem 0.75rem;
}
.ql-bubble .ql-toolbar .ql-formats:first-child {
  margin-left: 0.75rem;
}
[dir=rtl] .ql-bubble .ql-toolbar .ql-formats:first-child {
  margin-right: 0.75rem;
}
.ql-bubble .ql-tooltip-arrow {
  content: " ";
  position: absolute;
  display: block;
  left: 50%;
  margin-left: -0.375rem;
  border-right: 0.375rem solid transparent;
  border-left: 0.375rem solid transparent;
}
.ql-bubble .ql-tooltip {
  background-color: #444;
  color: #fff;
}
.ql-bubble .ql-tooltip:not(.ql-flip) .ql-tooltip-arrow {
  top: -0.375rem;
  border-bottom: 0.375rem solid #444;
}
.ql-bubble .ql-tooltip.ql-flip .ql-tooltip-arrow {
  bottom: -0.375rem;
  border-top: 0.375rem solid #444;
}
.ql-bubble .ql-tooltip.ql-editing .ql-tooltip-editor {
  display: block;
}
.ql-bubble .ql-tooltip.ql-editing .ql-formats {
  visibility: hidden;
}
.ql-bubble .ql-tooltip-editor {
  display: none;
}
.ql-bubble .ql-tooltip-editor input[type=text] {
  position: absolute;
  padding: 0.625rem 1.25rem;
  height: 100%;
  width: 100%;
  outline: none;
  background: transparent;
  border: none;
  color: #fff;
  font-size: 0.8125rem;
}
.ql-bubble .ql-tooltip-editor a {
  position: absolute;
  right: 1.25rem;
  top: 0.625rem;
}
[dir=rtl] .ql-bubble .ql-tooltip-editor a {
  right: auto;
  left: 1.25rem;
}
.ql-bubble .ql-tooltip-editor a::before {
  content: "×";
  color: #ccc;
  font-size: 1rem;
  font-weight: bold;
}
.ql-bubble.ql-container:not(.ql-disabled) a {
  white-space: nowrap;
  position: relative;
}
.ql-bubble.ql-container:not(.ql-disabled) a::before, .ql-bubble.ql-container:not(.ql-disabled) a::after {
  margin-left: 50%;
  position: absolute;
  visibility: hidden;
  left: 0;
  transition: visibility 0s ease 200ms;
  transform: translate(-50%, -100%);
}
.ql-bubble.ql-container:not(.ql-disabled) a:hover::before, .ql-bubble.ql-container:not(.ql-disabled) a:hover::after {
  visibility: visible;
}
.ql-bubble.ql-container:not(.ql-disabled) a::before {
  content: attr(href);
  top: -0.3125rem;
  z-index: 1;
  overflow: hidden;
  padding: 0.3125rem 0.9375rem;
  border-radius: 0.9375rem;
  background-color: #444;
  text-decoration: none;
  color: #fff;
  font-weight: normal;
  font-size: 0.75rem;
}
.ql-bubble.ql-container:not(.ql-disabled) a::after {
  content: " ";
  top: 0;
  height: 0;
  width: 0;
  border-top: 0.375rem solid #444;
  border-right: 0.375rem solid transparent;
  border-left: 0.375rem solid transparent;
}

.light-style .ql-editor.ql-blank:before {
  color: #b7b5be;
}
.light-style .ql-snow.ql-toolbar .ql-picker-options, .light-style .ql-snow .ql-toolbar .ql-picker-options,
.light-style .ql-bubble.ql-toolbar .ql-picker-options,
.light-style .ql-bubble .ql-toolbar .ql-picker-options {
  box-shadow: 0 0.25rem 1rem rgba(165, 163, 174, 0.45);
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="1"]::before {
  font-size: 2.375rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="2"]::before {
  font-size: 2rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="3"]::before {
  font-size: 1.625rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="4"]::before {
  font-size: 1.375rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="5"]::before {
  font-size: 1.125rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="6"]::before {
  font-size: 0.9375rem;
}
.light-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before,
.light-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {
  font-family: Georgia, "Times New Roman", serif;
}
.light-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before,
.light-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {
  font-family: "SFMono-Regular", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}
.light-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before,
.light-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=small]::before {
  font-size: 0.75rem;
}
.light-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before,
.light-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=large]::before {
  font-size: 1rem;
}
.light-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before,
.light-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {
  font-size: 1.25rem;
}
.light-style .ql-snow .ql-editor.ql-blank::before {
  padding: 0 1.25rem;
}
.light-style .ql-snow.ql-container {
  border: 0.0625rem solid #dbdade;
}
.light-style .ql-snow .ql-editor {
  padding: 1.25rem;
}
.light-style .ql-snow.ql-toolbar, .light-style .ql-snow .ql-toolbar {
  border: 0.0625rem solid #dbdade;
}
@media (pointer: coarse) {
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active), .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) {
    color: #6f6b7d;
  }
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter, .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter {
    stroke: #6f6b7d;
  }
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill, .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill {
    fill: #6f6b7d;
  }
}
.light-style .ql-snow.ql-toolbar + .ql-container.ql-snow {
  border-top: 0;
}
.light-style .ql-snow .ql-stroke {
  stroke: #6f6b7d;
}
.light-style .ql-snow .ql-fill,
.light-style .ql-snow .ql-stroke.ql-fill {
  fill: #6f6b7d;
}
.light-style .ql-snow .ql-stroke-miter {
  stroke: #6f6b7d;
}
.light-style .ql-snow .ql-picker {
  color: #6f6b7d;
}
.light-style .ql-snow .ql-picker.ql-expanded .ql-picker-options {
  border-color: #dbdade;
}
.light-style .ql-snow .ql-picker.ql-expanded .ql-picker-label {
  border-color: #dbdade;
}
.light-style .ql-snow .ql-tooltip {
  border: 0px solid #dbdade;
  color: #6f6b7d;
  box-shadow: 0 0.25rem 1rem rgba(165, 163, 174, 0.45);
}
.light-style .ql-snow .ql-tooltip input[type=text] {
  border: 0.0625rem solid #dbdade;
}
.light-style .ql-bubble .ql-tooltip {
  border-radius: 0.375rem;
  z-index: 1090;
}

.dark-style .ql-editor.ql-blank:before {
  color: #5e6692;
}
.dark-style .ql-snow .ql-tooltip,
.dark-style .ql-bubble .ql-tooltip {
  background: #25293c;
}
.dark-style .ql-snow.ql-toolbar .ql-picker-options, .dark-style .ql-snow .ql-toolbar .ql-picker-options,
.dark-style .ql-bubble.ql-toolbar .ql-picker-options,
.dark-style .ql-bubble .ql-toolbar .ql-picker-options {
  box-shadow: 0 0.25rem 1rem rgba(15, 20, 34, 0.55);
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="1"]::before {
  font-size: 2.375rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="2"]::before {
  font-size: 2rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="3"]::before {
  font-size: 1.625rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="4"]::before {
  font-size: 1.375rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="5"]::before {
  font-size: 1.125rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="6"]::before {
  font-size: 0.9375rem;
}
.dark-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before,
.dark-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {
  font-family: Georgia, "Times New Roman", serif;
}
.dark-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before,
.dark-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {
  font-family: "SFMono-Regular", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}
.dark-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before,
.dark-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=small]::before {
  font-size: 0.75rem;
}
.dark-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before,
.dark-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=large]::before {
  font-size: 1rem;
}
.dark-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before,
.dark-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {
  font-size: 1.25rem;
}
.dark-style .ql-snow .ql-editor.ql-blank::before {
  padding: 0 1.25rem;
}
.dark-style .ql-snow.ql-container {
  border: 0.0625rem solid #434968;
}
.dark-style .ql-snow .ql-editor {
  padding: 1.25rem;
  background: #2f3349;
}
.dark-style .ql-snow .ql-picker-options {
  background: #2f3349;
}
.dark-style .ql-snow.ql-toolbar, .dark-style .ql-snow .ql-toolbar {
  border: 0.0625rem solid #434968;
  background: #2f3349;
}
@media (pointer: coarse) {
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active), .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) {
    color: #b6bee3;
  }
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter, .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter {
    stroke: #b6bee3;
  }
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill, .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill {
    fill: #b6bee3;
  }
}
.dark-style .ql-snow.ql-toolbar + .ql-container.ql-snow {
  border-top: 0;
}
.dark-style .ql-snow .ql-stroke-miter {
  stroke: #b6bee3;
}
.dark-style .ql-snow .ql-stroke {
  stroke: #b6bee3;
}
.dark-style .ql-snow .ql-fill,
.dark-style .ql-snow .ql-stroke.ql-fill {
  fill: #b6bee3;
}
.dark-style .ql-snow .ql-picker {
  color: #b6bee3;
}
.dark-style .ql-snow .ql-picker.ql-expanded .ql-picker-options {
  border-color: #434968;
}
.dark-style .ql-snow .ql-picker.ql-expanded .ql-picker-label {
  border-color: #434968;
}
.dark-style .ql-snow .ql-tooltip {
  border: 0px solid #434968;
  color: #b6bee3;
  box-shadow: 0 0.25rem 1rem rgba(15, 20, 34, 0.55);
}
.dark-style .ql-snow .ql-tooltip input[type=text] {
  border: 0.0625rem solid #434968;
}
.dark-style .ql-bubble .ql-tooltip {
  border-radius: 0.375rem;
  z-index: 1090;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9saWJzL3F1aWxsL2VkaXRvci5zY3NzIiwidmVuZG9yL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvX3N1cHBvcnQuc2NzcyIsInZlbmRvci9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvX3ZhcmlhYmxlcy5zY3NzIiwidmVuZG9yL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9fdmFyaWFibGVzLWRhcmsuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBUUE7RUFDRTtFQUNBO0VBQ0E7O0FBRUE7RUFDRTs7QUFHRjtFQUNFOzs7QUFJSjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FDTUk7RURIRjtFQUNBOzs7QUFJSjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFFQTtFQUNFOztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFLSjtBQUFBO0VBRUU7O0FBRUE7QUFBQTtFQUNFOztBQUdGO0FBQUE7QUFBQTtBQUFBO0VBRUU7O0FBR0Y7QUFBQTtFQUNFOztBQUdGO0FBQUE7RUFDRTs7QUFHRjtBQUFBO0VBQ0U7O0FBR0Y7QUFBQTtFQUNFOztBQUdGO0FBQUE7QUFBQTtBQUFBO0VBRUU7O0FBR0Y7QUFBQTtFQUNFOztBQUlBO0FBQUE7RUFDRTs7QUFHRjtBQUFBO0VBQ0U7O0FBSUo7QUFBQTtFQUNFOztBQUdGO0FBQUE7QUFBQTtFQUVFO0VBQ0E7O0FBRUE7QUFBQTtBQUFBO0VBQ0U7RUFDQTtFQUNBOztBQUdGO0FBQUE7QUFBQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBRUE7QUFBQTtBQUFBO0VBQ0U7O0FDdEdGO0FBQUE7QUFBQTtFRDBHRTs7QUFHRjtBQUFBO0FBQUE7RUFDRTtFQUNBOztBQy9HRjtBQUFBO0FBQUE7RURrSEk7O0FBS047QUFBQTtBQUFBO0VBQ0U7O0FBSUo7QUFBQTtFQUNFO0VBQ0E7O0FBRUE7QUFBQTtFQUNFOztBQUdGO0FBQUE7RUFDRTtFQUNBOztBQUlKO0FBQUE7RUFDRTtFQUNBO0VBQ0E7O0FDN0lFO0FBQUE7RURnSkE7RUFDQTs7QUFHRjtBQUFBO0VBQ0U7RUFDQTtFQUNBOztBQUlKO0FBQUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQ2hLRTtBQUFBO0VEbUtBOztBQUdGO0FBQUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTs7QUFNQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtFQUVFOztBQUlKO0FBQUE7RUFDRTs7QUFJRTtBQUFBO0FBQUE7QUFBQTtFQUNFOztBQUdGO0FBQUE7QUFBQTtBQUFBO0VBQ0U7O0FBR0Y7QUFBQTtBQUFBO0FBQUE7RUFDRTs7QUFHRjtBQUFBO0FBQUE7QUFBQTtFQUNFOztBQUdGO0FBQUE7QUFBQTtBQUFBO0VBQ0U7O0FBR0Y7QUFBQTtBQUFBO0FBQUE7RUFDRTs7QUFHRjtBQUFBO0FBQUE7QUFBQTtFQUNFOztBQUtOO0FBQUE7RUFDRTs7QUFJRTtBQUFBO0FBQUE7QUFBQTtFQUNFOztBQUdGO0FBQUE7QUFBQTtBQUFBO0VBQ0U7O0FBR0Y7QUFBQTtBQUFBO0FBQUE7RUFDRTs7QUFLTjtBQUFBO0VBQ0U7O0FBSUU7QUFBQTtBQUFBO0FBQUE7RUFDRTs7QUFHRjtBQUFBO0FBQUE7QUFBQTtFQUNFOztBQUdGO0FBQUE7QUFBQTtBQUFBO0VBQ0U7O0FBR0Y7QUFBQTtBQUFBO0FBQUE7RUFDRTs7QUFLTjtBQUFBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUN4UUE7QUFBQTtFRDJRRTtFQUNBOztBQUtOO0FBQUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUVBO0FBQUE7RUFDRTtFQUNBOztBQUlKO0FBQUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUVBO0FBQUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTs7QUFJSjtBQUFBO0FBQUE7QUFBQTtFQUVFOztBQUVBO0FBQUE7QUFBQTtBQUFBO0VBQ0U7O0FBS0Y7QUFBQTtFQUNFOztBQUdGO0FBQUE7RUFDRTtFQUNBO0VBQ0E7O0FBS0Y7QUFBQTtFQUNFO0VBQ0E7O0FBR0Y7QUFBQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUNqVkE7QUFBQTtFRG9WRTs7QUFJSjtBQUFBO0VBQ0Usa0JFL1dFOztBRmtYSjtBQUFBO0VBQ0U7O0FBS0Y7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7RUFRRTs7O0FBTUo7QUFBQTtFQUVFLFlFeFlJO0VGeVlKOztBQUdGO0VBQ0U7RUFDQSxZRTlZSTs7QUZpWk47RUFDRTtFQUNBOztBQUVBO0VBQ0U7O0FBR0Y7RUFDRTs7QUFJSjtFQUNFO0VBQ0E7RUFDQTtFQUNBOztBQUdGO0VBQ0U7RUFDQTtFQUNBOztBQUdGO0VBQ0U7O0FBR0Y7RUFDRTtFQUNBLGtCRWpiSTtFRmtiSjs7QUFHRjtBQUFBO0VBRUU7O0FBR0Y7RUFDRTtFQUNBO0VBQ0Esa0JFN2JJO0VGOGJKO0VBQ0E7O0FBRUE7RUFDRTtFQUNBO0VBQ0E7O0FDOWFBO0VEaWJFO0VBQ0E7O0FBSUo7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7O0FDM2NBO0VEOGNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFJSjtFQUNFO0VBQ0E7O0FDemRBO0VENGRFO0VBQ0E7O0FBSUo7RUFDRTs7QUFHRjtFQUVFOztBQUdGO0VBQ0U7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7O0FDamZBO0VEb2ZFO0VBQ0E7O0FBSUo7RUFDRTs7QUFHRjtFQUNFOztBQUdGO0VBQ0U7OztBQVFGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7RUFPRSxPRXZpQkU7O0FGMGlCSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtFQWNFLFFFeGpCRTs7QUYwakJKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0VBY0UsTUV4a0JFOztBRjJrQko7RUFDRTtBQUFBO0lBQ0U7O0VBRUY7QUFBQTtBQUFBO0FBQUE7SUFFRTs7RUFFRjtBQUFBO0FBQUE7QUFBQTtJQUVFOzs7QUFLTjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTs7QUFHRjtBQUFBO0VBRUU7O0FBR0Y7RUFDRTs7QUFFQTtFQUNFO0VBQ0E7O0FBRUE7RUFDRTs7QUFHRjtFQUNFOztBQUtOO0VBQ0U7O0FBR0Y7QUFBQTtFQUVFOztBQy9tQkU7QUFBQTtFRGtuQkE7RUFDQTs7QUFLRjtFQUNFOztBQUdGO0FBQUE7RUFFRSxjRXBwQkU7O0FGd3BCTjtFQUNFOztBQ25vQkU7RURzb0JBOztBQUdGO0VBQ0U7O0FDMW9CQTtFRDZvQkU7O0FBS047RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFHRjtFQUNFO0VBQ0EsT0VwckJJOztBRnNyQko7RUFDRTtFQUNBOztBQUdGO0VBQ0U7RUFDQTs7QUFJQTtFQUNFOztBQUdGO0VBQ0U7O0FBS047RUFDRTs7QUFFQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsT0V0dEJFO0VGdXRCRjs7QUFHRjtFQUNFO0VBQ0E7RUFDQTs7QUN2c0JBO0VEMHNCRTtFQUNBOztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7O0FBS047RUFDRTtFQUNBOztBQUVBO0VBRUU7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUdGO0VBRUU7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsT0V6d0JFO0VGMHdCRjtFQUNBOztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQVFGO0VBQ0UsT0V4WG9COztBRjZYcEI7QUFBQTtBQUFBO0VBRUUsWUV4b0JLOztBRjZvQkg7QUFBQTtFQUNFLFdFbmxCRzs7QUZzbEJMO0FBQUE7RUFDRSxXRXRsQkc7O0FGeWxCTDtBQUFBO0VBQ0UsV0V6bEJHOztBRjRsQkw7QUFBQTtFQUNFLFdFNWxCRzs7QUYrbEJMO0FBQUE7RUFDRSxXRS9sQkc7O0FGa21CTDtBQUFBO0VBQ0UsV0V4bkJLOztBRjZuQlA7QUFBQTtFQUNFLGFFdm9CUTs7QUYwb0JWO0FBQUE7RUFDRSxhRTFvQlk7O0FGK29CZDtBQUFBO0VBQ0UsV0Vyb0JHOztBRndvQkw7QUFBQTtFQUNFLFdFMW9CRzs7QUY2b0JMO0FBQUE7RUFDRSxXRS9vQkc7O0FGc3BCVDtFQUNFOztBQUdGO0VBQ0U7O0FBR0Y7RUFDRSxTRXBqQmM7O0FGdWpCaEI7RUFFRTs7QUFFQTtFQUNFO0lBQ0UsT0Vyd0JDOztFRnV3Qkg7QUFBQTtBQUFBO0lBRUUsUUV6d0JDOztFRjJ3Qkg7QUFBQTtBQUFBO0lBRUUsTUU3d0JDOzs7QUZreEJQO0VBQ0U7O0FBR0Y7RUFDRSxRRXZ4Qks7O0FGMHhCUDtBQUFBO0VBRUUsTUU1eEJLOztBRit4QlA7RUFDRSxRRWh5Qks7O0FGa3lCUDtFQUNFLE9FbnlCSzs7QUZxeUJMO0VBQ0UsY0Vqd0JLOztBRm93QlA7RUFDRSxjRXJ3Qks7O0FGeXdCVDtFQUNFO0VBQ0EsT0VoekJLO0VGaXpCTCxZRS92Qks7O0FGaXdCTDtFQUNFOztBQUtOO0VBQ0UsZUVoeEJVO0VGaXhCVjs7O0FBUUY7RUFDRSxPRzd4Qm9COztBSGt5QnBCO0FBQUE7RUFDRSxZRy8yQkU7O0FIaTNCSjtBQUFBO0FBQUE7RUFFRSxZR2gyQks7O0FIcTJCSDtBQUFBO0VBQ0UsV0V2dUJHOztBRjB1Qkw7QUFBQTtFQUNFLFdFMXVCRzs7QUY2dUJMO0FBQUE7RUFDRSxXRTd1Qkc7O0FGZ3ZCTDtBQUFBO0VBQ0UsV0VodkJHOztBRm12Qkw7QUFBQTtFQUNFLFdFbnZCRzs7QUZzdkJMO0FBQUE7RUFDRSxXRTV3Qks7O0FGaXhCUDtBQUFBO0VBQ0UsYUUzeEJROztBRjh4QlY7QUFBQTtFQUNFLGFFOXhCWTs7QUZteUJkO0FBQUE7RUFDRSxXRXp4Qkc7O0FGNHhCTDtBQUFBO0VBQ0UsV0U5eEJHOztBRml5Qkw7QUFBQTtFQUNFLFdFbnlCRzs7QUYweUJUO0VBQ0U7O0FBR0Y7RUFDRTs7QUFHRjtFQUNFLFNFeHNCYztFRnlzQmQsWUc1NEJFOztBSCs0Qko7RUFDRSxZR2g1QkU7O0FIbTVCSjtFQUVFO0VBQ0EsWUd0NUJFOztBSHc1QkY7RUFDRTtJQUNFLE9HbDhCQzs7RUhvOEJIO0FBQUE7QUFBQTtJQUVFLFFHdDhCQzs7RUh3OEJIO0FBQUE7QUFBQTtJQUVFLE1HMThCQzs7O0FIKzhCUDtFQUNFOztBQUdGO0VBQ0UsUUdwOUJLOztBSHU5QlA7RUFDRSxRR3g5Qks7O0FIMjlCUDtBQUFBO0VBRUUsTUc3OUJLOztBSGcrQlA7RUFDRSxPR2orQks7O0FIbStCTDtFQUNFLGNHdjlCSzs7QUgwOUJQO0VBQ0UsY0czOUJLOztBSCs5QlQ7RUFDRTtFQUNBLE9HOStCSztFSCsrQkwsWUc5OUJLOztBSGcrQkw7RUFDRTs7QUFLTjtFQUNFLGVFMzZCVTtFRjQ2QlYiLCJmaWxlIjoidmVuZG9yL2xpYnMvcXVpbGwvZWRpdG9yLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEVkaXRvclxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG5AdXNlICcuLi8uLi9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvaW5jbHVkZScgYXMgbGlnaHQ7XHJcbkB1c2UgJy4uLy4uL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9pbmNsdWRlLWRhcmsnIGFzIGRhcms7XHJcbkBpbXBvcnQgJy4uLy4uL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvbGlicyc7XHJcblxyXG4vLyBjb21tb24gc3R5bGVzXHJcbi5xbC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbjogMDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICYucWwtZGlzYWJsZWQgLnFsLWVkaXRvciB1bFtkYXRhLWNoZWNrZWRdID4gbGk6OmJlZm9yZSB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB9XHJcblxyXG4gICYucWwtZGlzYWJsZWQgLnFsLXRvb2x0aXAge1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIH1cclxufVxyXG5cclxuLnFsLWNsaXBib2FyZCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcclxuICBsZWZ0OiAtNjI1MHJlbTtcclxuICBoZWlnaHQ6IDAuMDYyNXJlbTtcclxuICB0b3A6IDUwJTtcclxuXHJcbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XHJcbiAgICBsZWZ0OiBhdXRvO1xyXG4gICAgcmlnaHQ6IC02MjUwcmVtO1xyXG4gIH1cclxufVxyXG5cclxuLnFsLWVkaXRvciB7XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgdGFiLXNpemU6IDQ7XHJcbiAgLW1vei10YWItc2l6ZTogNDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcclxuXHJcbiAgPiAqIHtcclxuICAgIGN1cnNvcjogdGV4dDtcclxuICB9XHJcblxyXG4gICYucWwtYmxhbms6OmJlZm9yZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiBhdHRyKGRhdGEtcGxhY2Vob2xkZXIpO1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBUaGVtZXNcclxuLnFsLXNub3csXHJcbi5xbC1idWJibGUge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblxyXG4gICoge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcblxyXG4gIC5xbC1vdXQtYm90dG9tLFxyXG4gIC5xbC1vdXQtdG9wIHtcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICB9XHJcblxyXG4gIC5xbC1oaWRkZW4ge1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLnFsLWV2ZW4ge1xyXG4gICAgZmlsbC1ydWxlOiBldmVub2RkO1xyXG4gIH1cclxuXHJcbiAgLnFsLWVtcHR5IHtcclxuICAgIGZpbGw6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAucWwtdHJhbnNwYXJlbnQge1xyXG4gICAgb3BhY2l0eTogMC40O1xyXG4gIH1cclxuXHJcbiAgLnFsLXRoaW4sXHJcbiAgLnFsLXN0cm9rZS5xbC10aGluIHtcclxuICAgIHN0cm9rZS13aWR0aDogMTtcclxuICB9XHJcblxyXG4gIC5xbC1lZGl0b3IgYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICB9XHJcblxyXG4gIC5xbC1kaXJlY3Rpb24ucWwtYWN0aXZlIHtcclxuICAgIHN2ZzpsYXN0LWNoaWxkIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgfVxyXG5cclxuICAgIHN2ZzpmaXJzdC1jaGlsZCB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucWwtZGlyZWN0aW9uIHN2ZzpsYXN0LWNoaWxkIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAmLnFsLXRvb2xiYXIsXHJcbiAgJiAucWwtdG9vbGJhciB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIH1cclxuXHJcbiAgICBidXR0b24ge1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBwYWRkaW5nOiAwLjE4NzVyZW0gMC4zMTI1cmVtO1xyXG4gICAgICBoZWlnaHQ6IDEuNXJlbTtcclxuICAgICAgd2lkdGg6IDEuNzVyZW07XHJcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgJjphY3RpdmU6aG92ZXIge1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwge1xyXG4gICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgfVxyXG5cclxuICAgICAgc3ZnIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGFwcC1ydGwge1xyXG4gICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlucHV0LnFsLWltYWdlW3R5cGU9J2ZpbGUnXSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucWwtdG9vbHRpcCB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC42MjVyZW0pO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG5cclxuICAgICYucWwtZmxpcCB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMC42MjVyZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIGEge1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xbC1mb3JtYXRzIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi1yaWdodDogMC45Mzc1cmVtO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHJcbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICBtYXJnaW4tbGVmdDogMC45Mzc1cmVtO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgICBjbGVhcjogYm90aDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xbC1waWNrZXIge1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogMS41cmVtO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcblxyXG4gICAgQGluY2x1ZGUgYXBwLXJ0bCB7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuICAgIH1cclxuXHJcbiAgICAmLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItb3B0aW9ucyB7XHJcbiAgICAgIHRvcDogMTAwJTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgIG1hcmdpbi10b3A6IC0wLjA2MjVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgJi5xbC1oZWFkZXIsXHJcbiAgICAmLnFsLWZvbnQsXHJcbiAgICAmLnFsLXNpemUge1xyXG4gICAgICAucWwtcGlja2VyLWxhYmVsW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD0nJ10pOjpiZWZvcmUsXHJcbiAgICAgIC5xbC1waWNrZXItaXRlbVtkYXRhLWxhYmVsXTpub3QoW2RhdGEtbGFiZWw9JyddKTo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBhdHRyKGRhdGEtbGFiZWwpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5xbC1oZWFkZXIge1xyXG4gICAgICB3aWR0aDogNi4xMjVyZW07XHJcblxyXG4gICAgICAucWwtcGlja2VyLWxhYmVsLFxyXG4gICAgICAucWwtcGlja2VyLWl0ZW0ge1xyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICBjb250ZW50OiAnTm9ybWFsJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZbZGF0YS12YWx1ZT0nMSddOjpiZWZvcmUge1xyXG4gICAgICAgICAgY29udGVudDogJ0hlYWRpbmcgMSc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmW2RhdGEtdmFsdWU9JzInXTo6YmVmb3JlIHtcclxuICAgICAgICAgIGNvbnRlbnQ6ICdIZWFkaW5nIDInO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJltkYXRhLXZhbHVlPSczJ106OmJlZm9yZSB7XHJcbiAgICAgICAgICBjb250ZW50OiAnSGVhZGluZyAzJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZbZGF0YS12YWx1ZT0nNCddOjpiZWZvcmUge1xyXG4gICAgICAgICAgY29udGVudDogJ0hlYWRpbmcgNCc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmW2RhdGEtdmFsdWU9JzUnXTo6YmVmb3JlIHtcclxuICAgICAgICAgIGNvbnRlbnQ6ICdIZWFkaW5nIDUnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJltkYXRhLXZhbHVlPSc2J106OmJlZm9yZSB7XHJcbiAgICAgICAgICBjb250ZW50OiAnSGVhZGluZyA2JztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLnFsLWZvbnQge1xyXG4gICAgICB3aWR0aDogNi43NXJlbTtcclxuXHJcbiAgICAgIC5xbC1waWNrZXItbGFiZWwsXHJcbiAgICAgIC5xbC1waWNrZXItaXRlbSB7XHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgIGNvbnRlbnQ6ICdTYW5zIFNlcmlmJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZbZGF0YS12YWx1ZT0nc2VyaWYnXTo6YmVmb3JlIHtcclxuICAgICAgICAgIGNvbnRlbnQ6ICdTZXJpZic7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmW2RhdGEtdmFsdWU9J21vbm9zcGFjZSddOjpiZWZvcmUge1xyXG4gICAgICAgICAgY29udGVudDogJ01vbm9zcGFjZSc7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5xbC1zaXplIHtcclxuICAgICAgd2lkdGg6IDYuMTI1cmVtO1xyXG5cclxuICAgICAgLnFsLXBpY2tlci1sYWJlbCxcclxuICAgICAgLnFsLXBpY2tlci1pdGVtIHtcclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgY29udGVudDogJ05vcm1hbCc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmW2RhdGEtdmFsdWU9J3NtYWxsJ106OmJlZm9yZSB7XHJcbiAgICAgICAgICBjb250ZW50OiAnU21hbGwnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJltkYXRhLXZhbHVlPSdsYXJnZSddOjpiZWZvcmUge1xyXG4gICAgICAgICAgY29udGVudDogJ0xhcmdlJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZbZGF0YS12YWx1ZT0naHVnZSddOjpiZWZvcmUge1xyXG4gICAgICAgICAgY29udGVudDogJ0h1Z2UnO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICY6bm90KC5xbC1jb2xvci1waWNrZXIpOm5vdCgucWwtaWNvbi1waWNrZXIpIHN2ZyB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICBtYXJnaW4tdG9wOiAtMC41NjI1cmVtO1xyXG4gICAgICB3aWR0aDogMS4xMjVyZW07XHJcblxyXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcclxuICAgICAgICByaWdodDogYXV0bztcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucWwtcGlja2VyLWxhYmVsIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmctcmlnaHQ6IDAuMTI1cmVtO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM3NXJlbTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnFsLXBpY2tlci1vcHRpb25zIHtcclxuICAgIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtO1xyXG4gICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblxyXG4gICAgLnFsLXBpY2tlci1pdGVtIHtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDAuMzEyNXJlbTtcclxuICAgICAgcGFkZGluZy10b3A6IDAuMzEyNXJlbTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xbC1jb2xvci1waWNrZXIsXHJcbiAgLnFsLWljb24tcGlja2VyIHtcclxuICAgIHdpZHRoOiAxLjc1cmVtO1xyXG5cclxuICAgIC5xbC1waWNrZXItbGFiZWwge1xyXG4gICAgICBwYWRkaW5nOiAwLjEyNXJlbSAwLjI1cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnFsLWljb24tcGlja2VyIHtcclxuICAgIC5xbC1waWNrZXItb3B0aW9ucyB7XHJcbiAgICAgIHBhZGRpbmc6IDAuMjVyZW0gMDtcclxuICAgIH1cclxuXHJcbiAgICAucWwtcGlja2VyLWl0ZW0ge1xyXG4gICAgICBwYWRkaW5nOiAwLjEyNXJlbSAwLjI1cmVtO1xyXG4gICAgICB3aWR0aDogMS41cmVtO1xyXG4gICAgICBoZWlnaHQ6IDEuNXJlbTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xbC1jb2xvci1waWNrZXIge1xyXG4gICAgLnFsLXBpY2tlci1vcHRpb25zIHtcclxuICAgICAgcGFkZGluZzogMC4xODc1cmVtIDAuMzEyNXJlbTtcclxuICAgICAgd2lkdGg6IDkuNXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAucWwtcGlja2VyLWl0ZW0ge1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgbWFyZ2luOiAwLjEyNXJlbTtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgd2lkdGg6IDFyZW07XHJcbiAgICAgIGhlaWdodDogMXJlbTtcclxuICAgICAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XHJcblxyXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcclxuICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLnFsLWJhY2tncm91bmQgLnFsLXBpY2tlci1pdGVtIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHQuJHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICYucWwtY29sb3IgLnFsLXBpY2tlci1pdGVtIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIGFwcC1ydGwge1xyXG4gICAgLnFsLWl0YWxpYyBzdmcsXHJcbiAgICAucWwtbGlzdCBzdmcsXHJcbiAgICAucWwtaW5kZW50IHN2ZyxcclxuICAgIC5xbC1kaXJlY3Rpb24gc3ZnLFxyXG4gICAgLnFsLWFsaWduIHN2ZyxcclxuICAgIC5xbC1saW5rIHN2ZyxcclxuICAgIC5xbC1pbWFnZSBzdmcsXHJcbiAgICAucWwtY2xlYW4gc3ZnIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoLTEpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnFsLXNub3cge1xyXG4gICYucWwtdG9vbGJhcixcclxuICAucWwtdG9vbGJhciB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaWdodC4kd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xyXG4gIH1cclxuXHJcbiAgLnFsLWVkaXRvciB7XHJcbiAgICBtaW4taGVpZ2h0OiAxNXJlbTtcclxuICAgIGJhY2tncm91bmQ6IGxpZ2h0LiR3aGl0ZTtcclxuICB9XHJcblxyXG4gIC5xbC1waWNrZXIucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1sYWJlbCB7XHJcbiAgICB6LWluZGV4OiAyO1xyXG4gICAgY29sb3I6ICNjY2MgIWltcG9ydGFudDtcclxuXHJcbiAgICAucWwtZmlsbCB7XHJcbiAgICAgIGZpbGw6ICNjY2MgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAucWwtc3Ryb2tlIHtcclxuICAgICAgc3Ryb2tlOiAjY2NjICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucWwtc3Ryb2tlIHtcclxuICAgIGZpbGw6IG5vbmU7XHJcbiAgICBzdHJva2Utd2lkdGg6IDI7XHJcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG4gICAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xyXG4gIH1cclxuXHJcbiAgLnFsLXN0cm9rZS1taXRlciB7XHJcbiAgICBmaWxsOiBub25lO1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAyO1xyXG4gICAgc3Ryb2tlLW1pdGVybGltaXQ6IDEwO1xyXG4gIH1cclxuXHJcbiAgLnFsLXBpY2tlci1sYWJlbCB7XHJcbiAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICB9XHJcblxyXG4gIC5xbC1waWNrZXItb3B0aW9ucyB7XHJcbiAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0LiR3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XHJcbiAgfVxyXG5cclxuICAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCxcclxuICAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItaXRlbTpob3ZlciB7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDA7XHJcbiAgfVxyXG5cclxuICAucWwtdG9vbHRpcCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgcGFkZGluZzogMC4zMTI1cmVtIDAuNzVyZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodC4kd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiAnVmlzaXQgVVJMOic7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMC41cmVtO1xyXG4gICAgICBsaW5lLWhlaWdodDogMS42MjVyZW07XHJcblxyXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlucHV0W3R5cGU9J3RleHQnXSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgcGFkZGluZzogMC4xODc1cmVtIDAuMzEyNXJlbTtcclxuICAgICAgd2lkdGg6IDEwLjYyNXJlbTtcclxuICAgICAgaGVpZ2h0OiAxLjYyNXJlbTtcclxuICAgICAgZm9udC1zaXplOiAwLjgxMjVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgYS5xbC1wcmV2aWV3IHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgICBtYXgtd2lkdGg6IDEyLjVyZW07XHJcbiAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB9XHJcblxyXG4gICAgYS5xbC1hY3Rpb246OmFmdGVyIHtcclxuICAgICAgY29udGVudDogJ0VkaXQnO1xyXG4gICAgICBtYXJnaW4tbGVmdDogMXJlbTtcclxuICAgICAgcGFkZGluZy1yaWdodDogMC41cmVtO1xyXG4gICAgICBib3JkZXItcmlnaHQ6IDAuMDYyNXJlbSBzb2xpZCAjY2NjO1xyXG5cclxuICAgICAgQGluY2x1ZGUgYXBwLXJ0bCB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMC41cmVtO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAwO1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAwLjA2MjVyZW0gc29saWQgI2NjYztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGEucWwtcmVtb3ZlOjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiAnUmVtb3ZlJztcclxuICAgICAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcclxuXHJcbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMC41cmVtO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYSB7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjYyNXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmLnFsLWVkaXRpbmcgYS5xbC1wcmV2aWV3LFxyXG4gICAgJi5xbC1lZGl0aW5nIGEucWwtcmVtb3ZlIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAmLnFsLWVkaXRpbmcgaW5wdXRbdHlwZT0ndGV4dCddIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgICYucWwtZWRpdGluZyBhLnFsLWFjdGlvbjo6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiAnU2F2ZSc7XHJcbiAgICAgIGJvcmRlci1yaWdodDogMDtcclxuICAgICAgcGFkZGluZy1yaWdodDogMDtcclxuXHJcbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwge1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAwO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZbZGF0YS1tb2RlPSdsaW5rJ106OmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6ICdFbnRlciBsaW5rOic7XHJcbiAgICB9XHJcblxyXG4gICAgJltkYXRhLW1vZGU9J2Zvcm11bGEnXTo6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogJ0VudGVyIGZvcm11bGE6JztcclxuICAgIH1cclxuXHJcbiAgICAmW2RhdGEtbW9kZT0ndmlkZW8nXTo6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogJ0VudGVyIHZpZGVvOic7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ucWwtYnViYmxlIHtcclxuICAmLnFsLXRvb2xiYXIsXHJcbiAgLnFsLXRvb2xiYXIge1xyXG4gICAgYnV0dG9uOmhvdmVyLFxyXG4gICAgYnV0dG9uOmZvY3VzLFxyXG4gICAgYnV0dG9uLnFsLWFjdGl2ZSxcclxuICAgIC5xbC1waWNrZXItbGFiZWw6aG92ZXIsXHJcbiAgICAucWwtcGlja2VyLWxhYmVsLnFsLWFjdGl2ZSxcclxuICAgIC5xbC1waWNrZXItaXRlbTpob3ZlcixcclxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCB7XHJcbiAgICAgIGNvbG9yOiBsaWdodC4kd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgYnV0dG9uOmhvdmVyIC5xbC1zdHJva2UsXHJcbiAgICBidXR0b246Zm9jdXMgLnFsLXN0cm9rZSxcclxuICAgIGJ1dHRvbi5xbC1hY3RpdmUgLnFsLXN0cm9rZSxcclxuICAgIC5xbC1waWNrZXItbGFiZWw6aG92ZXIgLnFsLXN0cm9rZSxcclxuICAgIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlIC5xbC1zdHJva2UsXHJcbiAgICAucWwtcGlja2VyLWl0ZW06aG92ZXIgLnFsLXN0cm9rZSxcclxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCAucWwtc3Ryb2tlLFxyXG4gICAgYnV0dG9uOmhvdmVyIC5xbC1zdHJva2UtbWl0ZXIsXHJcbiAgICBidXR0b246Zm9jdXMgLnFsLXN0cm9rZS1taXRlcixcclxuICAgIGJ1dHRvbi5xbC1hY3RpdmUgLnFsLXN0cm9rZS1taXRlcixcclxuICAgIC5xbC1waWNrZXItbGFiZWw6aG92ZXIgLnFsLXN0cm9rZS1taXRlcixcclxuICAgIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlIC5xbC1zdHJva2UtbWl0ZXIsXHJcbiAgICAucWwtcGlja2VyLWl0ZW06aG92ZXIgLnFsLXN0cm9rZS1taXRlcixcclxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCAucWwtc3Ryb2tlLW1pdGVyIHtcclxuICAgICAgc3Ryb2tlOiBsaWdodC4kd2hpdGU7XHJcbiAgICB9XHJcbiAgICBidXR0b246aG92ZXIgLnFsLWZpbGwsXHJcbiAgICBidXR0b246Zm9jdXMgLnFsLWZpbGwsXHJcbiAgICBidXR0b24ucWwtYWN0aXZlIC5xbC1maWxsLFxyXG4gICAgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtZmlsbCxcclxuICAgIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlIC5xbC1maWxsLFxyXG4gICAgLnFsLXBpY2tlci1pdGVtOmhvdmVyIC5xbC1maWxsLFxyXG4gICAgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1maWxsLFxyXG4gICAgYnV0dG9uOmhvdmVyIC5xbC1zdHJva2UucWwtZmlsbCxcclxuICAgIGJ1dHRvbjpmb2N1cyAucWwtc3Ryb2tlLnFsLWZpbGwsXHJcbiAgICBidXR0b24ucWwtYWN0aXZlIC5xbC1zdHJva2UucWwtZmlsbCxcclxuICAgIC5xbC1waWNrZXItbGFiZWw6aG92ZXIgLnFsLXN0cm9rZS5xbC1maWxsLFxyXG4gICAgLnFsLXBpY2tlci1sYWJlbC5xbC1hY3RpdmUgLnFsLXN0cm9rZS5xbC1maWxsLFxyXG4gICAgLnFsLXBpY2tlci1pdGVtOmhvdmVyIC5xbC1zdHJva2UucWwtZmlsbCxcclxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCAucWwtc3Ryb2tlLnFsLWZpbGwge1xyXG4gICAgICBmaWxsOiBsaWdodC4kd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChwb2ludGVyOiBjb2Fyc2UpIHtcclxuICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSB7XHJcbiAgICAgICAgY29sb3I6ICNjY2M7XHJcbiAgICAgIH1cclxuICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtZmlsbCxcclxuICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLnFsLWZpbGwge1xyXG4gICAgICAgIGZpbGw6ICNjY2M7XHJcbiAgICAgIH1cclxuICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLFxyXG4gICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UtbWl0ZXIge1xyXG4gICAgICAgIHN0cm9rZTogI2NjYztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnFsLXN0cm9rZSB7XHJcbiAgICBmaWxsOiBub25lO1xyXG4gICAgc3Ryb2tlOiAjY2NjO1xyXG4gICAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcclxuICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcclxuICAgIHN0cm9rZS13aWR0aDogMjtcclxuICB9XHJcblxyXG4gIC5xbC1zdHJva2UtbWl0ZXIge1xyXG4gICAgZmlsbDogbm9uZTtcclxuICAgIHN0cm9rZTogI2NjYztcclxuICAgIHN0cm9rZS1taXRlcmxpbWl0OiAxMDtcclxuICAgIHN0cm9rZS13aWR0aDogMjtcclxuICB9XHJcblxyXG4gIC5xbC1maWxsLFxyXG4gIC5xbC1zdHJva2UucWwtZmlsbCB7XHJcbiAgICBmaWxsOiAjY2NjO1xyXG4gIH1cclxuXHJcbiAgLnFsLXBpY2tlciB7XHJcbiAgICBjb2xvcjogI2NjYztcclxuXHJcbiAgICAmLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItbGFiZWwge1xyXG4gICAgICB6LWluZGV4OiAyO1xyXG4gICAgICBjb2xvcjogIzc3NztcclxuXHJcbiAgICAgIC5xbC1maWxsIHtcclxuICAgICAgICBmaWxsOiAjNzc3O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtc3Ryb2tlIHtcclxuICAgICAgICBzdHJva2U6ICM3Nzc7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xbC1waWNrZXItb3B0aW9ucyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xyXG4gIH1cclxuXHJcbiAgLnFsLWNvbG9yLXBpY2tlciAucWwtcGlja2VyLWxhYmVsIHN2ZyxcclxuICAucWwtaWNvbi1waWNrZXIgLnFsLXBpY2tlci1sYWJlbCBzdmcge1xyXG4gICAgcmlnaHQ6IDAuMjVyZW07XHJcblxyXG4gICAgQGluY2x1ZGUgYXBwLXJ0bCB7XHJcbiAgICAgIHJpZ2h0OiBhdXRvO1xyXG4gICAgICBsZWZ0OiAwLjI1cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnFsLWNvbG9yLXBpY2tlciB7XHJcbiAgICAucWwtY29sb3ItcGlja2VyIHN2ZyB7XHJcbiAgICAgIG1hcmdpbjogMC4wNjI1cmVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCxcclxuICAgIC5xbC1waWNrZXItaXRlbTpob3ZlciB7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogbGlnaHQuJHdoaXRlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnFsLXRvb2xiYXIgLnFsLWZvcm1hdHMge1xyXG4gICAgbWFyZ2luOiAwLjVyZW0gMC43NXJlbSAwLjVyZW0gMDtcclxuXHJcbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcclxuICAgICAgbWFyZ2luOiAwLjVyZW0gMCAwLjVyZW0gMC43NXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDAuNzVyZW07XHJcblxyXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNzVyZW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xbC10b29sdGlwLWFycm93IHtcclxuICAgIGNvbnRlbnQ6ICcgJztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0wLjM3NXJlbTtcclxuICAgIGJvcmRlci1yaWdodDogMC4zNzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItbGVmdDogMC4zNzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5cclxuICAucWwtdG9vbHRpcCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xyXG4gICAgY29sb3I6IGxpZ2h0LiR3aGl0ZTtcclxuXHJcbiAgICAmOm5vdCgucWwtZmxpcCkgLnFsLXRvb2x0aXAtYXJyb3cge1xyXG4gICAgICB0b3A6IC0wLjM3NXJlbTtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMC4zNzVyZW0gc29saWQgIzQ0NDtcclxuICAgIH1cclxuXHJcbiAgICAmLnFsLWZsaXAgLnFsLXRvb2x0aXAtYXJyb3cge1xyXG4gICAgICBib3R0b206IC0wLjM3NXJlbTtcclxuICAgICAgYm9yZGVyLXRvcDogMC4zNzVyZW0gc29saWQgIzQ0NDtcclxuICAgIH1cclxuXHJcbiAgICAmLnFsLWVkaXRpbmcge1xyXG4gICAgICAucWwtdG9vbHRpcC1lZGl0b3Ige1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtZm9ybWF0cyB7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucWwtdG9vbHRpcC1lZGl0b3Ige1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICBpbnB1dFt0eXBlPSd0ZXh0J10ge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHBhZGRpbmc6IDAuNjI1cmVtIDEuMjVyZW07XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIGNvbG9yOiBsaWdodC4kd2hpdGU7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xyXG4gICAgfVxyXG5cclxuICAgIGEge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHJpZ2h0OiAxLjI1cmVtO1xyXG4gICAgICB0b3A6IDAuNjI1cmVtO1xyXG5cclxuICAgICAgQGluY2x1ZGUgYXBwLXJ0bCB7XHJcbiAgICAgICAgcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgbGVmdDogMS4yNXJlbTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiAnXFxENyc7XHJcbiAgICAgICAgY29sb3I6ICNjY2M7XHJcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLnFsLWNvbnRhaW5lcjpub3QoLnFsLWRpc2FibGVkKSBhIHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgJjo6YmVmb3JlLFxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICBtYXJnaW4tbGVmdDogNTAlO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwcyBlYXNlIDIwMG1zO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtMTAwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3Zlcjo6YmVmb3JlLFxyXG4gICAgJjpob3Zlcjo6YWZ0ZXIge1xyXG4gICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IGF0dHIoaHJlZik7XHJcbiAgICAgIHRvcDogLTAuMzEyNXJlbTtcclxuICAgICAgei1pbmRleDogMTtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgcGFkZGluZzogMC4zMTI1cmVtIDAuOTM3NXJlbTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMC45Mzc1cmVtO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgIGNvbG9yOiBsaWdodC4kd2hpdGU7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6ICcgJztcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBoZWlnaHQ6IDA7XHJcbiAgICAgIHdpZHRoOiAwO1xyXG4gICAgICBib3JkZXItdG9wOiAwLjM3NXJlbSBzb2xpZCAjNDQ0O1xyXG4gICAgICBib3JkZXItcmlnaHQ6IDAuMzc1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICBib3JkZXItbGVmdDogMC4zNzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBMaWdodCBzdHlsZXNcclxuQGlmICRlbmFibGUtbGlnaHQtc3R5bGUge1xyXG4gIC5saWdodC1zdHlsZSB7XHJcbiAgICAucWwtZWRpdG9yLnFsLWJsYW5rOmJlZm9yZSB7XHJcbiAgICAgIGNvbG9yOiBsaWdodC4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgLnFsLXNub3csXHJcbiAgICAucWwtYnViYmxlIHtcclxuICAgICAgJi5xbC10b29sYmFyIC5xbC1waWNrZXItb3B0aW9ucyxcclxuICAgICAgJiAucWwtdG9vbGJhciAucWwtcGlja2VyLW9wdGlvbnMge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRkcm9wZG93bi1ib3gtc2hhZG93O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtcGlja2VyIHtcclxuICAgICAgICAmLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW0ge1xyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPScxJ106OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogbGlnaHQuJGgxLWZvbnQtc2l6ZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmW2RhdGEtdmFsdWU9JzInXTo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBsaWdodC4kaDItZm9udC1zaXplO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nMyddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoMy1mb250LXNpemU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSc0J106OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogbGlnaHQuJGg0LWZvbnQtc2l6ZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmW2RhdGEtdmFsdWU9JzUnXTo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBsaWdodC4kaDUtZm9udC1zaXplO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nNiddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoNi1mb250LXNpemU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtIHtcclxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nc2VyaWYnXTo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGxpZ2h0LiRmb250LWZhbWlseS1zZXJpZjtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmW2RhdGEtdmFsdWU9J21vbm9zcGFjZSddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogbGlnaHQuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW0ge1xyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdzbWFsbCddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRmb250LXNpemUtc207XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdsYXJnZSddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRmb250LXNpemUtbGc7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdodWdlJ106OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS14bDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucWwtc25vdyB7XHJcbiAgICAgIC5xbC1lZGl0b3IucWwtYmxhbms6OmJlZm9yZSB7XHJcbiAgICAgICAgcGFkZGluZzogMCBsaWdodC4kaW5wdXQtYnRuLXBhZGRpbmcteDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi5xbC1jb250YWluZXIge1xyXG4gICAgICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGxpZ2h0LiRpbnB1dC1ib3JkZXItY29sb3I7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5xbC1lZGl0b3Ige1xyXG4gICAgICAgIHBhZGRpbmc6IGxpZ2h0LiRpbnB1dC1idG4tcGFkZGluZy14O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLnFsLXRvb2xiYXIsXHJcbiAgICAgICYgLnFsLXRvb2xiYXIge1xyXG4gICAgICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGxpZ2h0LiRpbnB1dC1ib3JkZXItY29sb3I7XHJcblxyXG4gICAgICAgIEBtZWRpYSAocG9pbnRlcjogY29hcnNlKSB7XHJcbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIHtcclxuICAgICAgICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLFxyXG4gICAgICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLW1pdGVyIHtcclxuICAgICAgICAgICAgc3Ryb2tlOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLWZpbGwsXHJcbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UucWwtZmlsbCB7XHJcbiAgICAgICAgICAgIGZpbGw6IGxpZ2h0LiRib2R5LWNvbG9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi5xbC10b29sYmFyICsgLnFsLWNvbnRhaW5lci5xbC1zbm93IHtcclxuICAgICAgICBib3JkZXItdG9wOiAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtc3Ryb2tlIHtcclxuICAgICAgICBzdHJva2U6IGxpZ2h0LiRib2R5LWNvbG9yO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtZmlsbCxcclxuICAgICAgLnFsLXN0cm9rZS5xbC1maWxsIHtcclxuICAgICAgICBmaWxsOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLnFsLXN0cm9rZS1taXRlciB7XHJcbiAgICAgICAgc3Ryb2tlOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgfVxyXG4gICAgICAucWwtcGlja2VyIHtcclxuICAgICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XHJcblxyXG4gICAgICAgICYucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1vcHRpb25zIHtcclxuICAgICAgICAgIGJvcmRlci1jb2xvcjogbGlnaHQuJGRyb3Bkb3duLWJvcmRlci1jb2xvcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1sYWJlbCB7XHJcbiAgICAgICAgICBib3JkZXItY29sb3I6IGxpZ2h0LiRpbnB1dC1ib3JkZXItY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtdG9vbHRpcCB7XHJcbiAgICAgICAgYm9yZGVyOiBsaWdodC4kZHJvcGRvd24tYm9yZGVyLXdpZHRoIHNvbGlkIGxpZ2h0LiRkcm9wZG93bi1ib3JkZXItY29sb3I7XHJcbiAgICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRkcm9wZG93bi1ib3gtc2hhZG93O1xyXG5cclxuICAgICAgICBpbnB1dFt0eXBlPSd0ZXh0J10ge1xyXG4gICAgICAgICAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgbGlnaHQuJGlucHV0LWJvcmRlci1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucWwtYnViYmxlIC5xbC10b29sdGlwIHtcclxuICAgICAgYm9yZGVyLXJhZGl1czogbGlnaHQuJGJvcmRlci1yYWRpdXM7XHJcbiAgICAgIHotaW5kZXg6IGxpZ2h0LiR6aW5kZXgtbWVudS1maXhlZCArIDEwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gZGFyayBzdHlsZXNcclxuQGlmICRlbmFibGUtZGFyay1zdHlsZSB7XHJcbiAgLmRhcmstc3R5bGUge1xyXG4gICAgLnFsLWVkaXRvci5xbC1ibGFuazpiZWZvcmUge1xyXG4gICAgICBjb2xvcjogZGFyay4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgLnFsLXNub3csXHJcbiAgICAucWwtYnViYmxlIHtcclxuICAgICAgLnFsLXRvb2x0aXAge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGJvZHktYmc7XHJcbiAgICAgIH1cclxuICAgICAgJi5xbC10b29sYmFyIC5xbC1waWNrZXItb3B0aW9ucyxcclxuICAgICAgJiAucWwtdG9vbGJhciAucWwtcGlja2VyLW9wdGlvbnMge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGRhcmsuJGRyb3Bkb3duLWJveC1zaGFkb3c7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5xbC1waWNrZXIge1xyXG4gICAgICAgICYucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbSB7XHJcbiAgICAgICAgICAmW2RhdGEtdmFsdWU9JzEnXTo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBkYXJrLiRoMS1mb250LXNpemU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPScyJ106OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZGFyay4kaDItZm9udC1zaXplO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nMyddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGRhcmsuJGgzLWZvbnQtc2l6ZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmW2RhdGEtdmFsdWU9JzQnXTo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBkYXJrLiRoNC1mb250LXNpemU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSc1J106OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZGFyay4kaDUtZm9udC1zaXplO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nNiddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGRhcmsuJGg2LWZvbnQtc2l6ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYucWwtZm9udCAucWwtcGlja2VyLWl0ZW0ge1xyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdzZXJpZiddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogZGFyay4kZm9udC1mYW1pbHktc2VyaWY7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdtb25vc3BhY2UnXTo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGRhcmsuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW0ge1xyXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdzbWFsbCddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGRhcmsuJGZvbnQtc2l6ZS1zbTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmW2RhdGEtdmFsdWU9J2xhcmdlJ106OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZGFyay4kZm9udC1zaXplLWxnO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICZbZGF0YS12YWx1ZT0naHVnZSddOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGRhcmsuJGZvbnQtc2l6ZS14bDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucWwtc25vdyB7XHJcbiAgICAgIC5xbC1lZGl0b3IucWwtYmxhbms6OmJlZm9yZSB7XHJcbiAgICAgICAgcGFkZGluZzogMCBkYXJrLiRpbnB1dC1idG4tcGFkZGluZy14O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLnFsLWNvbnRhaW5lciB7XHJcbiAgICAgICAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgZGFyay4kaW5wdXQtYm9yZGVyLWNvbG9yO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtZWRpdG9yIHtcclxuICAgICAgICBwYWRkaW5nOiBkYXJrLiRpbnB1dC1idG4tcGFkZGluZy14O1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGNhcmQtYmc7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5xbC1waWNrZXItb3B0aW9ucyB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogZGFyay4kY2FyZC1iZztcclxuICAgICAgfVxyXG5cclxuICAgICAgJi5xbC10b29sYmFyLFxyXG4gICAgICAmIC5xbC10b29sYmFyIHtcclxuICAgICAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCBkYXJrLiRpbnB1dC1ib3JkZXItY29sb3I7XHJcbiAgICAgICAgYmFja2dyb3VuZDogZGFyay4kY2FyZC1iZztcclxuXHJcbiAgICAgICAgQG1lZGlhIChwb2ludGVyOiBjb2Fyc2UpIHtcclxuICAgICAgICAgIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkge1xyXG4gICAgICAgICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZSxcclxuICAgICAgICAgIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZS1taXRlciB7XHJcbiAgICAgICAgICAgIHN0cm9rZTogZGFyay4kYm9keS1jb2xvcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLWZpbGwsXHJcbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UucWwtZmlsbCB7XHJcbiAgICAgICAgICAgIGZpbGw6IGRhcmsuJGJvZHktY29sb3I7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLnFsLXRvb2xiYXIgKyAucWwtY29udGFpbmVyLnFsLXNub3cge1xyXG4gICAgICAgIGJvcmRlci10b3A6IDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5xbC1zdHJva2UtbWl0ZXIge1xyXG4gICAgICAgIHN0cm9rZTogZGFyay4kYm9keS1jb2xvcjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLnFsLXN0cm9rZSB7XHJcbiAgICAgICAgc3Ryb2tlOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtZmlsbCxcclxuICAgICAgLnFsLXN0cm9rZS5xbC1maWxsIHtcclxuICAgICAgICBmaWxsOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtcGlja2VyIHtcclxuICAgICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcclxuXHJcbiAgICAgICAgJi5xbC1leHBhbmRlZCAucWwtcGlja2VyLW9wdGlvbnMge1xyXG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiBkYXJrLiRkcm9wZG93bi1ib3JkZXItY29sb3I7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItbGFiZWwge1xyXG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiBkYXJrLiRpbnB1dC1ib3JkZXItY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAucWwtdG9vbHRpcCB7XHJcbiAgICAgICAgYm9yZGVyOiBkYXJrLiRkcm9wZG93bi1ib3JkZXItd2lkdGggc29saWQgZGFyay4kZHJvcGRvd24tYm9yZGVyLWNvbG9yO1xyXG4gICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGRhcmsuJGRyb3Bkb3duLWJveC1zaGFkb3c7XHJcblxyXG4gICAgICAgIGlucHV0W3R5cGU9J3RleHQnXSB7XHJcbiAgICAgICAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCBkYXJrLiRpbnB1dC1ib3JkZXItY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnFsLWJ1YmJsZSAucWwtdG9vbHRpcCB7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IGRhcmsuJGJvcmRlci1yYWRpdXM7XHJcbiAgICAgIHotaW5kZXg6IGRhcmsuJHppbmRleC1tZW51LWZpeGVkICsgMTA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIiRlbmFibGUtbGlnaHQtc3R5bGU6IHRydWU7XHJcbiRlbmFibGUtZGFyay1zdHlsZTogdHJ1ZTtcclxuJGVuYWJsZS1ydGwtc3VwcG9ydDogdHJ1ZTtcclxuXHJcbkBtaXhpbiBhcHAtbHRyKCRoYXMtY2hpbGQ6IHRydWUpIHtcclxuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XHJcbiAgICBAaWYgJGhhcy1jaGlsZCB7XHJcbiAgICAgIGh0bWw6bm90KFtkaXI9J3J0bCddKSAmIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgICAgfVxyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgIGh0bWw6bm90KFtkaXI9J3J0bCddKSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGFwcC1sdHItc3R5bGUoKSB7XHJcbiAgQGlmICRlbmFibGUtcnRsLXN1cHBvcnQge1xyXG4gICAgJjpub3QoW2Rpcj0ncnRsJ10pIHtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhcHAtcnRsKCRoYXMtY2hpbGQ6IHRydWUpIHtcclxuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XHJcbiAgICBAaWYgJGhhcy1jaGlsZCB7XHJcbiAgICAgIFtkaXI9J3J0bCddICYge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgICB9XHJcbiAgICB9IEBlbHNlIHtcclxuICAgICAgW2Rpcj0ncnRsJ10ge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gYXBwLXJ0bC1zdHlsZSgpIHtcclxuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XHJcbiAgICAmW2Rpcj0ncnRsJ10ge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLy8gVmFyaWFibGVzXHJcbi8vXHJcbi8vIFZhcmlhYmxlcyBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1zdGF0ZS1wcm9wZXJ0eS1zaXplYCBmb3JtdWxhIGZvclxyXG4vLyBjb25zaXN0ZW50IG5hbWluZy4gRXg6ICRuYXYtbGluay1kaXNhYmxlZC1jb2xvciBhbmQgJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14cy5cclxuLy9cclxuLy8gKEMpIEN1c3RvbSB2YXJpYWJsZXMgZm9yIGV4dGVuZGVkIGNvbXBvbmVudHMgb2YgYm9vdHN0cmFwIG9ubHlcclxuXHJcbi8vICogQ29sb3Igc3lzdGVtXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9yLXZhcmlhYmxlc1xyXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XHJcbiRibGFjazogIzRiNDY1YyAhZGVmYXVsdDtcclxuJGdyYXktMjU6IHJnYmEoJGJsYWNrLCAwLjAxNSkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZ3JheS01MDogcmdiYSgkYmxhY2ssIDAuMDMpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMTAwOiByZ2JhKCRibGFjaywgMC4wNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTIwMDogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcbiRncmF5LTMwMDogcmdiYSgkYmxhY2ssIDAuMykgIWRlZmF1bHQ7XHJcbiRncmF5LTQwMDogcmdiYSgkYmxhY2ssIDAuNCkgIWRlZmF1bHQ7XHJcbiRncmF5LTUwMDogcmdiYSgkYmxhY2ssIDAuNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTYwMDogcmdiYSgkYmxhY2ssIDAuNikgIWRlZmF1bHQ7XHJcbiRncmF5LTcwMDogcmdiYSgkYmxhY2ssIDAuNykgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogcmdiYSgkYmxhY2ssIDAuOCkgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuOSkgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9ycy1tYXBcclxuJGdyYXlzOiAoXHJcbiAgJzI1JzogJGdyYXktMjUsXHJcbiAgJzUwJzogJGdyYXktNTBcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBncmF5LWNvbG9ycy1tYXBcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBjb2xvci12YXJpYWJsZXNcclxuJGJsdWU6ICMwMDdiZmYgIWRlZmF1bHQ7XHJcbiRpbmRpZ286ICM2NjEwZjIgIWRlZmF1bHQ7XHJcbiRwdXJwbGU6ICM3MzY3ZjAgIWRlZmF1bHQ7XHJcbiRwaW5rOiAjZTgzZThjICFkZWZhdWx0O1xyXG4kcmVkOiAjZWE1NDU1ICFkZWZhdWx0O1xyXG4kb3JhbmdlOiAjZmQ3ZTE0ICFkZWZhdWx0O1xyXG4keWVsbG93OiAjZmY5ZjQzICFkZWZhdWx0O1xyXG4kZ3JlZW46ICMyOGM3NmYgIWRlZmF1bHQ7XHJcbiR0ZWFsOiAjMjBjOTk3ICFkZWZhdWx0O1xyXG4kY3lhbjogIzAwY2ZlOCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0aGVtZS1jb2xvci12YXJpYWJsZXNcclxuJHByaW1hcnk6ICRwdXJwbGUgIWRlZmF1bHQ7XHJcbiRzZWNvbmRhcnk6ICNhOGFhYWUgIWRlZmF1bHQ7XHJcbiRzdWNjZXNzOiAkZ3JlZW4gIWRlZmF1bHQ7XHJcbiRpbmZvOiAkY3lhbiAhZGVmYXVsdDtcclxuJHdhcm5pbmc6ICR5ZWxsb3cgIWRlZmF1bHQ7XHJcbiRkYW5nZXI6ICRyZWQgIWRlZmF1bHQ7XHJcbiRsaWdodDogI2RmZGZlMyAhZGVmYXVsdDtcclxuJGRhcms6ICM0YjRiNGIgIWRlZmF1bHQ7XHJcbiRncmF5OiAkZ3JheS0xMDAgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9ycy1tYXBcclxuJHRoZW1lLWNvbG9yczogKFxyXG4gICdwcmltYXJ5JzogJHByaW1hcnksXHJcbiAgJ3NlY29uZGFyeSc6ICRzZWNvbmRhcnksXHJcbiAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcclxuICAnaW5mbyc6ICRpbmZvLFxyXG4gICd3YXJuaW5nJzogJHdhcm5pbmcsXHJcbiAgJ2Rhbmdlcic6ICRkYW5nZXIsXHJcbiAgJ2xpZ2h0JzogJGxpZ2h0LFxyXG4gICdkYXJrJzogJGRhcmssXHJcbiAgJ2dyYXknOiAkZ3JheVxyXG4pICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9ycy1tYXBcclxuXHJcbiRjb2xvci1zY2hlbWU6ICdsaWdodCcgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBUaGUgY29udHJhc3QgcmF0aW8gdG8gcmVhY2ggYWdhaW5zdCB3aGl0ZSwgdG8gZGV0ZXJtaW5lIGlmIGNvbG9yIGNoYW5nZXMgZnJvbSBcImxpZ2h0XCIgdG8gXCJkYXJrXCIuIEFjY2VwdGFibGUgdmFsdWVzIGZvciBXQ0FHIDIuMCBhcmUgMywgNC41IGFuZCA3LlxyXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC8jdmlzdWFsLWF1ZGlvLWNvbnRyYXN0LWNvbnRyYXN0XHJcbiRtaW4tY29udHJhc3QtcmF0aW86IDEuNyAhZGVmYXVsdDtcclxuXHJcbi8vICogT3B0aW9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZW5hYmxlLW5lZ2F0aXZlLW1hcmdpbnM6IHRydWUgIWRlZmF1bHQ7XHJcbiRlbmFibGUtdmFsaWRhdGlvbi1pY29uczogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBQcmVmaXggZm9yIDpyb290IENTUyB2YXJpYWJsZXNcclxuJHZhcmlhYmxlLXByZWZpeDogYnMtICFkZWZhdWx0O1xyXG5cclxuLy8gKiBTcGFjaW5nXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRzcGFjZXI6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kc2l6ZXMtcHg6IChcclxuICBweC0xNDogMTRweCxcclxuICBweC0xODogMThweCxcclxuICBweC0yMDogMjBweCxcclxuICBweC0zMDogMzBweCxcclxuICBweC00MDogNDBweCxcclxuICBweC01MDogNTBweCxcclxuICBweC03NTogNzVweCxcclxuICBweC0xMDA6IDEwMHB4LFxyXG4gIHB4LTE1MDogMTUwcHgsXHJcbiAgcHgtMjAwOiAyMDBweCxcclxuICBweC0yNTA6IDI1MHB4LFxyXG4gIHB4LTMwMDogMzAwcHgsXHJcbiAgcHgtMzUwOiAzNTBweCxcclxuICBweC00MDA6IDQwMHB4LFxyXG4gIHB4LTUwMDogNTAwcHgsXHJcbiAgcHgtNjAwOiA2MDBweCxcclxuICBweC03MDA6IDcwMHB4LFxyXG4gIHB4LTgwMDogODAwcHgsXHJcbiAgYXV0bzogYXV0b1xyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQm9keVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYm9keS1iZzogI2Y4ZjdmYSAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnOiAjZmZmICFkZWZhdWx0OyAvLyAoQylcclxuJGJvZHktY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnLWludmVydGVkOiAjMDAwICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogTGlua3NcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGxpbmstY29sb3I6ICRwcmltYXJ5ICFkZWZhdWx0O1xyXG4kbGluay1kZWNvcmF0aW9uOiBub25lICFkZWZhdWx0O1xyXG4kbGluay1zaGFkZS1wZXJjZW50YWdlOiAxMCUgIWRlZmF1bHQ7XHJcbiRsaW5rLWhvdmVyLWNvbG9yOiBzaGlmdC1jb2xvcigkbGluay1jb2xvciwgJGxpbmstc2hhZGUtcGVyY2VudGFnZSkgIWRlZmF1bHQ7XHJcbiRsaW5rLWhvdmVyLWRlY29yYXRpb246IG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEdyaWRcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy8gR3JpZCBjb250YWluZXJzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY29udGFpbmVyLW1heC13aWR0aHNcclxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXHJcbiAgc206IDU0MHB4LFxyXG4gIG1kOiA3MjBweCxcclxuICBsZzogOTYwcHgsXHJcbiAgeGw6IDExNDBweCxcclxuICB4eGw6IDE0NDBweCAvLyBDdXN0b20geHhsIHNpemVcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjb250YWluZXItbWF4LXdpZHRoc1xyXG5cclxuJGdyaWQtZ3V0dGVyLXdpZHRoOiAxLjVyZW0gIWRlZmF1bHQ7XHJcbiRjb250YWluZXItcGFkZGluZy14OiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kY29udGFpbmVyLXBhZGRpbmcteC1zbTogMXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb250YWluZXItcGFkZGluZy15OiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDb21wb25lbnRzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBib3JkZXItdmFyaWFibGVzXHJcbiRib3JkZXItd2lkdGg6IDFweCAhZGVmYXVsdDtcclxuJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kYm9yZGVyLWlubmVyLWNvbG9yOiByZ2JhKCRibGFjaywgMC4wNzUpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXJhZGl1cy12YXJpYWJsZXNcclxuJGJvcmRlci1yYWRpdXM6IDAuMzc1cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy14bDogMC42MjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYm9yZGVyLXJhZGl1cy1sZzogMC41cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJGJvcmRlci1yYWRpdXMteHM6IDAuMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItcmFkaXVzLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGJveC1zaGFkb3ctdmFyaWFibGVzXHJcbiRib3gtc2hhZG93OiAwIDAuMjVyZW0gMXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC40NSkgIWRlZmF1bHQ7XHJcbiRib3gtc2hhZG93LXNtOiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDAuMykgIWRlZmF1bHQ7XHJcbiRib3gtc2hhZG93LWxnOiAwIDAuNjI1cmVtIDEuMjVyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDAuNCkgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuXHJcbiRjb21wb25lbnQtYWN0aXZlLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRjb21wb25lbnQtYWN0aXZlLWJnOiAkcHJpbWFyeSAhZGVmYXVsdDtcclxuXHJcbiRjb21wb25lbnQtaG92ZXItY29sb3I6ICRwcmltYXJ5ICFkZWZhdWx0OyAvLyAoQylcclxuJGNvbXBvbmVudC1ob3Zlci1iZzogcmdiYSgkcHJpbWFyeSwgMC4wOCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGNvbXBvbmVudC1saW5lLWhlaWdodDogMS41NCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb21wb25lbnQtZm9jdXMtc2hhZG93LXdpZHRoOiAycHggIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjA1KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93OiAwIDAuMzFyZW0gMS4yNXJlbSAwICRncmF5LTQwMCAhZGVmYXVsdDsgLy8gKEMpIHVzZWQgZm9yIG1vZGFsIGFuZCByYW5nZVxyXG5cclxuJGhyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kaHItb3BhY2l0eTogMSAhZGVmYXVsdDtcclxuJGJvcmRlcmVkLXJvdy1ib3JkZXItY29sb3I6ICRoci1jb2xvciAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY2FyZXQtdmFyaWFibGVzXHJcbiRjYXJldC13aWR0aDogMC40MmVtICFkZWZhdWx0O1xyXG4kY2FyZXQtdmVydGljYWwtYWxpZ246IG1pZGRsZSAhZGVmYXVsdDtcclxuJGNhcmV0LXNwYWNpbmc6IDAuNWVtICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGNhcmV0LXZhcmlhYmxlc1xyXG5cclxuLy8gKiBUeXBvZ3JhcGh5XHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb250LXZhcmlhYmxlc1xyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ1B1YmxpYyBTYW5zJywgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCAnT3h5Z2VuJywgJ1VidW50dScsICdDYW50YXJlbGwnLFxyXG4gICdGaXJhIFNhbnMnLCAnRHJvaWQgU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XHJcbiRmb250LWZhbWlseS1zZXJpZjogR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIHNlcmlmICFkZWZhdWx0OyAvLyAoQylcclxuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogJ1NGTW9uby1SZWd1bGFyJywgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsICdMaWJlcmF0aW9uIE1vbm8nLCAnQ291cmllciBOZXcnLCBtb25vc3BhY2UgIWRlZmF1bHQ7XHJcbi8vIHN0eWxlbGludC1lbmFibGUgdmFsdWUta2V5d29yZC1jYXNlXHJcbiRmb250LWZhbWlseS1iYXNlOiB2YXIoLS0jeyR2YXJpYWJsZS1wcmVmaXh9Zm9udC1zYW5zLXNlcmlmKSAhZGVmYXVsdDtcclxuJGZvbnQtZmFtaWx5LWNvZGU6IHZhcigtLSN7JHZhcmlhYmxlLXByZWZpeH1mb250LW1vbm9zcGFjZSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9udC1zaXplLXJvb3QgZWZmZWN0cyB0aGUgdmFsdWUgb2YgYHJlbWAsIHdoaWNoIGlzIHVzZWQgZm9yIGFzIHdlbGwgZm9udCBzaXplcywgcGFkZGluZ3MgYW5kIG1hcmdpbnNcclxuLy8gJGZvbnQtc2l6ZS1iYXNlIGVmZmVjdHMgdGhlIGZvbnQgc2l6ZSBvZiB0aGUgYm9keSB0ZXh0XHJcbiRmb250LXNpemUtcm9vdDogMTZweCAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1iYXNlOiAwLjkzNzVyZW0gIWRlZmF1bHQ7IC8vIEFzc3VtZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgdHlwaWNhbGx5IGAxNnB4YFxyXG4kZm9udC1zaXplLXhsOiAxLjI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvbnQtc2l6ZS1sZzogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1zbTogMC43NXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS14czogMC42OXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9udC13ZWlnaHQtc2VtaWJvbGQ6IDYwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LWJvbGRlcjogNzAwICFkZWZhdWx0O1xyXG4kZm9udC13ZWlnaHQtbGlnaHRlcjogMzAwICFkZWZhdWx0O1xyXG5cclxuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNDcgIWRlZmF1bHQ7XHJcbiRsaW5lLWhlaWdodC14bDogMS41ICFkZWZhdWx0OyAvLyAoQylcclxuJGxpbmUtaGVpZ2h0LWxnOiAxLjM3NSAhZGVmYXVsdDtcclxuJGxpbmUtaGVpZ2h0LXNtOiAxICFkZWZhdWx0O1xyXG4kbGluZS1oZWlnaHQteHM6IDAuNzUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGgxLWZvbnQtc2l6ZTogMi4zNzVyZW0gIWRlZmF1bHQ7XHJcbiRoMi1mb250LXNpemU6IDJyZW0gIWRlZmF1bHQ7XHJcbiRoMy1mb250LXNpemU6IDEuNjI1cmVtICFkZWZhdWx0O1xyXG4kaDQtZm9udC1zaXplOiAxLjM3NXJlbSAhZGVmYXVsdDtcclxuJGg1LWZvbnQtc2l6ZTogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRoNi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb250LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGhlYWRpbmdzLXZhcmlhYmxlc1xyXG4kaGVhZGluZ3MtbWFyZ2luLWJvdHRvbTogJHNwYWNlciAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcbiRoZWFkaW5ncy1saW5lLWhlaWdodDogMS4zNyAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS05MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgaGVhZGluZ3MtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZGlzcGxheS1oZWFkaW5nc1xyXG4kZGlzcGxheS1mb250LXNpemVzOiAoXHJcbiAgMTogNC43NXJlbSxcclxuICAyOiA0LjM3NXJlbSxcclxuICAzOiAzLjg3NXJlbSxcclxuICA0OiAzLjM3NXJlbSxcclxuICA1OiAzcmVtLFxyXG4gIDY6IDIuNjI1cmVtXHJcbikgIWRlZmF1bHQ7XHJcblxyXG4kZGlzcGxheS1mb250LXdlaWdodDogNTAwICFkZWZhdWx0O1xyXG5cclxuLy8gc2Nzcy1kb2NzLWVuZCBkaXNwbGF5LWhlYWRpbmdzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdHlwZS12YXJpYWJsZXNcclxuXHJcbiRsZWFkLWZvbnQtc2l6ZTogJHNwYWNlciAqIDEuMTI1ICFkZWZhdWx0O1xyXG5cclxuJHRpbnktZm9udC1zaXplOiA3MCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kc21hbGwtZm9udC1zaXplOiAwLjgxMjVyZW0gIWRlZmF1bHQ7XHJcbiRiaWctZm9udC1zaXplOiAxMTIlICFkZWZhdWx0OyAvLyAoQylcclxuJGxhcmdlLWZvbnQtc2l6ZTogMTUwJSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR4bGFyZ2UtZm9udC1zaXplOiAxNzAlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LW11dGVkOiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbiR0ZXh0LW11dGVkLWhvdmVyOiByZ2JhLXRvLWhleCgkZ3JheS02MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJHRleHQtbGlnaHQ6IHJnYmEtdG8taGV4KCRncmF5LTQwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0ZXh0LWxpZ2h0ZXI6IHJnYmEtdG8taGV4KCRncmF5LTMwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0ZXh0LWxpZ2h0ZXN0OiByZ2JhLXRvLWhleCgkZ3JheS0yMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIHR5cGUtdmFyaWFibGVzXHJcblxyXG4vLyAqIFotaW5kZXggbWFzdGVyIGxpc3RcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHppbmRleC1tZW51LWZpeGVkOiAxMDgwICFkZWZhdWx0O1xyXG4kemluZGV4LW1vZGFsOiAxMDkwICFkZWZhdWx0O1xyXG4kemluZGV4LW1vZGFsLWJhY2tkcm9wOiAkemluZGV4LW1vZGFsIC0gMSAhZGVmYXVsdDtcclxuLy8gJHppbmRleC1tb2RhbC10b3A6IDEwOTAgIWRlZmF1bHQ7IC8vIChDKVxyXG4kemluZGV4LW9mZmNhbnZhczogMTA5MCAhZGVmYXVsdDtcclxuJHppbmRleC1vZmZjYW52YXMtYmFja2Ryb3A6ICR6aW5kZXgtb2ZmY2FudmFzIC0gMSAhZGVmYXVsdDtcclxuJHppbmRleC1sYXlvdXQtbW9iaWxlOiAxMTAwICFkZWZhdWx0OyAvLyAoQylcclxuJHppbmRleC1wb3BvdmVyOiAxMDkxICFkZWZhdWx0O1xyXG4kemluZGV4LXRvYXN0OiAxMDk1ICFkZWZhdWx0OyAvLyAoQylcclxuJHppbmRleC10b29sdGlwOiAxMDk5ICFkZWZhdWx0O1xyXG4kemluZGV4LW5vdGlmaWNhdGlvbjogOTk5OTk5ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVGFibGVzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0YWJsZS12YXJpYWJsZXNcclxuJHRhYmxlLWNlbGwtcGFkZGluZy15OiAwLjU1cmVtICFkZWZhdWx0O1xyXG4kdGFibGUtY2VsbC1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteS1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJHRhYmxlLWNlbGwtcGFkZGluZy14LXNtOiAkdGFibGUtY2VsbC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtY2VsbC12ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLXRoLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtc3RyaXBlZC1iZy1mYWN0b3I6IDAuMDIgIWRlZmF1bHQ7XHJcbiR0YWJsZS1zdHJpcGVkLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1hY3RpdmUtYmctZmFjdG9yOiAwLjA4ICFkZWZhdWx0O1xyXG4kdGFibGUtYWN0aXZlLWJnOiByZ2JhKCRwcmltYXJ5LCAkdGFibGUtYWN0aXZlLWJnLWZhY3RvcikgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtaG92ZXItYmctZmFjdG9yOiAwLjA0ICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLWJvcmRlci1mYWN0b3I6IDAuMiAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1iZy1zY2FsZTogLTkyJSAhZGVmYXVsdDtcclxuXHJcbi8vICogQnV0dG9ucyArIEZvcm1zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15OiAwLjZyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tcGFkZGluZy14OiAxLjI1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0OiAxLjEyNSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tZm9jdXMtd2lkdGg6IDAuMDVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9jdXMtY29sb3Itb3BhY2l0eTogMC4xICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yOiByZ2JhKCRjb21wb25lbnQtYWN0aXZlLWJnLCAkaW5wdXQtYnRuLWZvY3VzLWNvbG9yLW9wYWNpdHkpICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWJsdXI6IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdzogMCAwICRpbnB1dC1idG4tZm9jdXMtYmx1ciAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoICRpbnB1dC1idG4tZm9jdXMtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS14czogMC4xNzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC14czogMC43NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXhzOiAkZm9udC1zaXplLXhzICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC14czogJGxpbmUtaGVpZ2h0LXhzICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXNtOiAwLjQxcmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1zbTogMC44NzVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXNtOiAwLjgxMjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LWxnOiAwLjg0cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1sZzogMS42MjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLWxnOiAxLjA2MjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXhsOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXhsOiAxLjc1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1mb250LXNpemUteGw6ICRmb250LXNpemUteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhsOiAkbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBCdXR0b25zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRidG4tcGFkZGluZy15LXhzOiAkaW5wdXQtYnRuLXBhZGRpbmcteS14cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tcGFkZGluZy14LXhzOiAkaW5wdXQtYnRuLXBhZGRpbmcteC14cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tZm9udC1zaXplLXhzOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS14cyAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kYnRuLXBhZGRpbmcteS14bDogJGlucHV0LWJ0bi1wYWRkaW5nLXkteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLXBhZGRpbmcteC14bDogJGlucHV0LWJ0bi1wYWRkaW5nLXgteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWZvbnQtc2l6ZS14bDogJGlucHV0LWJ0bi1mb250LXNpemUteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1saW5lLWhlaWdodC14czogJGlucHV0LWJ0bi1saW5lLWhlaWdodC14cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbTsgLy8oQylcclxuJGJ0bi1saW5lLWhlaWdodC1sZzogJGxpbmUtaGVpZ2h0LWxnOyAvLyhDKVxyXG4kYnRuLWxpbmUtaGVpZ2h0LXhsOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcclxuJGJ0bi1ib3gtc2hhZG93OiAwcHggMnB4IDRweCByZ2JhKDE2NSwgMTYzLCAxNzQsIDAuNCkgIWRlZmF1bHQ7XHJcbiRidG4tZm9jdXMtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuXHJcbiRidG4tYm9yZGVyLXJhZGl1cy14czogJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWJvcmRlci1yYWRpdXMteGw6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XHJcblxyXG4kYnRuLWxhYmVsLWJnLXNoYWRlLWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1sYWJlbC1iZy10aW50LWFtb3VudDogODUlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1sYWJlbC1ob3Zlci1zaGFkZS1hbW91bnQ6IDI2JSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tbGFiZWwtaG92ZXItdGludC1hbW91bnQ6IDc2JSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tbGFiZWwtZGlzYWJsZWQtYmctc2hhZGUtYW1vdW50OiA4NCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWxhYmVsLWRpc2FibGVkLWJnLXRpbnQtYW1vdW50OiA4NSUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1ob3Zlci1iZy1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1iZy10aW50LWFtb3VudDogMjUlICFkZWZhdWx0O1xyXG4kYnRuLWhvdmVyLWJvcmRlci1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1ib3JkZXItdGludC1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYmctc2hhZGUtYW1vdW50OiAxMCUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJnLXRpbnQtYW1vdW50OiAyMCUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJvcmRlci1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm9yZGVyLXRpbnQtYW1vdW50OiAxMCUgIWRlZmF1bHQ7XHJcblxyXG4vLyBPdXRsaW5lIGJ1dHRvbnNcclxuJGJ0bi1vdXRsaW5lLWhvdmVyLWJnLXNoYWRlLWFtb3VudDogMTAlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1vdXRsaW5lLWhvdmVyLWJnLXRpbnQtYW1vdW50OiA5MiUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLW91dGxpbmUtYWN0aXZlLWJnLXNoYWRlLWFtb3VudDogMTAlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1vdXRsaW5lLWFjdGl2ZS1iZy10aW50LWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogRm9ybXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tdGV4dC12YXJpYWJsZXNcclxuJGZvcm0tdGV4dC1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tdGV4dC12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWxhYmVsLXZhcmlhYmxlc1xyXG4kZm9ybS1sYWJlbC1tYXJnaW4tYm90dG9tOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kZm9ybS1sYWJlbC1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kZm9ybS1sYWJlbC1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1sYWJlbC1sZXR0ZXItc3BhY2luZzogaW5oZXJpdCAhZGVmYXVsdDsgLy8oQylcclxuJGZvcm0tbGFiZWwtdGV4dC10cmFuc2Zvcm06IGluaGVyaXQgIWRlZmF1bHQ7IC8vKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1sYWJlbC12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWlucHV0LXZhcmlhYmxlc1xyXG4kaW5wdXQtcGFkZGluZy15OiAwLjQyMnJlbSAhZGVmYXVsdDtcclxuJGlucHV0LXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXgtc20gIWRlZmF1bHQ7XHJcbiRpbnB1dC1saW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0O1xyXG4kaW5wdXQtZm9udC1zaXplOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wYWRkaW5nLXktc206IDAuMjY2cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtcGFkZGluZy14LXNtOiAwLjYyNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wYWRkaW5nLXktbGc6IDAuNTk0cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtcGFkZGluZy14LWxnOiAkc3BhY2VyICFkZWZhdWx0O1xyXG4kaW5wdXQtZm9udC1zaXplLWxnOiAxLjEyNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kaW5wdXQtZGlzYWJsZWQtYmc6IHJnYmEoJGJsYWNrLCAwLjA4KSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuJGlucHV0LWZvY3VzLWJveC1zaGFkb3c6ICRib3gtc2hhZG93LXNtICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtaGVpZ2h0LWlubmVyOiBweC10by1yZW0oXHJcbiAgZmxvb3IocmVtLXRvLXB4KCgkaW5wdXQtYnRuLWZvbnQtc2l6ZSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQpICsgKCRpbnB1dC1idG4tcGFkZGluZy15ICogMikpKVxyXG4pICFkZWZhdWx0O1xyXG4kaW5wdXQtaGVpZ2h0LWlubmVyLXNtOiBweC10by1yZW0oXHJcbiAgZmxvb3IocmVtLXRvLXB4KCgkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc20pICsgKCRpbnB1dC1idG4tcGFkZGluZy15LXNtICogMikpKVxyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWhlaWdodC1pbm5lci1sZzogcHgtdG8tcmVtKFxyXG4gIGZsb29yKHJlbS10by1weCgoJGZvbnQtc2l6ZS1sZyAqICRsaW5lLWhlaWdodC1sZykgKyAoJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgKiAyKSkpXHJcbikgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0taW5wdXQtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1jaGVjay12YXJpYWJsZXNcclxuJGZvcm0tY2hlY2staW5wdXQtd2lkdGg6IDEuMmVtICFkZWZhdWx0O1xyXG4kZm9ybS1kYXRhdGFibGVzLWNoZWNrLWlucHV0LXNpemU6IDE3cHggIWRlZmF1bHQ7IC8vIChDKSBGb3IgZGF0YXRhYmxlcyB3aXRoIGNoZWNrYm94LSB1cGRhdGUgYWNjb3JkaW5nIHRvICRmb3JtLWNoZWNrLWlucHV0LXdpZHRoXHJcbiRmb3JtLWNoZWNrLW1pbi1oZWlnaHQ6ICRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xyXG4kZm9ybS1jaGVjay1pbnB1dC1ib3JkZXI6IDFweCBzb2xpZCAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tY2hlY2stbGFiZWwtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0OyAvLyAoQylSXHJcblxyXG4kZm9ybS1jaGVjay1pbnB1dC1mb2N1cy1ib3gtc2hhZG93OiAkaW5wdXQtZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWlucHV0LWNoZWNrZWQtY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzExJyBoZWlnaHQ9JzEzJyB2aWV3Qm94PScwIDAgMTUgMTQnIGZpbGw9J25vbmUnJTNFJTNDcGF0aCBkPSdNMy40MTY2NyA3TDYuMzMzMzMgOS45MTY2N0wxMi4xNjY3IDQuMDgzMzMnIHN0cm9rZT0nI3skZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yfScgc3Ryb2tlLXdpZHRoPScxLjUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLXJhZGlvLWNoZWNrZWQtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE4JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTggMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NyZWN0IHg9JzUnIHk9JzUnIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHJ4PSc0JyBmaWxsPScjeyRmb3JtLWNoZWNrLWlucHV0LWNoZWNrZWQtY29sb3J9Jy8lM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtaW5kZXRlcm1pbmF0ZS1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbiRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE4JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTggMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NwYXRoIGQ9J001LjUgOUgxMi41JyBzdHJva2U9JyN7JGZvcm0tY2hlY2staW5wdXQtaW5kZXRlcm1pbmF0ZS1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMS41JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1jaGVjay1pbnB1dC1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLWNoZWNrLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc3dpdGNoLXZhcmlhYmxlc1xyXG4kZm9ybS1zd2l0Y2gtY29sb3I6ICRncmF5LTMwMCAhZGVmYXVsdDtcclxuJGZvcm0tc3dpdGNoLXdpZHRoOiAyZW0gIWRlZmF1bHQ7XHJcbiRmb3JtLXN3aXRjaC1wYWRkaW5nLXN0YXJ0OiAkZm9ybS1zd2l0Y2gtd2lkdGggKyAwLjVlbSAhZGVmYXVsdDtcclxuJGZvcm0tc3dpdGNoLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxOCcgaGVpZ2h0PScxOCcgdmlld0JveD0nMCAwIDE4IDE4JyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDY2lyY2xlIGN4PSc5JyBjeT0nOScgcj0nNicgZmlsbD0nI3skZm9ybS1zd2l0Y2gtY29sb3J9Jy8lM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc3dpdGNoLWZvY3VzLWNvbG9yOiAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1zd2l0Y2gtZm9jdXMtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE4JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTggMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NjaXJjbGUgY3g9JzknIGN5PSc5JyByPSc2JyBmaWxsPScjeyRmb3JtLXN3aXRjaC1mb2N1cy1jb2xvcn0nLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1zd2l0Y2gtY2hlY2tlZC1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbiRmb3JtLXN3aXRjaC1jaGVja2VkLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxOCcgaGVpZ2h0PScxOCcgdmlld0JveD0nMCAwIDE4IDE4JyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDY2lyY2xlIGN4PSc5JyBjeT0nOScgcj0nNicgZmlsbD0nI3skZm9ybS1zd2l0Y2gtY2hlY2tlZC1jb2xvcn0nLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1zd2l0Y2gtY2hlY2tlZC1iZy1wb3NpdGlvbi1ydGw6IGxlZnQgY2VudGVyICFkZWZhdWx0OyAvLyhDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tc3dpdGNoLXZhcmlhYmxlc1xyXG5cclxuLy9pbnB1dC1ncm91cC12YXJpYWJsZXNcclxuJGlucHV0LWdyb3VwLWFkZG9uLXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXgteHMgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ncm91cC1hZGRvbi1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGlucHV0LWdyb3VwLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc2VsZWN0LXZhcmlhYmxlc1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy15OiAkaW5wdXQtcGFkZGluZy15ICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy14OiAkaW5wdXQtcGFkZGluZy14ICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1wYWRkaW5nLXggKiAyLjggIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1kaXNhYmxlZC1iZzogJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtYmctc2l6ZTogMjJweCAyMHB4ICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMjAnIGhlaWdodD0nMjAnIHZpZXdCb3g9JzAgMCAyMCAyMCcgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTUgNy41TDEwIDEyLjVMMTUgNy41JyBzdHJva2U9JyN7JGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMS41JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQ3BhdGggZD0nTTUgNy41TDEwIDEyLjVMMTUgNy41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4yJyBzdHJva2Utd2lkdGg9JzEuNScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6ICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteS1zbTogJGlucHV0LXBhZGRpbmcteS1zbSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteC1zbTogJGlucHV0LXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXktbGc6ICRpbnB1dC1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXgtbGc6ICRpbnB1dC1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1zZWxlY3QtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1yYW5nZS12YXJpYWJsZXNcclxuJGZvcm0tcmFuZ2UtdHJhY2staGVpZ2h0OiAwLjEyNXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYmc6ICRncmF5LTIwMCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stZGlzYWJsZWQtYmc6ICRncmF5LTUwICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRmb3JtLXJhbmdlLXRodW1iLXdpZHRoOiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1oZWlnaHQ6ICRmb3JtLXJhbmdlLXRodW1iLXdpZHRoICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1ib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgkYmxhY2ssIDAuMSksICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1mb2N1cy1ib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSgkYmxhY2ssIDAuMSksICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICRmb3JtLXJhbmdlLXRodW1iLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tcmFuZ2UtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtb3BhY2l0eTogMC43NSAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW4tb3V0LCB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dCAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtdHJhbnNmb3JtLXJ0bDogc2NhbGUoMC44NSkgdHJhbnNsYXRlWSgtMC41cmVtKSB0cmFuc2xhdGVYKC0wLjE1cmVtKSAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuXHJcbi8vIEZvcm0gdmFsaWRhdGlvblxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tZmVlZGJhY2stdmFyaWFibGVzXHJcbiRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yOiAkc3VjY2VzcyAhZGVmYXVsdDtcclxuJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcjogJGRhbmdlciAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZyArICRpbnB1dC1oZWlnaHQtaW5uZXIgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZm9ybS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLXNtOiAkZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcgKyAkaW5wdXQtaGVpZ2h0LWlubmVyLXNtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvcm0tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1sZzogJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nICsgJGlucHV0LWhlaWdodC1pbm5lci1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mZWVkYmFjay12YXJpYWJsZXNcclxuXHJcbi8vICogTmF2c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2LXNwYWNlcjogMC4xMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG5hdi1saW5rLXBhZGRpbmcteTogMC41NDNyZW0gIWRlZmF1bHQ7XHJcbiRuYXYtbGluay1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiRuYXYtbGluay1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LWxpbmstcGFkZGluZy15LWxnOiAwLjZyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2LWxpbmstcGFkZGluZy14LWxnOiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2LWxpbmstbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LWxpbmstcGFkZGluZy15LXNtOiAwLjM3NnJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1wYWRkaW5nLXgtc206IDFyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2LWxpbmstbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LXRhYnMtYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJG5hdi10YWJzLWxpbmstYWN0aXZlLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIE5hdmJhclxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiAwLjVyZW0gIWRlZmF1bHQ7XHJcbiRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXg6IDAuN3JlbSAhZGVmYXVsdDtcclxuJG5hdmJhci10b2dnbGVyLWZvbnQtc2l6ZTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kbmF2YmFyLWRhcmstY29sb3I6IHJnYmEoJHdoaXRlLCAwLjgpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhcmstaG92ZXItY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhcmstZGlzYWJsZWQtY29sb3I6IHJnYmEoJHdoaXRlLCAwLjQpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhcmstdG9nZ2xlci1pY29uLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxNHB4JyBoZWlnaHQ9JzExcHgnIHZpZXdCb3g9JzAgMCAxNCAxMScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGQ9J00wLDAgTDE0LDAgTDE0LDEuNzUgTDAsMS43NSBMMCwwIFogTTAsNC4zNzUgTDE0LDQuMzc1IEwxNCw2LjEyNSBMMCw2LjEyNSBMMCw0LjM3NSBaIE0wLDguNzUgTDE0LDguNzUgTDE0LDEwLjUgTDAsMTAuNSBMMCw4Ljc1IFonIGlkPSdwYXRoLTEnJTNFJTNDL3BhdGglM0UlM0MvZGVmcyUzRSUzQ2cgaWQ9J/Cfko4tVUktRWxlbWVudHMnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDZyBpZD0nMTIpLU5hdmJhcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTExNzQuMDAwMDAwLCAtMTI5MC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0dyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxMTc0LjAwMDAwMCwgMTI4OC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0ljb24tQ29sb3InIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMCknJTNFJTNDdXNlIGZpbGw9JyN7JG5hdmJhci1kYXJrLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjEnIGZpbGw9JyN7JG5hdmJhci1kYXJrLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9zdmclM0VcIikgIWRlZmF1bHQ7XHJcblxyXG4kbmF2YmFyLWxpZ2h0LWNvbG9yOiAkZ3JheS01MDAgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtaG92ZXItY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6ICRncmF5LTMwMCAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC10b2dnbGVyLWljb24tYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE0cHgnIGhlaWdodD0nMTFweCcgdmlld0JveD0nMCAwIDE0IDExJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BhdGggZD0nTTAsMCBMMTQsMCBMMTQsMS43NSBMMCwxLjc1IEwwLDAgWiBNMCw0LjM3NSBMMTQsNC4zNzUgTDE0LDYuMTI1IEwwLDYuMTI1IEwwLDQuMzc1IFogTTAsOC43NSBMMTQsOC43NSBMMTQsMTAuNSBMMCwxMC41IEwwLDguNzUgWicgaWQ9J3BhdGgtMSclM0UlM0MvcGF0aCUzRSUzQy9kZWZzJTNFJTNDZyBpZD0n8J+Sji1VSS1FbGVtZW50cycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPScxMiktTmF2YmFyJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTE3NC4wMDAwMDAsIC0xMjkwLjAwMDAwMCknJTNFJTNDZyBpZD0nR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDExNzQuMDAwMDAwLCAxMjg4LjAwMDAwMCknJTNFJTNDZyBpZD0nSWNvbi1Db2xvcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDIuMDAwMDAwKSclM0UlM0N1c2UgZmlsbD0nI3skbmF2YmFyLWxpZ2h0LWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjEnIGZpbGw9JyN7JG5hdmJhci1saWdodC1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuJG5hdmJhci1saWdodC10b2dnbGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMDYpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRyb3Bkb3duLWhvdmVyLWJnOiByZ2JhKCRibGFjaywgMC4wNCkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2YmFyLWRyb3Bkb3duLWljb24tYmc6IHJnYmEoJGJsYWNrLCAwLjA4KSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIERyb3Bkb3duc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZHJvcGRvd24tc3BhY2VyOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1ib3gtc2hhZG93OiAkYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuXHJcbiRkcm9wZG93bi1pbm5lci1ib3JkZXItcmFkaXVzOiAwcHggIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24tbGluay1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjogJGNvbXBvbmVudC1ob3Zlci1jb2xvciAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICRjb21wb25lbnQtaG92ZXItYmcgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1saW5rLWxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAwLjQycmVtICFkZWZhdWx0O1xyXG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXg6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjogJHRleHQtbGlnaHRlciAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBhZ2luYXRpb25cclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAwLjU5NHJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14OiAwLjM1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktc206IDAuNXJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAwLjE1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktbGc6IDAuODc1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtbGc6IDAuNHJlbSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6IDEgIWRlZmF1bHQ7IC8vIChjKVxyXG5cclxuJHBhZ2luYXRpb24tY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tYmc6IHJnYmEoJGJsYWNrLCAwLjA4KSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tbWFyZ2luLXN0YXJ0OiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICRwYWdpbmF0aW9uLWJnICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tZm9jdXMtY29sb3I6ICRwYWdpbmF0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1mb2N1cy1iZzogcmdiYSgkYmxhY2ssIDAuMTYpICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1mb2N1cy1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24taG92ZXItY29sb3I6ICRwYWdpbmF0aW9uLWZvY3VzLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ob3Zlci1iZzogJHBhZ2luYXRpb24tZm9jdXMtYmcgIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlci1jb2xvcjogJHBhZ2luYXRpb24taG92ZXItYmcgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiAkcGFnaW5hdGlvbi1iZyAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtYm9yZGVyLWNvbG9yOiAkcGFnaW5hdGlvbi1kaXNhYmxlZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogQ2FyZHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGNhcmQtc3BhY2VyLXk6ICRzcGFjZXIgKiAxLjUgIWRlZmF1bHQ7XHJcbiRjYXJkLXNwYWNlci14OiAkc3BhY2VyICogMS41ICFkZWZhdWx0O1xyXG4kY2FyZC10aXRsZS1zcGFjZXIteTogJHNwYWNlciAqIDAuODc1ICFkZWZhdWx0O1xyXG4kY2FyZC1zcGFjZXIteC1zbTogMXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjYXJkLWJvcmRlci13aWR0aDogMCAhZGVmYXVsdDtcclxuJGNhcmQtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kY2FyZC1pbm5lci1ib3JkZXItY29sb3I6ICRib3JkZXItaW5uZXItY29sb3IgIWRlZmF1bHQ7IC8vIChDKVxyXG4kY2FyZC1jYXAtcGFkZGluZy15OiAkc3BhY2VyICogMS41ICFkZWZhdWx0O1xyXG4kY2FyZC1jYXAtYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kY2FyZC1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kY2FyZC1pbWctb3ZlcmxheS1wYWRkaW5nOiAxLjVyZW0gIWRlZmF1bHQ7XHJcbiRjYXJkLWJveC1zaGFkb3c6IDAgMC4yNXJlbSAxLjEyNXJlbSByZ2JhKCRibGFjaywgMC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICogQWNjb3JkaW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhY2NvcmRpb24tcGFkZGluZy15OiAwLjgycmVtICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1ib3JkZXItY29sb3I6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1hY3RpdmUtYmc6ICRhY2NvcmRpb24tYmcgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWljb24td2lkdGg6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWljb24tY29sb3I6ICRhY2NvcmRpb24tYnV0dG9uLWNvbG9yICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWljb24tYWN0aXZlLWNvbG9yOiAkYWNjb3JkaW9uLWJ1dHRvbi1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWljb24tdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1idXR0b24taWNvbjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMjAnIGhlaWdodD0nMjEnIHZpZXdCb3g9JzAgMCAyMCAyMScgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTcuNSA1LjVMMTIuNSAxMC41TDcuNSAxNS41JyBzdHJva2U9JyN7JGFjY29yZGlvbi1pY29uLWNvbG9yfScgc3Ryb2tlLXdpZHRoPScxLjc1JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQ3BhdGggZD0nTTcuNSA1LjVMMTIuNSAxMC41TDcuNSAxNS41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4xJyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuXHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScyMCcgaGVpZ2h0PScyMScgdmlld0JveD0nMCAwIDIwIDIxJyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBkPSdNNy41IDUuNUwxMi41IDEwLjVMNy41IDE1LjUnIHN0cm9rZT0nI3skYWNjb3JkaW9uLWljb24tY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNy41IDUuNUwxMi41IDEwLjVMNy41IDE1LjUnIHN0cm9rZT0nd2hpdGUnIHN0cm9rZS1vcGFjaXR5PScwLjEnIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBUb29sdGlwc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kdG9vbHRpcC1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJHRvb2x0aXAtYmc6ICRkYXJrICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1vcGFjaXR5OiAxICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1wYWRkaW5nLXk6ICRzcGFjZXIgKiAwLjMxMjUgIWRlZmF1bHQ7XHJcbiR0b29sdGlwLXBhZGRpbmcteDogJHNwYWNlciAqIDAuNzUgIWRlZmF1bHQ7XHJcblxyXG4kdG9vbHRpcC1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogUG9wb3ZlcnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kcG9wb3Zlci1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJHBvcG92ZXItYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm94LXNoYWRvdzogJGJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcblxyXG4kcG9wb3Zlci1oZWFkZXItYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1oZWFkZXItY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteTogJHNwYWNlciAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kcG9wb3Zlci1ib2R5LWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXk6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFRvYXN0c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiR0b2FzdC1wYWRkaW5nLXk6IDAuNDA2cmVtICFkZWZhdWx0O1xyXG4kdG9hc3QtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XHJcbiR0b2FzdC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiR0b2FzdC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjYXJkLWJnLCAwLjg1KTtcclxuJHRvYXN0LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kdG9hc3QtaGVhZGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYm9yZGVyLWNvbG9yLCAwLjMpICFkZWZhdWx0O1xyXG4kdG9hc3Qtc3BhY2luZzogMXJlbSAhZGVmYXVsdDtcclxuXHJcbiR0b2FzdC1oZWFkZXItY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1iYWNrZ3JvdW5kLWNvbG9yOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogQmFkZ2VzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRiYWRnZS1mb250LXNpemU6IDAuODFlbSAhZGVmYXVsdDtcclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcbiRiYWRnZS1wYWRkaW5nLXk6IDAuNDllbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBhZGRpbmcteDogMWVtICFkZWZhdWx0O1xyXG4kYmFkZ2UtYm9yZGVyLXJhZGl1czogMC4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRiYWRnZS1waWxsLXBhZGRpbmcteDogMC41ODNlbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBpbGwtYm9yZGVyLXJhZGl1czogMTByZW0gIWRlZmF1bHQ7XHJcblxyXG4kYmFkZ2UtaGVpZ2h0OiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYmFkZ2Utd2lkdGg6IDEuNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRiYWRnZS1jZW50ZXItZm9udC1zaXplOiAwLjgxMnJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE1vZGFsc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbW9kYWwtaW5uZXItcGFkZGluZzogMS41cmVtICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLWZvb3Rlci1tYXJnaW4tYmV0d2VlbjogMXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1kaWFsb2ctbWFyZ2luOiAkbW9kYWwtaW5uZXItcGFkZGluZyAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14czogJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3cgIWRlZmF1bHQ7XHJcbiRtb2RhbC1jb250ZW50LWJveC1zaGFkb3ctc20tdXA6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kbW9kYWwtYmFja2Ryb3Atb3BhY2l0eTogMC41ICFkZWZhdWx0O1xyXG4kbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteTogMS4yNXJlbSAhZGVmYXVsdDtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXg6IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZzogJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgJG1vZGFsLWlubmVyLXBhZGRpbmcgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbiRtb2RhbC1mb290ZXItcGFkZGluZzogJG1vZGFsLWhlYWRlci1wYWRkaW5nLXggJG1vZGFsLWlubmVyLXBhZGRpbmcgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG1vZGFsLWxnOiA1MHJlbSAhZGVmYXVsdDtcclxuJG1vZGFsLW1kOiAzNXJlbSAhZGVmYXVsdDtcclxuJG1vZGFsLXNtOiAyMi41cmVtICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLWZhZGUtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDBweCkgc2NhbGUoMC44KSAhZGVmYXVsdDtcclxuJG1vZGFsLXNob3ctdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMTVzICFkZWZhdWx0OyAvLyAoQylcclxuJG1vZGFsLXRyYW5zaXRpb246IHRyYW5zZm9ybSAkbW9kYWwtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlLW91dCAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1zaW1wbGUtcGFkZGluZzogM3JlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRtb2RhbC1zaW1wbGUtY2xvc2UtcG9zaXRpb246IDFyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBBbGVydHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGFsZXJ0LXBhZGRpbmcteTogJHNwYWNlciAqIDAuNjg3ICFkZWZhdWx0O1xyXG4kYWxlcnQtcGFkZGluZy14OiAkc3BhY2VyICogMC44NzUgIWRlZmF1bHQ7XHJcbiRhbGVydC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuJGFsZXJ0LWJnLXNjYWxlOiAtODQlICFkZWZhdWx0O1xyXG4kYWxlcnQtYm9yZGVyLXNjYWxlOiAtODQlICFkZWZhdWx0O1xyXG4kYWxlcnQtY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xyXG4kYWxlcnQtaWNvbi1iZzogJHdoaXRlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogUHJvZ3Jlc3MgYmFyc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kcHJvZ3Jlc3MtaGVpZ2h0OiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtZm9udC1zaXplOiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtYmc6IHJnYmEtdG8taGV4KHJnYmEoJGdyYXktNTAwLCAwLjA4KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWJvcmRlci1yYWRpdXM6IDMuMTI1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtYmFyLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyBMaXN0IGdyb3VwXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBsaXN0LWdyb3VwLXZhcmlhYmxlc1xyXG4kbGlzdC1ncm91cC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteTogMC41N3JlbSAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tYmctc2NhbGU6IC04NCUgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tYm9yZGVyLXNjYWxlOiAtODQlICFkZWZhdWx0OyAvLyAoQylcclxuJGxpc3QtZ3JvdXAtaXRlbS1jb2xvci1zY2FsZTogMCUgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tYmctaG92ZXItc2NhbGU6IDAlICFkZWZhdWx0OyAvLyAgKGMpXHJcblxyXG4kbGlzdC1ncm91cC1ob3Zlci1iZzogcmdiYS10by1oZXgoJGNvbXBvbmVudC1ob3Zlci1iZywgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiRsaXN0LWdyb3VwLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtYmc6ICRsaXN0LWdyb3VwLWJnICFkZWZhdWx0O1xyXG5cclxuJGxpc3QtZ3JvdXAtYWN0aW9uLWhvdmVyLWNvbG9yOiAkY29tcG9uZW50LWhvdmVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWFjdGlvbi1hY3RpdmUtYmc6ICRsaXN0LWdyb3VwLWhvdmVyLWJnICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGxpc3QtZ3JvdXAtdmFyaWFibGVzXHJcblxyXG4vLyAqIEltYWdlIHRodW1ibmFpbHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHRodW1ibmFpbC1wYWRkaW5nOiAwICFkZWZhdWx0O1xyXG4kdGh1bWJuYWlsLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJHRodW1ibmFpbC1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHRodW1ibmFpbC1ib3JkZXItcmFkaXVzOiAwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEZpZ3VyZXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGZpZ3VyZS1jYXB0aW9uLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuXHJcbi8vICogQnJlYWRjcnVtYnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGJyZWFkY3J1bWItcGFkZGluZy15OiAwICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1wYWRkaW5nLXg6IDAgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWl0ZW0tcGFkZGluZy14OiAwLjg3NXJlbSAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItbWFyZ2luLWJvdHRvbTogMXJlbSAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAkYmxhY2sgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWFjdGl2ZS1jb2xvcjogJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvciAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItZGl2aWRlcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGNsYXNzPSdpY29uIGljb24tdGFibGVyIGljb24tdGFibGVyLWNoZXZyb24tcmlnaHQnIHdpZHRoPScxNicgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDI0IDI0JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZT0nI3skYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yfScgZmlsbD0nbm9uZScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyUzRSUzQ3BhdGggc3Ryb2tlPSdub25lJyBkPSdNMCAwaDI0djI0SDB6JyBmaWxsPSdub25lJyUzRSUzQy9wYXRoJTNFJTNDcG9seWxpbmUgcG9pbnRzPSc5IDYgMTUgMTIgOSAxOCclM0UlM0MvcG9seWxpbmUlM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1kaXZpZGVyLWZsaXBwZWQ6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBjbGFzcz0naWNvbiBpY29uLXRhYmxlciBpY29uLXRhYmxlci1jaGV2cm9uLWxlZnQnIHdpZHRoPScxNicgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDI0IDI0JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZT0nI3skYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yfScgZmlsbD0nbm9uZScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyUzRSUzQ3BhdGggc3Ryb2tlPSdub25lJyBkPSdNMCAwaDI0djI0SDB6JyBmaWxsPSdub25lJyUzRSUzQy9wYXRoJTNFJTNDcG9seWxpbmUgcG9pbnRzPScxNSA2IDkgMTIgMTUgMTgnJTNFJTNDL3BvbHlsaW5lJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRicmVhZGNydW1iLWRpdmlkZXItY2hlY2s6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBjbGFzcz0naWNvbiBpY29uLXRhYmxlciBpY29uLXRhYmxlci1jaGVjaycgd2lkdGg9JzE2JyBoZWlnaHQ9JzI0JyB2aWV3Qm94PScwIDAgMjQgMjQnIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlPScjeyRicmVhZGNydW1iLWRpdmlkZXItY29sb3J9JyBmaWxsPSdub25lJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnJTNFJTNDcGF0aCBzdHJva2U9J25vbmUnIGQ9J00wIDBoMjR2MjRIMHonIGZpbGw9J25vbmUnJTNFJTNDL3BhdGglM0UlM0NwYXRoIGQ9J001IDEybDUgNWwxMCAtMTAnJTNFJTNDL3BhdGglM0UlM0Mvc3ZnJTNFXCIpO1xyXG5cclxuJGJyZWFkY3J1bWItaWNvbi1jaGVjay1zdmc6IHN0ci1yZXBsYWNlKFxyXG4gIHN0ci1yZXBsYWNlKCRicmVhZGNydW1iLWRpdmlkZXItY2hlY2ssICcjeyRicmVhZGNydW1iLWRpdmlkZXItY29sb3J9JywgJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvciksXHJcbiAgJyMnLFxyXG4gICclMjMnXHJcbik7IC8vIChDKVxyXG5cclxuLy8gKiBDYXJvdXNlbFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kY2Fyb3VzZWwtY29udHJvbC1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuJGNhcm91c2VsLWluZGljYXRvci13aWR0aDogMzRweCAhZGVmYXVsdDtcclxuJGNhcm91c2VsLWluZGljYXRvci1oZWlnaHQ6IDVweCAhZGVmYXVsdDtcclxuJGNhcm91c2VsLWluZGljYXRvci1oaXQtYXJlYS1oZWlnaHQ6IDAgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1pbmRpY2F0b3Itc3BhY2VyOiA1cHggIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1pbmRpY2F0b3Itb3BhY2l0eTogMC40ICFkZWZhdWx0O1xyXG5cclxuJGNhcm91c2VsLWNhcHRpb24tc3BhY2VyOiAxLjQzN3JlbSAhZGVmYXVsdDtcclxuXHJcbiRjYXJvdXNlbC1jb250cm9sLWljb24td2lkdGg6IDIuNXJlbSAhZGVmYXVsdDtcclxuJGNhcm91c2VsLWNvbnRyb2wtcHJldi1pY29uLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxOCcgaGVpZ2h0PScxOCcgdmlld0JveD0nMCAwIDE4IDE4JyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBkPSdNMTEuMjUgNC41TDYuNzUgOUwxMS4yNSAxMy41JyBzdHJva2U9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNMTEuMjUgNC41TDYuNzUgOUwxMS4yNSAxMy41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4yJyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuXHJcbiRjYXJvdXNlbC1jb250cm9sLW5leHQtaWNvbi1iZzogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTknIGhlaWdodD0nMTgnIHZpZXdCb3g9JzAgMCAxOSAxOCcgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTcuMjUgNC41TDExLjc1IDlMNy4yNSAxMy41JyBzdHJva2U9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNy4yNSA0LjVMMTEuNzUgOUw3LjI1IDEzLjUnIHN0cm9rZT0nd2hpdGUnIHN0cm9rZS1vcGFjaXR5PScwLjInIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gU3Bpbm5lcnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHNwaW5uZXItd2lkdGgtbGc6IDNyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kc3Bpbm5lci1oZWlnaHQtbGc6ICRzcGlubmVyLXdpZHRoLWxnICFkZWZhdWx0OyAvLyAoQylcclxuJHNwaW5uZXItYm9yZGVyLXdpZHRoLWxnOiAwLjNlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIENsb3NlXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRidG4tY2xvc2Utd2lkdGg6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWNvbG9yOiAkYmxhY2sgIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2UtYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE5JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTkgMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NwYXRoIGQ9J00xNCA0LjVMNSAxMy41JyBzdHJva2U9JyN7JGJ0bi1jbG9zZS1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0NwYXRoIGQ9J00xNCA0LjVMNSAxMy41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4yJyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNSA0LjVMMTQgMTMuNScgc3Ryb2tlPScjeyRidG4tY2xvc2UtY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNSA0LjVMMTQgMTMuNScgc3Ryb2tlPSd3aGl0ZScgc3Ryb2tlLW9wYWNpdHk9JzAuMicgc3Ryb2tlLXdpZHRoPScxLjc1JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2UtZm9jdXMtc2hhZG93OiBub25lICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWZvY3VzLW9wYWNpdHk6IDAuNzUgIWRlZmF1bHQ7XHJcblxyXG4kY2xvc2UtZm9udC13ZWlnaHQ6IDMwMCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE9mZmNhbnZhc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgb2ZmY2FudmFzLXZhcmlhYmxlc1xyXG4kb2ZmY2FudmFzLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIG9mZmNhbnZhcy12YXJpYWJsZXNcclxuXHJcbi8vIFV0aWxpdGllc1xyXG4kb3ZlcmZsb3dzOiBhdXRvLCBoaWRkZW4sIHNjcm9sbCwgdmlzaWJsZSAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ1xyXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xyXG4kZGFyay1zdHlsZTogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBVc2VmdWwgSWNvbnNcclxuJHVwbG9hZC1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgY2xhc3M9J2ljb24gaWNvbi10YWJsZXIgaWNvbi10YWJsZXItdXBsb2FkJyB3aWR0aD0nMjQnIGhlaWdodD0nMjQnIHZpZXdCb3g9JzAgMCAyNCAyNCcgc3Ryb2tlLXdpZHRoPScyJyBzdHJva2U9J2N1cnJlbnRDb2xvcicgZmlsbD0nbm9uZScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyUzRSUzQ3BhdGggc3Ryb2tlPSdub25lJyBkPSdNMCAwaDI0djI0SDB6JyBmaWxsPSdub25lJy8lM0UlM0NwYXRoIGQ9J000IDE3djJhMiAyIDAgMCAwIDIgMmgxMmEyIDIgMCAwIDAgMiAtMnYtMicgLyUzRSUzQ3BvbHlsaW5lIHBvaW50cz0nNyA5IDEyIDQgMTcgOScgLyUzRSUzQ2xpbmUgeDE9JzEyJyB5MT0nNCcgeDI9JzEyJyB5Mj0nMTYnIC8lM0UlM0Mvc3ZnJTNFXCIpO1xyXG4iLCIvLyBWYXJpYWJsZXNcclxuLy9cclxuLy8gVmFyaWFibGVzIHNob3VsZCBmb2xsb3cgdGhlIGAkY29tcG9uZW50LXN0YXRlLXByb3BlcnR5LXNpemVgIGZvcm11bGEgZm9yXHJcbi8vIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxyXG4vL1xyXG4vLyAoQykgQ3VzdG9tIHZhcmlhYmxlcyBmb3IgZXh0ZW5kZWQgY29tcG9uZW50cyBvZiBib290c3RyYXAgb25seVxyXG5cclxuLy8gISBfdmFyaWFibGUtZGFyay5zY3NzIGZpbGUgb3ZlcnJpZGVzIF92YXJpYWJsZS5zY3NzIGZpbGUuXHJcblxyXG4vLyAqIENvbG9yc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xyXG4kYmxhY2s6ICMwMDAgIWRlZmF1bHQ7XHJcblxyXG4kYmFzZTogIzg2OTJkMCAhZGVmYXVsdDtcclxuJGdyYXktMjU6IHJnYmEoJHdoaXRlLCAwLjAxNSkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZ3JheS01MDogcmdiYSgkd2hpdGUsIDAuMDMpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMTAwOiByZ2JhKCR3aGl0ZSwgMC44KSAhZGVmYXVsdDtcclxuJGdyYXktMjAwOiByZ2JhKCR3aGl0ZSwgMC42KSAhZGVmYXVsdDtcclxuJGdyYXktMzAwOiByZ2JhKCR3aGl0ZSwgMC40KSAhZGVmYXVsdDtcclxuJGdyYXktNDAwOiByZ2JhKCR3aGl0ZSwgMC4zKSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAkYmFzZSAhZGVmYXVsdDtcclxuJGdyYXktNjAwOiByZ2JhKCRibGFjaywgMC4xKSAhZGVmYXVsdDtcclxuJGdyYXktNzAwOiByZ2JhKCRibGFjaywgMC4zKSAhZGVmYXVsdDtcclxuJGdyYXktODAwOiByZ2JhKCRibGFjaywgMC40NSkgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuNjUpICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3ItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZ3JheS1jb2xvcnMtbWFwXHJcbiRncmF5czogKFxyXG4gICcyNSc6ICRncmF5LTI1LFxyXG4gICc1MCc6ICRncmF5LTUwXHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvcnMtbWFwXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY29sb3ItdmFyaWFibGVzXHJcbiRibHVlOiAjMDA3YmZmICFkZWZhdWx0O1xyXG4kaW5kaWdvOiAjNjYxMGYyICFkZWZhdWx0O1xyXG4kcHVycGxlOiAjNzM2N2YwICFkZWZhdWx0O1xyXG4kcGluazogI2U4M2U4YyAhZGVmYXVsdDtcclxuJHJlZDogI2VhNTQ1NSAhZGVmYXVsdDtcclxuJG9yYW5nZTogI2ZkN2UxNCAhZGVmYXVsdDtcclxuJHllbGxvdzogI2ZmOWY0MyAhZGVmYXVsdDtcclxuJGdyZWVuOiAjMjhjNzZmICFkZWZhdWx0O1xyXG4kdGVhbDogIzIwYzk5NyAhZGVmYXVsdDtcclxuJGN5YW46ICMwMGNmZTggIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgY29sb3ItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3ItdmFyaWFibGVzXHJcbiRwcmltYXJ5OiAkcHVycGxlICFkZWZhdWx0O1xyXG4kc2Vjb25kYXJ5OiAjYThhYWFlICFkZWZhdWx0O1xyXG4kc3VjY2VzczogJGdyZWVuICFkZWZhdWx0O1xyXG4kaW5mbzogJGN5YW4gIWRlZmF1bHQ7XHJcbiR3YXJuaW5nOiAkeWVsbG93ICFkZWZhdWx0O1xyXG4kZGFuZ2VyOiAkcmVkICFkZWZhdWx0O1xyXG4kbGlnaHQ6ICM0NDQ3NWIgIWRlZmF1bHQ7XHJcbiRkYXJrOiAjZDdkOGRlICFkZWZhdWx0O1xyXG4kZ3JheTogJGdyYXktMTAwICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCB0aGVtZS1jb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0aGVtZS1jb2xvcnMtbWFwXHJcbiR0aGVtZS1jb2xvcnM6IChcclxuICAncHJpbWFyeSc6ICRwcmltYXJ5LFxyXG4gICdzZWNvbmRhcnknOiAkc2Vjb25kYXJ5LFxyXG4gICdzdWNjZXNzJzogJHN1Y2Nlc3MsXHJcbiAgJ2luZm8nOiAkaW5mbyxcclxuICAnd2FybmluZyc6ICR3YXJuaW5nLFxyXG4gICdkYW5nZXInOiAkZGFuZ2VyLFxyXG4gICdsaWdodCc6ICRsaWdodCxcclxuICAnZGFyayc6ICRkYXJrLFxyXG4gICdncmF5JzogJGdyYXlcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCB0aGVtZS1jb2xvcnMtbWFwXHJcblxyXG4kY29sb3Itc2NoZW1lOiAnZGFyaycgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBCb2R5XHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRib2R5LWJnOiAjMjUyOTNjICFkZWZhdWx0O1xyXG4kcmdiYS10by1oZXgtYmc6ICRiYXNlICFkZWZhdWx0OyAvLyAoQylcclxuJGJvZHktY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTMwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnLWludmVydGVkOiByZ2IoMTYwLCAxNDksIDE0OSkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDb21wb25lbnRzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhbGVydC1iZy1zY2FsZTogLTg0JSAhZGVmYXVsdDtcclxuJGFsZXJ0LWJvcmRlci1zY2FsZTogLTg0JSAhZGVmYXVsdDtcclxuJGFsZXJ0LWNvbG9yLXNjYWxlOiAwJSAhZGVmYXVsdDtcclxuJGFsZXJ0LWljb24tYmc6ICMyODMwNDYgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgocmdiYSgkd2hpdGUsIDAuMSksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbi8vICRib3JkZXItaW5uZXItY29sb3I6IHJnYmEtdG8taGV4KHJnYmEoJHdoaXRlLCAwLjA5KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRib3JkZXItY29sb3I6ICM0MzQ5NjggIWRlZmF1bHQ7XHJcbiRib3JkZXItaW5uZXItY29sb3I6IHJnYmEoJHdoaXRlLCAwLjA5KSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuJGJveC1zaGFkb3c6IDAgMC4yNXJlbSAxcmVtIHJnYmEoMTUsIDIwLCAzNCwgMC41NSkgIWRlZmF1bHQ7XHJcbiRib3gtc2hhZG93LXNtOiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYSgxNSwgMjAsIDM0LCAwLjQpICFkZWZhdWx0O1xyXG4kYm94LXNoYWRvdy1sZzogMCAwLjYyNXJlbSAxLjI1cmVtIHJnYmEoMTUsIDIwLCAzNCwgMC41KSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3gtc2hhZG93LXZhcmlhYmxlc1xyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHJnYmEoJHdoaXRlLCAwLjA1KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93OiAwIDAuMzFyZW0gMS4yNXJlbSAwIHJnYmEoJGJsYWNrLCAwLjQpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVHlwb2dyYXBoeVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kdGV4dC1tdXRlZDogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJHdoaXRlLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LWxpZ2h0OiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVzdDogcmdiYS10by1oZXgoJGdyYXktMzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRoZWFkaW5ncy1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDYXJkc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kY2FyZC1iZzogIzJmMzM0OSAhZGVmYXVsdDtcclxuJGNhcmQtYm94LXNoYWRvdzogMCAwLjI1cmVtIDEuMjVyZW0gcmdiYSgxNSwgMjAsIDM0LCAwLjQpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBUYWJsZXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yOiAwLjAyICFkZWZhdWx0O1xyXG4kdGFibGUtc3RyaXBlZC1iZzogcmdiYS10by1oZXgocmdiYSgkYmFzZSwgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJGNhcmQtYmcpICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLWhvdmVyLWJnLWZhY3RvcjogMC4wOCAhZGVmYXVsdDtcclxuJHRhYmxlLWhvdmVyLWJnOiByZ2JhKCRiYXNlLCAkdGFibGUtaG92ZXItYmctZmFjdG9yKSAhZGVmYXVsdDtcclxuXHJcbi8vICogQWNjb3JkaW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJGFjY29yZGlvbi1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYm9yZGVyLWNvbG9yOiAkYWNjb3JkaW9uLWJnICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1idXR0b24tY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vICogVG9vbHRpcHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kdG9vbHRpcC1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gQnV0dG9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYnRuLWJveC1zaGFkb3c6IDBweCAycHggNHB4IHJnYmEoMTUsIDIwLCAzNCwgMC40KSAhZGVmYXVsdDtcclxuXHJcbi8vICogRm9ybXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGlucHV0LWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuJGlucHV0LWRpc2FibGVkLWJnOiByZ2JhKCRiYXNlLCAwLjA4KSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtYm9yZGVyOiAxcHggc29saWQgJGdyYXktNTAwO1xyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtZGlzYWJsZWQtYmc6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9ybS1zd2l0Y2gtY29sb3I6IHJnYmEtdG8taGV4KHJnYmEoJHdoaXRlLCAwLjE1KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXJhbmdlLXRodW1iLWJnOiByZ2JhLXRvLWhleChyZ2JhKCR3aGl0ZSwgMC41KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbi8vICogTmF2c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2LXRhYnMtbGluay1hY3RpdmUtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gKiBOYXZiYXJcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJG5hdmJhci1saWdodC1ob3Zlci1jb2xvcjogIzRlNTE1NSAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3I6ICM0ZTUxNTUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6IHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRyb3Bkb3duLWhvdmVyLWJnOiByZ2JhKCRiYXNlLCAwLjA2KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXZiYXItZHJvcGRvd24taWNvbi1iZzogcmdiYSgkYmFzZSwgMC4wOCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBEcm9wZG93bnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGRyb3Bkb3duLWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogUGFnaW5hdGlvblxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kcGFnaW5hdGlvbi1iZzogcmdiYSgkYmFzZSwgMC4wOCkgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1mb2N1cy1iZzogcmdiYSgkYmFzZSwgMC4xNikgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBvcG92ZXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJHBvcG92ZXItYm9keS1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNTAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIE1vZGFsXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJG1vZGFsLWNvbnRlbnQtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gKiBQcm9ncmVzcyBiYXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJHByb2dyZXNzLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRncmF5LTUwMCwgMC4wOCksICRjYXJkLWJnKSAhZGVmYXVsdDtcclxuXHJcbi8vICogTGlzdCBncm91cFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbGlzdC1ncm91cC1ob3Zlci1iZzogcmdiYS10by1oZXgocmdiYSgkcHJpbWFyeSwgMC4wOCksICRjYXJkLWJnKSAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1iZzogJGxpc3QtZ3JvdXAtaG92ZXItYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEJyZWFkY3J1bWJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRicmVhZGNydW1iLWRpdmlkZXItY29sb3I6ICRiYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDbG9zZVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRidG4tY2xvc2UtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbiRrYmQtY29sb3I6ICRkYXJrICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDb25maWdcclxuJHJ0bC1zdXBwb3J0OiBmYWxzZSAhZGVmYXVsdDtcclxuJGRhcmstc3R5bGU6IHRydWUgIWRlZmF1bHQ7XHJcbiJdfQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
