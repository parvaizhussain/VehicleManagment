/*!
 * bsStepper v1.7.0 (https://github.com/Johann-S/bs-stepper)
 * Copyright 2018 - 2019 Johann-S <johann.servoire@gmail.com>
 * Licensed under MIT (https://github.com/Johann-S/bs-stepper/blob/master/LICENSE)
 */
.bs-stepper .step-trigger {
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding: 20px;
  font-size: 1rem;
  font-weight: 700;
  line-height: 1.5;
  color: #6c757d;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  background-color: transparent;
  border: none;
  border-radius: 0.25rem;
  transition: background-color 0.15s ease-out, color 0.15s ease-out;
}

.bs-stepper .step-trigger:not(:disabled):not(.disabled) {
  cursor: pointer;
}

.bs-stepper .step-trigger:disabled,
.bs-stepper .step-trigger.disabled {
  pointer-events: none;
  opacity: 0.65;
}

.bs-stepper .step-trigger:focus {
  color: #007bff;
  outline: none;
}

.bs-stepper .step-trigger:hover {
  text-decoration: none;
  background-color: rgba(0, 0, 0, 0.06);
}

@media (max-width: 520px) {
  .bs-stepper .step-trigger {
    flex-direction: column;
    padding: 10px;
  }
}
.bs-stepper-label {
  display: inline-block;
  margin: 0.25rem;
}

.bs-stepper-header {
  display: flex;
  align-items: center;
}

@media (max-width: 520px) {
  .bs-stepper-header {
    margin: 0 -10px;
    text-align: center;
  }
}
.bs-stepper-line,
.bs-stepper .line {
  flex: 1 0 32px;
  min-width: 1px;
  min-height: 1px;
  margin: auto;
  background-color: rgba(0, 0, 0, 0.12);
}

@media (max-width: 400px) {
  .bs-stepper-line,
  .bs-stepper .line {
    flex-basis: 20px;
  }
}
.bs-stepper-circle {
  display: inline-flex;
  align-content: center;
  justify-content: center;
  width: 2em;
  height: 2em;
  padding: 0.5em 0;
  margin: 0.25rem;
  line-height: 1em;
  color: #fff;
  background-color: #6c757d;
  border-radius: 1em;
}

.active .bs-stepper-circle {
  background-color: #007bff;
}

.bs-stepper-content {
  padding: 0 20px 20px;
}

@media (max-width: 520px) {
  .bs-stepper-content {
    padding: 0;
  }
}
.bs-stepper.vertical {
  display: flex;
}

.bs-stepper.vertical .bs-stepper-header {
  flex-direction: column;
  align-items: stretch;
  margin: 0;
}

.bs-stepper.vertical .bs-stepper-pane,
.bs-stepper.vertical .content {
  display: block;
}

.bs-stepper.vertical .bs-stepper-pane:not(.fade),
.bs-stepper.vertical .content:not(.fade) {
  display: block;
  visibility: hidden;
}

.bs-stepper-pane:not(.fade),
.bs-stepper .content:not(.fade) {
  display: none;
}

.bs-stepper .content.fade,
.bs-stepper-pane.fade {
  visibility: hidden;
  transition-duration: 0.3s;
  transition-property: opacity;
}

.bs-stepper-pane.fade.active,
.bs-stepper .content.fade.active {
  visibility: visible;
  opacity: 1;
}

.bs-stepper-pane.active:not(.fade),
.bs-stepper .content.active:not(.fade) {
  display: block;
  visibility: visible;
}

.bs-stepper-pane.dstepper-block,
.bs-stepper .content.dstepper-block {
  display: block;
}

.bs-stepper:not(.vertical) .bs-stepper-pane.dstepper-none,
.bs-stepper:not(.vertical) .content.dstepper-none {
  display: none;
}

.vertical .bs-stepper-pane.fade.dstepper-none,
.vertical .content.fade.dstepper-none {
  visibility: hidden;
}

/*# sourceMappingURL=bs-stepper.css.map */
.bs-stepper {
  border-radius: 0.375rem;
}
.bs-stepper .line {
  flex: 0;
  min-width: auto;
  min-height: auto;
  background-color: transparent;
  margin: 0;
}
.bs-stepper .bs-stepper-header {
  padding: 1.5rem 1.5rem;
}
.bs-stepper .bs-stepper-header .step .step-trigger {
  padding: 0 1rem;
  flex-wrap: nowrap;
  gap: 1rem;
}
.bs-stepper .bs-stepper-header .step .step-trigger .bs-stepper-label {
  margin: 0;
  max-width: 224px;
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: start;
  display: inline-grid;
  font-weight: 600;
  font-size: 0.9375rem;
}
.bs-stepper .bs-stepper-header .step .step-trigger .bs-stepper-label .bs-stepper-title {
  line-height: 1;
}
.bs-stepper .bs-stepper-header .step .step-trigger .bs-stepper-label .bs-stepper-subtitle {
  font-size: 0.8125rem;
  font-weight: 400;
  margin-top: 0.25rem;
}
.bs-stepper .bs-stepper-header .step .step-trigger:hover {
  background-color: transparent;
}
html:not([dir=rtl]) .bs-stepper .bs-stepper-header .step:first-child .step-trigger {
  padding-left: 0;
}
[dir=rtl] .bs-stepper .bs-stepper-header .step:first-child .step-trigger {
  padding-right: 0;
}
html:not([dir=rtl]) .bs-stepper .bs-stepper-header .step:last-child .step-trigger {
  padding-right: 0;
}
[dir=rtl] .bs-stepper .bs-stepper-header .step:last-child .step-trigger {
  padding-left: 0;
}
.bs-stepper .bs-stepper-header .step .bs-stepper-circle {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.375rem;
  width: 2.5rem;
  height: 2.5rem;
  font-size: 1.125rem;
  font-weight: 600;
}
.bs-stepper .bs-stepper-content {
  padding: 1.5rem 1.5rem;
}
.bs-stepper.vertical .bs-stepper-header {
  min-width: 18rem;
}
.bs-stepper.vertical .bs-stepper-header .step .step-trigger {
  padding: 0.5rem 0;
}
.bs-stepper.vertical .bs-stepper-header .step:first-child .step-trigger {
  padding-top: 0;
}
.bs-stepper.vertical .bs-stepper-header .step:last-child .step-trigger {
  padding-bottom: 0;
}
.bs-stepper.vertical .bs-stepper-header .line {
  position: relative;
  min-height: 1px;
}
.bs-stepper.vertical .bs-stepper-content {
  width: 100%;
}
.bs-stepper.vertical .bs-stepper-content .content:not(.active) {
  display: none;
}
.bs-stepper.vertical.wizard-icons .step {
  text-align: center;
  padding: 0.75rem 0;
}
.bs-stepper.wizard-icons .bs-stepper-header {
  justify-content: space-around;
}
.bs-stepper.wizard-icons .bs-stepper-header .step-trigger {
  flex-direction: column;
  gap: 0.5rem;
}
.bs-stepper.wizard-icons .bs-stepper-header .step-trigger .bs-stepper-icon svg {
  height: 3.125rem;
  width: 3.125rem;
}
.bs-stepper.wizard-icons .bs-stepper-header .step-trigger .bs-stepper-icon i {
  font-size: 1.6rem;
}
.bs-stepper.wizard-icons .bs-stepper-header .step-trigger .bs-stepper-label {
  font-weight: 400;
}
.bs-stepper.wizard-modern .bs-stepper-header {
  border-bottom: none !important;
}
.bs-stepper.wizard-modern .bs-stepper-content {
  border-radius: 0.375rem;
}
.bs-stepper.wizard-modern.vertical .bs-stepper-header {
  border-right: none !important;
}

#wizard-create-app.vertical .bs-stepper-header {
  min-width: 15rem;
}

.light-style .bs-stepper {
  background-color: #fff;
}
.light-style .bs-stepper:not(.wizard-modern) {
  box-shadow: 0 0.25rem 1.125rem rgba(75, 70, 92, 0.1);
}
.light-style .bs-stepper .bs-stepper-header {
  border-bottom: 1px solid #dbdade;
}
.light-style .bs-stepper .bs-stepper-header .line i {
  color: #a5a3ae;
}
.light-style .bs-stepper .bs-stepper-header .bs-stepper-title,
.light-style .bs-stepper .bs-stepper-header .bs-stepper-label {
  color: #5d596c;
}
.light-style .bs-stepper .bs-stepper-header .bs-stepper-label .bs-stepper-subtitle {
  color: #a5a3ae !important;
}
.light-style .bs-stepper .bs-stepper-header .step:not(.active) .bs-stepper-circle {
  background-color: #f1f0f2;
  color: #6f6b7d;
}
.light-style .bs-stepper .bs-stepper-header .step.active .bs-stepper-circle {
  box-shadow: 0 0.125rem 0.25rem rgba(165, 163, 174, 0.3);
}
.light-style .bs-stepper .bs-stepper-header .step.crossed .bs-stepper-label,
.light-style .bs-stepper .bs-stepper-header .step.crossed .bs-stepper-title {
  color: #a5a3ae;
}
.light-style .bs-stepper .step-trigger:focus {
  color: #5d596c;
}
.light-style .bs-stepper.vertical .bs-stepper-header {
  border-bottom: none;
}
@media (max-width: 991.98px) {
  .light-style .bs-stepper.vertical .bs-stepper-header {
    border-right: none !important;
    border-left: none !important;
    border-bottom: 1px solid #dbdade;
  }
}
.light-style .bs-stepper.wizard-modern {
  background-color: transparent;
}
.light-style .bs-stepper.wizard-modern .bs-stepper-content {
  background-color: #fff;
  box-shadow: 0 0.25rem 1.125rem rgba(75, 70, 92, 0.1);
}
.light-style .bs-stepper.wizard-icons .bs-stepper-header .bs-stepper-icon svg {
  fill: #6f6b7d;
}
.light-style .bs-stepper.wizard-icons .bs-stepper-header .bs-stepper-icon i {
  fill: #6f6b7d;
}
.light-style .bs-stepper.wizard-icons .bs-stepper-header .bs-stepper-label {
  color: #6f6b7d;
}

[dir=rtl].light-style .bs-stepper.vertical .bs-stepper-header {
  border-left: 1px solid #dbdade;
}

html:not([dir=rtl]).light-style .bs-stepper.vertical .bs-stepper-header {
  border-right: 1px solid #dbdade;
}

.dark-style .bs-stepper {
  background-color: #2f3349;
}
.dark-style .bs-stepper .bs-stepper-header {
  border-bottom: 1px solid #434968;
}
.dark-style .bs-stepper .bs-stepper-header .line i {
  color: #7983bb;
}
.dark-style .bs-stepper .bs-stepper-header .bs-stepper-label,
.dark-style .bs-stepper .bs-stepper-header .bs-stepper-title {
  color: #cfd3ec;
}
.dark-style .bs-stepper .bs-stepper-header .bs-stepper-label .bs-stepper-subtitle {
  color: #7983bb !important;
}
.dark-style .bs-stepper .bs-stepper-header .step:not(.active) .bs-stepper-circle {
  background-color: #363b54;
  color: #b6bee3;
}
.dark-style .bs-stepper .bs-stepper-header .step.active .bs-stepper-circle {
  box-shadow: 0 0.125rem 0.25rem rgba(15, 20, 34, 0.4);
}
.dark-style .bs-stepper .bs-stepper-header .step.crossed .bs-stepper-label,
.dark-style .bs-stepper .bs-stepper-header .step.crossed .bs-stepper-title {
  color: #7983bb;
}
.dark-style .bs-stepper .step-trigger:focus {
  color: #cfd3ec;
}
.dark-style .bs-stepper.vertical .bs-stepper-header {
  border-bottom: none;
}
@media (max-width: 991.98px) {
  .dark-style .bs-stepper.vertical .bs-stepper-header {
    border-right: none !important;
    border-left: none !important;
    border-bottom: 1px solid #434968;
  }
}
.dark-style .bs-stepper.wizard-modern {
  background-color: transparent;
}
.dark-style .bs-stepper.wizard-modern .bs-stepper-content {
  background-color: #2f3349;
  box-shadow: 0 0.25rem 1.25rem rgba(15, 20, 34, 0.4);
}
.dark-style .bs-stepper.wizard-icons .bs-stepper-header .bs-stepper-icon i {
  color: #b6bee3;
}
.dark-style .bs-stepper.wizard-icons .bs-stepper-header .bs-stepper-icon svg {
  fill: #b6bee3;
}
.dark-style .bs-stepper.wizard-icons .bs-stepper-header .bs-stepper-label {
  color: #b6bee3;
}

[dir=rtl].dark-style .bs-stepper.vertical .bs-stepper-header {
  border-left: 1px solid #434968;
}

html:not([dir=rtl]).dark-style .bs-stepper.vertical .bs-stepper-header {
  border-right: 1px solid #434968;
}

[dir=rtl] .bs-stepper .bs-stepper-content .btn-next:not(.btn-submit) i,
[dir=rtl] .bs-stepper .bs-stepper-content .btn-prev i {
  transform: rotate(180deg);
}
[dir=rtl] .bs-stepper.vertical.wizard-icons .bs-stepper-header .line:before {
  right: 50%;
}
[dir=rtl] .bs-stepper.wizard-modern.vertical .bs-stepper-header {
  border-left: none !important;
}
@media (min-width: 992px) {
  [dir=rtl] .bs-stepper .bs-stepper-header .line i {
    transform: rotate(180deg);
  }
}
@media (max-width: 991.98px) {
  [dir=rtl] .bs-stepper .bs-stepper-header .step .step-trigger .bs-stepper-label {
    margin-left: 0;
    margin-right: 1rem;
  }
  [dir=rtl] .bs-stepper.wizard-icons .bs-stepper-header .line:before {
    margin-right: 0.75rem;
  }
}

@media (max-width: 991.98px) {
  .bs-stepper .bs-stepper-header {
    flex-direction: column;
    align-items: flex-start;
  }
  .bs-stepper .bs-stepper-header .step .step-trigger {
    padding: 0.5rem 0;
    flex-direction: row;
  }
  .bs-stepper .bs-stepper-header .step .step-trigger .bs-stepper-label {
    margin-left: 0.35rem;
  }
  .bs-stepper .bs-stepper-header .step:first-child .step-trigger {
    padding-top: 0;
  }
  .bs-stepper .bs-stepper-header .step:last-child .step-trigger {
    padding-bottom: 0;
  }
  .bs-stepper.vertical {
    flex-direction: column;
  }
  .bs-stepper.vertical .bs-stepper-header {
    align-items: flex-start;
  }
  .bs-stepper.vertical.wizard-icons .bs-stepper-header .line:before {
    left: 0.75rem;
    margin-left: 0;
  }
  .bs-stepper:not(.vertical) .bs-stepper-header .line i {
    display: none;
  }
  .bs-stepper.wizard-icons .bs-stepper-header .bs-stepper-icon svg {
    margin-top: 0.5rem;
  }
}
@media (max-width: 520px) {
  .bs-stepper-header {
    margin: 0;
  }
}
#wizard-create-app.vertical .bs-stepper-header {
  min-width: 15rem;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icy1zdGVwcGVyL2Rpc3QvY3NzL2JzLXN0ZXBwZXIuY3NzIiwidmVuZG9yL2xpYnMvYnMtc3RlcHBlci9icy1zdGVwcGVyLmNzcyIsInZlbmRvci9saWJzL2JzLXN0ZXBwZXIvYnMtc3RlcHBlci5zY3NzIiwidmVuZG9yL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvX3N1cHBvcnQuc2NzcyIsInZlbmRvci9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvX3ZhcmlhYmxlcy5zY3NzIiwidmVuZG9yL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9fdmFyaWFibGVzLWRhcmsuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvc2Nzcy9taXhpbnMvX2JyZWFrcG9pbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7RUFBQTtBQ01BO0VER0Usb0JBQUE7RUFFQSxlQUFBO0VBRUEsbUJBQUE7RUFFQSx1QkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsbUJBQUE7RUFDQSxzQkFBQTtFQUNHLHlCQUFBO0VBQ0Msc0JBQUE7RUFFSixpQkFBQTtFQUNBLDZCQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VDQUEsaUVBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7QUFBRjs7QURHQTs7RUFHRSxvQkFBQTtFQ0FBLGFBQUE7QUFBRjs7QUFHQTtFREVFLGNBQUE7RUNBQSxhQUFBO0FBQUY7O0FBR0E7RURFRSxxQkFBQTtFQ0FBLHFDQUFBO0FBQUY7O0FBR0E7RUFDRTtJREdFLHNCQUFBO0lDQUEsYUFBQTtFQUFGO0FBQ0Y7QUFHQTtFQUNFLHFCQUFBO0VBQ0EsZUFBQTtBQURGOztBQUlBO0VESU0sYUFBQTtFQ0FBLG1CQUFBO0FBRE47O0FBSUE7RUFDRTtJQUNFLGVBQUE7SUFDQSxrQkFBQTtFQURGO0FBQ0Y7QUFJQTs7RURNRSxjQUFBO0VBQ0EsY0FBQTtFQ0ZBLGVBQUE7RUFDQSxZQUFBO0VESUYscUNBQUE7QUNMQTs7QUFLQTtFQUNFOztJRE9GLGdCQUFBO0VDTkU7QUFDRjtBQUtBO0VETU0sb0JBQUE7RUFFSixxQkFBQTtFQUVBLHVCQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUNIQSxnQkFBQTtFQUNBLFdBQUE7RURLRix5QkFBQTtFQUNFLGtCQUFBO0FDUEY7O0FEVUE7RUFDRSx5QkFBQTtBQ1BGOztBRFVBO0VBQ0Usb0JBQUE7QUNQRjs7QUFNQTtFRE1BO0lBQ0UsVUFBQTtFQ1JBO0FBQ0Y7QURXQTtFQUVNLGFBQUE7QUNUTjs7QUFPQTtFQUVNLHNCQUFBO0VETU4sb0JBQUE7RUFFRSxTQUFBO0FDVEY7O0FEWUE7O0VBRUUsY0FBQTtBQ1RGOztBQU9BOztFRE1BLGNBQUE7RUFFRSxrQkFBQTtBQ1RGOztBRFlBOztFQUVFLGFBQUE7QUNURjs7QUFPQTs7RURPQSxrQkFBQTtFQUFBLHlCQUFBO0VBRUUsNEJBQUE7QUNURjs7QUFPQTs7RURNQSxtQkFBQTtFQUVFLFVBQUE7QUNURjs7QUFPQTs7RURNQSxjQUFBO0VBRUUsbUJBQUE7QUNURjs7QURZQTs7RUFFRSxjQUFBO0FDVEY7O0FEWUE7O0VBRUUsYUFBQTtBQ1RGOztBRFlBOztFRTdLRSxrQkFBQTtBRHNLRjs7QUFPQSx5Q0FBQTtBQTlLQTtFREVFLHVCQzJJYztBQStCaEI7QUR6S0U7RUFDQSxPQUFBO0VBQ0EsZUFBQTtFQUNHLGdCQUFBO0VBQ0MsNkJBQUE7RUFDSSxTQUFBO0FDMktWO0FEeEtFO0VBQ0Esc0JBQUE7QUMwS0Y7QUR2S0E7RUFDRSxlQUFBO0VDQU0saUJBQUE7RUFDQSxTQUFBO0FBMEtSO0FEeEtBO0VBQUEsU0FBQTtFQUVFLGdCQTVCSTtFQTZCSixnQkFBQTtFQ0FRLHVCQUFBO0VBQ0EsaUJBQUE7RURFVixvQkFBQTtFQUNFLGdCQzJLcUI7RUQxS3JCLG9CRU5RO0FEZ0xWO0FBMUtVO0VBQ0UsY0FBQTtBQTRLWjtBRHpLRTtFQUNBLG9CQ2tOZ0I7RUFsTk4sZ0JDTEY7RURNRSxtQkFBQTtBQTRLWjtBRHhLSTtFQUNJLDZCQUFBO0FDMEtSO0FEM05FO0VDdURVLGVBQUE7QUF1S1o7QURwTUE7RUFrQ0UsZ0JBQUE7QUNxS0Y7QURqT0U7RUFtRUEsZ0JBQUE7QUNpS0Y7QUQxTUE7RUMwQ1ksZUFBQTtBQW1LWjtBRDVKRTtFQUNJLGFBQUE7RUFDSixtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsdUJDeUVjO0VEeEVkLGFBQUE7RUNGTSxjQUFBO0VBQ0EsbUJFdERGO0VIMEROLGdCQzZIdUI7QUFpQ3ZCO0FBNUpFO0VBQ0Usc0JBQUE7QUE4Sko7QUR0SkU7RUFDSSxnQkF0Rko7QUM4T0Y7QUR0Sk07RUFDSixpQkFBQTtBQ3dKRjtBRHJKRTtFQUNBLGNBQUE7QUN1SkY7QUF2SlU7RUFDRSxpQkFBQTtBQXlKWjtBQXJKTTtFREtOLGtCQUFBO0VBQ0UsZUFBQTtBQ21KRjtBRGhKQTtFQUNFLFdBQUE7QUNrSkY7QUFwSlE7RUFDRSxhQUFBO0FBc0pWO0FEM0lBO0VBQ0Usa0JBQUE7RUFDSSxrQkFBQTtBQzZJTjtBRHZJQTtFQUFBLDZCQUFBO0FDMElBO0FEeElFO0VDSk0sc0JBQUE7RUFDQSxXQUFBO0FBK0lSO0FEeklBO0VBRUUsZ0JBeklBO0VBMElBLGVBeklJO0FDbVJOO0FBN0lVO0VETVYsaUJBM0lFO0FDcVJGO0FBNUlRO0VBQ0UsZ0JDM0dBO0FEeVBWO0FEaklBO0VBQUEsOEJBQUE7QUNvSUE7QUFySUk7RUFDRSx1QkFOVTtBQTZJaEI7QUQ5SEU7RUNKTSw2QkFBQTtBQXFJUjs7QUR2SEU7RUNKSSxnQkFBQTtBQStITjs7QUNqU0E7RUFDRSxzQkZSSTtBQzRTTjtBQXpITTtFQzFLSixvRERxbkJnQjtBQS9VbEI7QUNwU0k7RUFDQSxnQ0FBQTtBRHNTSjtBQXhIVTtFQ3pLUixjQXVGTTtBRDZNUjtBQy9SUTs7RUFFQSxjRDJNUztBQXNGakI7QUM5UlU7RUFDQSx5QkFBQTtBRGdTVjtBQWhIWTtFQzFLRix5QkFBQTtFQUNFLGNEdUVDO0FBc05iO0FDelJZO0VBQ0EsdURGMEhWO0FDaUtGO0FBNUdZOztFQ3BLQSxjQXFESjtBRCtOUjtBRTVVTTtFRGtFTSxjRHNLSztBQXVHakI7QUF2R1E7RUMvSkYsbUJBQUE7QUR5UU47QUE3UUk7RUFtS0k7SUM3SkEsNkJBQUE7SUFDQSw0QkFBQTtJQUNBLGdDQUFBO0VEMlFOO0FBQ0Y7QUF2R007RUM1SkosNkJBQUE7QURzUUY7QUNyUUk7RUQ4Sk0sc0JEaFBKO0VFc0ZGLG9ERHdpQmM7QUFuU2xCO0FDN1BZO0VEMkpFLGFBL0lEO0FBb1BiO0FDM1BZO0VEeUpFLGFBbEpEO0FBdVBiO0FDeFBRO0VEdUpJLGNBdEpDO0FBMFBiOztBQ3JPTTtFRDhJTSw4QkFBQTtBQTJGWjs7QUMvTlk7RUQrSUEsK0JBQUE7QUFvRlo7O0FDN01RO0VEcUlGLHlCQXJMSTtBQWlRVjtBQTNFTTtFQzdIRixnQ0FBQTtBRDJNSjtBQTNFVTtFQUNFLGNBdE1DO0FBbVJiO0FDbk1NOztFRDRISSxjQXJNTztBQWdSakI7QUNoTVU7RUVvRUcseUJBQUE7QUgrSGI7QUN4TFU7RUFDRSx5QkFBQTtFRHNIRSxjRGxQWjtBQ3VURjtBQWpFWTtFQzlHQSxvREZySE47QUN1U047QUM3S1k7O0VEZ0hFLGNBcE9EO0FBcVNiO0FDcEtVO0VEeUdGLGNBbk9TO0FBaVNqQjtBQ3BLWTtFQUNBLG1CQUFBO0FEc0taO0FBOVVJO0VDdUtRO0lENkdBLDZCQUFBO0lDdkdOLDRCQUFBO0lBQ0UsZ0NBQUE7RURzS047QUFDRjtBQTFETTtFQ25HTSw2QkFBQTtBRGdLWjtBRzlTYTtFSG9QSCx5QkEvT0E7RUM0SUUsbUREM0lNO0FBNFNsQjtBQ2hKVTtFQUNFLGNGbk1WO0FDcVZGO0FDeElVO0VBQ0UsYUY5TVY7QUN3VkY7QUMvSEk7RUFDRSxjRjFOSjtBQzJWRjs7QUNsSFU7RUFDRSw4QkFBQTtBRHFIWjs7QUNwR1k7RUdsT0MsK0JBQUE7QUowVWI7O0FBeEJROztFQzFERix5QkFBQTtBRHVGTjtBSTNXYTtFSndWRCxVQUFBO0FBc0JaO0FDekRZO0VENkNGLDRCQUFBO0FBZVY7QUFyWUk7RUNtV007SUQ0QkUseUJBQUE7RUFVVjtBQUNGO0FBN1hJO0VBNFhRO0lBQ0UsY0FBQTtJSzdYVixrQkFBQTtFTGtZRjtFQUlVO0lBQ0UscUJBQUE7RUFGWjtBQUNGOztBQXRZSTtFQW1aQTtJQ1lNLHNCQUFBO0lBQ0UsdUJBQUE7RURwQlY7RUN3QlE7SUFDRSxpQkFBQTtJRFpGLG1CQUFBO0VBVFI7RUMwQkU7SUFDRSxvQkFBQTtFRHhCSjtFQVlRO0lDbUJBLGNBQUE7RUQ1QlI7RUNzQ1E7SUFDRSxpQkFBQTtFRHBDVjtFQWlCRTtJQ29DSixzQkFBQTtFRGxERTtFQ21EQTtJQUNFLHVCQUFBO0VEakRGO0VBbUJRO0lBQ0UsYUFBQTtJQUNBLGNBQUE7RUFqQlY7RUF5QlE7SUFDRSxhQUFBO0VBdkJWO0VBK0JRO0lBQ0Usa0JBQUE7RUE3QlY7QUFDRjtBQW9DQTtFQUNFO0lBQ0UsU0FBQTtFQWxDRjtBQUNGO0FBd0NJO0VBQ0UsZ0JBQUE7QUF0Q047QUFDQSw2K21HQUE2K21HIiwiZmlsZSI6InZlbmRvci9saWJzL2JzLXN0ZXBwZXIvYnMtc3RlcHBlci5kaXN0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBic1N0ZXBwZXIgdjEuNy4wIChodHRwczovL2dpdGh1Yi5jb20vSm9oYW5uLVMvYnMtc3RlcHBlcilcclxuICogQ29weXJpZ2h0IDIwMTggLSAyMDE5IEpvaGFubi1TIDxqb2hhbm4uc2Vydm9pcmVAZ21haWwuY29tPlxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS9Kb2hhbm4tUy9icy1zdGVwcGVyL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXHJcbiAqL1xyXG5cclxuLmJzLXN0ZXBwZXIgLnN0ZXAtdHJpZ2dlciB7XHJcbiAgZGlzcGxheTogLW1zLWlubGluZS1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIC1tcy1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBsaW5lLWhlaWdodDogMS41O1xyXG4gIGNvbG9yOiAjNmM3NTdkO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IC4yNXJlbTtcclxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1vdXQsIGNvbG9yIC4xNXMgZWFzZS1vdXQ7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyIC5zdGVwLXRyaWdnZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXIgLnN0ZXAtdHJpZ2dlcjpkaXNhYmxlZCxcclxuLmJzLXN0ZXBwZXIgLnN0ZXAtdHJpZ2dlci5kaXNhYmxlZCB7XHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgb3BhY2l0eTogLjY1O1xyXG59XHJcblxyXG4uYnMtc3RlcHBlciAuc3RlcC10cmlnZ2VyOmZvY3VzIHtcclxuICBjb2xvcjogIzAwN2JmZjtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlciAuc3RlcC10cmlnZ2VyOmhvdmVyIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMDYpO1xyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNTIwcHgpIHtcclxuICAuYnMtc3RlcHBlciAuc3RlcC10cmlnZ2VyIHtcclxuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJzLXN0ZXBwZXItbGFiZWwge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBtYXJnaW46IC4yNXJlbTtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA1MjBweCkge1xyXG4gIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICBtYXJnaW46IDAgLTEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG59XHJcblxyXG4uYnMtc3RlcHBlci1saW5lLFxyXG4uYnMtc3RlcHBlciAubGluZSB7XHJcbiAgLW1zLWZsZXg6IDEgMCAzMnB4O1xyXG4gICAgICBmbGV4OiAxIDAgMzJweDtcclxuICBtaW4td2lkdGg6IDFweDtcclxuICBtaW4taGVpZ2h0OiAxcHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjEyKTtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XHJcbiAgLmJzLXN0ZXBwZXItbGluZSxcclxuICAuYnMtc3RlcHBlciAubGluZSB7XHJcbiAgICAtbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTogMjBweDtcclxuICAgICAgICBmbGV4LWJhc2lzOiAyMHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJzLXN0ZXBwZXItY2lyY2xlIHtcclxuICBkaXNwbGF5OiAtbXMtaW5saW5lLWZsZXhib3g7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgLW1zLWZsZXgtbGluZS1wYWNrOiBjZW50ZXI7XHJcbiAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHdpZHRoOiAyZW07XHJcbiAgaGVpZ2h0OiAyZW07XHJcbiAgcGFkZGluZzogLjVlbSAwO1xyXG4gIG1hcmdpbjogLjI1cmVtO1xyXG4gIGxpbmUtaGVpZ2h0OiAxZW07XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDtcclxuICBib3JkZXItcmFkaXVzOiAxZW07XHJcbn1cclxuXHJcbi5hY3RpdmUgLmJzLXN0ZXBwZXItY2lyY2xlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlci1jb250ZW50IHtcclxuICBwYWRkaW5nOiAwIDIwcHggMjBweDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDUyMHB4KSB7XHJcbiAgLmJzLXN0ZXBwZXItY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gIH1cclxufVxyXG5cclxuLmJzLXN0ZXBwZXIudmVydGljYWwge1xyXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyLnZlcnRpY2FsIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgLW1zLWZsZXgtYWxpZ246IHN0cmV0Y2g7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXIudmVydGljYWwgLmJzLXN0ZXBwZXItcGFuZSxcclxuLmJzLXN0ZXBwZXIudmVydGljYWwgLmNvbnRlbnQge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlci52ZXJ0aWNhbCAuYnMtc3RlcHBlci1wYW5lOm5vdCguZmFkZSksXHJcbi5icy1zdGVwcGVyLnZlcnRpY2FsIC5jb250ZW50Om5vdCguZmFkZSkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXItcGFuZTpub3QoLmZhZGUpLFxyXG4uYnMtc3RlcHBlciAuY29udGVudDpub3QoLmZhZGUpIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlciAuY29udGVudC5mYWRlLFxyXG4uYnMtc3RlcHBlci1wYW5lLmZhZGUge1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAuM3M7XHJcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eTtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXItcGFuZS5mYWRlLmFjdGl2ZSxcclxuLmJzLXN0ZXBwZXIgLmNvbnRlbnQuZmFkZS5hY3RpdmUge1xyXG4gIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXItcGFuZS5hY3RpdmU6bm90KC5mYWRlKSxcclxuLmJzLXN0ZXBwZXIgLmNvbnRlbnQuYWN0aXZlOm5vdCguZmFkZSkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyLXBhbmUuZHN0ZXBwZXItYmxvY2ssXHJcbi5icy1zdGVwcGVyIC5jb250ZW50LmRzdGVwcGVyLWJsb2NrIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmJzLXN0ZXBwZXI6bm90KC52ZXJ0aWNhbCkgLmJzLXN0ZXBwZXItcGFuZS5kc3RlcHBlci1ub25lLFxyXG4uYnMtc3RlcHBlcjpub3QoLnZlcnRpY2FsKSAuY29udGVudC5kc3RlcHBlci1ub25lIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4udmVydGljYWwgLmJzLXN0ZXBwZXItcGFuZS5mYWRlLmRzdGVwcGVyLW5vbmUsXHJcbi52ZXJ0aWNhbCAuY29udGVudC5mYWRlLmRzdGVwcGVyLW5vbmUge1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG5cclxuLyojIHNvdXJjZU1hcHBpbmdVUkw9YnMtc3RlcHBlci5jc3MubWFwICovIiwiLyohXHJcbiAqIGJzU3RlcHBlciB2MS43LjAgKGh0dHBzOi8vZ2l0aHViLmNvbS9Kb2hhbm4tUy9icy1zdGVwcGVyKVxyXG4gKiBDb3B5cmlnaHQgMjAxOCAtIDIwMTkgSm9oYW5uLVMgPGpvaGFubi5zZXJ2b2lyZUBnbWFpbC5jb20+XHJcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL0pvaGFubi1TL2JzLXN0ZXBwZXIvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuICovXHJcblxyXG4uYnMtc3RlcHBlciAuc3RlcC10cmlnZ2VyIHtcclxuICBkaXNwbGF5OiAtbXMtaW5saW5lLWZsZXhib3g7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgY29sb3I6ICM2Yzc1N2Q7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLW91dCwgY29sb3IgLjE1cyBlYXNlLW91dDtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXIgLnN0ZXAtdHJpZ2dlcjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlciAuc3RlcC10cmlnZ2VyOmRpc2FibGVkLFxyXG4uYnMtc3RlcHBlciAuc3RlcC10cmlnZ2VyLmRpc2FibGVkIHtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICBvcGFjaXR5OiAuNjU7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyIC5zdGVwLXRyaWdnZXI6Zm9jdXMge1xyXG4gIGNvbG9yOiAjMDA3YmZmO1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyIC5zdGVwLXRyaWdnZXI6aG92ZXIge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4wNik7XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA1MjBweCkge1xyXG4gIC5icy1zdGVwcGVyIC5zdGVwLXRyaWdnZXIge1xyXG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4uYnMtc3RlcHBlci1sYWJlbCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIG1hcmdpbjogLjI1cmVtO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDUyMHB4KSB7XHJcbiAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgIG1hcmdpbjogMCAtMTBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyLWxpbmUsXHJcbi5icy1zdGVwcGVyIC5saW5lIHtcclxuICAtbXMtZmxleDogMSAwIDMycHg7XHJcbiAgICAgIGZsZXg6IDEgMCAzMnB4O1xyXG4gIG1pbi13aWR0aDogMXB4O1xyXG4gIG1pbi1oZWlnaHQ6IDFweDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMTIpO1xyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcclxuICAuYnMtc3RlcHBlci1saW5lLFxyXG4gIC5icy1zdGVwcGVyIC5saW5lIHtcclxuICAgIC1tcy1mbGV4LXByZWZlcnJlZC1zaXplOiAyMHB4O1xyXG4gICAgICAgIGZsZXgtYmFzaXM6IDIwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4uYnMtc3RlcHBlci1jaXJjbGUge1xyXG4gIGRpc3BsYXk6IC1tcy1pbmxpbmUtZmxleGJveDtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAtbXMtZmxleC1saW5lLXBhY2s6IGNlbnRlcjtcclxuICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDJlbTtcclxuICBoZWlnaHQ6IDJlbTtcclxuICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgbWFyZ2luOiAuMjVyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDFlbTtcclxuICBjb2xvcjogI2ZmZjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM3NTdkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDFlbTtcclxufVxyXG5cclxuLmFjdGl2ZSAuYnMtc3RlcHBlci1jaXJjbGUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyLWNvbnRlbnQge1xyXG4gIHBhZGRpbmc6IDAgMjBweCAyMHB4O1xyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNTIwcHgpIHtcclxuICAuYnMtc3RlcHBlci1jb250ZW50IHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4uYnMtc3RlcHBlci52ZXJ0aWNhbCB7XHJcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXIudmVydGljYWwgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAtbXMtZmxleC1hbGlnbjogc3RyZXRjaDtcclxuICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlci52ZXJ0aWNhbCAuYnMtc3RlcHBlci1wYW5lLFxyXG4uYnMtc3RlcHBlci52ZXJ0aWNhbCAuY29udGVudCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyLnZlcnRpY2FsIC5icy1zdGVwcGVyLXBhbmU6bm90KC5mYWRlKSxcclxuLmJzLXN0ZXBwZXIudmVydGljYWwgLmNvbnRlbnQ6bm90KC5mYWRlKSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlci1wYW5lOm5vdCguZmFkZSksXHJcbi5icy1zdGVwcGVyIC5jb250ZW50Om5vdCguZmFkZSkge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5icy1zdGVwcGVyIC5jb250ZW50LmZhZGUsXHJcbi5icy1zdGVwcGVyLXBhbmUuZmFkZSB7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIHRyYW5zaXRpb24tZHVyYXRpb246IC4zcztcclxuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBvcGFjaXR5O1xyXG59XHJcblxyXG4uYnMtc3RlcHBlci1wYW5lLmZhZGUuYWN0aXZlLFxyXG4uYnMtc3RlcHBlciAuY29udGVudC5mYWRlLmFjdGl2ZSB7XHJcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlci1wYW5lLmFjdGl2ZTpub3QoLmZhZGUpLFxyXG4uYnMtc3RlcHBlciAuY29udGVudC5hY3RpdmU6bm90KC5mYWRlKSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxufVxyXG5cclxuLmJzLXN0ZXBwZXItcGFuZS5kc3RlcHBlci1ibG9jayxcclxuLmJzLXN0ZXBwZXIgLmNvbnRlbnQuZHN0ZXBwZXItYmxvY2sge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uYnMtc3RlcHBlcjpub3QoLnZlcnRpY2FsKSAuYnMtc3RlcHBlci1wYW5lLmRzdGVwcGVyLW5vbmUsXHJcbi5icy1zdGVwcGVyOm5vdCgudmVydGljYWwpIC5jb250ZW50LmRzdGVwcGVyLW5vbmUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi52ZXJ0aWNhbCAuYnMtc3RlcHBlci1wYW5lLmZhZGUuZHN0ZXBwZXItbm9uZSxcclxuLnZlcnRpY2FsIC5jb250ZW50LmZhZGUuZHN0ZXBwZXItbm9uZSB7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4vKiMgc291cmNlTWFwcGluZ1VSTD1icy1zdGVwcGVyLmNzcy5tYXAgKi8iLCJAdXNlICcuLi8uLi9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvaW5jbHVkZScgYXMgbGlnaHQ7XHJcbkB1c2UgJy4uLy4uL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9pbmNsdWRlLWRhcmsnIGFzIGRhcms7XHJcbkBpbXBvcnQgJy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9icy1zdGVwcGVyL2Rpc3QvY3NzL2JzLXN0ZXBwZXInO1xyXG5AaW1wb3J0ICcuLi8uLi9zY3NzL19jdXN0b20tdmFyaWFibGVzL2xpYnMnO1xyXG5cclxuJGJzLXN0ZXBwZXItaGVhZGVyLXBhZGRpbmcteTogMS41cmVtICFkZWZhdWx0O1xyXG4kYnMtc3RlcHBlci1oZWFkZXItcGFkZGluZy14OiAkYnMtc3RlcHBlci1oZWFkZXItcGFkZGluZy15ICFkZWZhdWx0O1xyXG4kYnMtc3RlcHBlci1jb250ZW50LXBhZGRpbmcteDogMS41cmVtICFkZWZhdWx0O1xyXG4kYnMtc3RlcHBlci1jb250ZW50LXBhZGRpbmcteTogJGJzLXN0ZXBwZXItY29udGVudC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbiRicy1zdGVwcGVyLXRyaWdnZXItcGFkZGluZzogMXJlbSAhZGVmYXVsdDtcclxuJGJzLXN0ZXBwZXItdHJpZ2dlci1wYWRkaW5nLXZlcnRpY2FsOiAwLjVyZW0gIWRlZmF1bHQ7XHJcbiRicy1zdGVwcGVyLWxhYmVsLW1heC13aWR0aDogMjI0cHggIWRlZmF1bHQ7XHJcbiRicy1zdGVwcGVyLXN2Zy1pY29uLWhlaWdodDogMy4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRicy1zdGVwcGVyLXN2Zy1pY29uLXdpZHRoOiAzLjEyNXJlbSAhZGVmYXVsdDtcclxuJGJzLXN0ZXBwZXItaWNvbi1mb250LXNpemU6IDEuNnJlbSAhZGVmYXVsdDtcclxuJGJzLXN0ZXBwZXItdmVydGljYWwtc2VwYXJhdG9yLWhlaWdodDogMS41NXJlbSAhZGVmYXVsdDtcclxuJGJzLXN0ZXBwZXItdmVydGljYWwtaGVhZGVyLW1pbi13aWR0aDogMThyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyBEZWZhdWx0IFN0eWxlc1xyXG4uYnMtc3RlcHBlciB7XHJcbiAgYm9yZGVyLXJhZGl1czogbGlnaHQuJGJvcmRlci1yYWRpdXM7XHJcbiAgLmxpbmUge1xyXG4gICAgZmxleDogMDtcclxuICAgIG1pbi13aWR0aDogYXV0bztcclxuICAgIG1pbi1oZWlnaHQ6IGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcblxyXG4gIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICBwYWRkaW5nOiAkYnMtc3RlcHBlci1oZWFkZXItcGFkZGluZy15ICRicy1zdGVwcGVyLWhlYWRlci1wYWRkaW5nLXg7XHJcblxyXG4gICAgLnN0ZXAge1xyXG4gICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICBwYWRkaW5nOiAwICRicy1zdGVwcGVyLXRyaWdnZXItcGFkZGluZztcclxuICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuICAgICAgICBnYXA6IDFyZW07XHJcbiAgICAgICAgLmJzLXN0ZXBwZXItbGFiZWwge1xyXG4gICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgbWF4LXdpZHRoOiAkYnMtc3RlcHBlci1sYWJlbC1tYXgtd2lkdGg7XHJcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBzdGFydDtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ncmlkO1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0LiRmb250LXdlaWdodC1zZW1pYm9sZDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS1iYXNlO1xyXG4gICAgICAgICAgLmJzLXN0ZXBwZXItdGl0bGUge1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5icy1zdGVwcGVyLXN1YnRpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBsaWdodC4kc21hbGwtZm9udC1zaXplO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogbGlnaHQuJGZvbnQtd2VpZ2h0LWJhc2U7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDAuMjVyZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICAgIEBpbmNsdWRlIGFwcC1sdHIge1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICAgIEBpbmNsdWRlIGFwcC1sdHIge1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgQGluY2x1ZGUgYXBwLXJ0bCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgLmJzLXN0ZXBwZXItY2lyY2xlIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogbGlnaHQuJGJvcmRlci1yYWRpdXM7XHJcbiAgICAgICAgd2lkdGg6IDIuNXJlbTtcclxuICAgICAgICBoZWlnaHQ6IDIuNXJlbTtcclxuICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoNS1mb250LXNpemU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0LiRmb250LXdlaWdodC1zZW1pYm9sZDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmJzLXN0ZXBwZXItY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiAkYnMtc3RlcHBlci1jb250ZW50LXBhZGRpbmcteSAkYnMtc3RlcHBlci1jb250ZW50LXBhZGRpbmcteDtcclxuICB9XHJcblxyXG4gICYudmVydGljYWwge1xyXG4gICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgbWluLXdpZHRoOiAkYnMtc3RlcHBlci12ZXJ0aWNhbC1oZWFkZXItbWluLXdpZHRoO1xyXG4gICAgICAuc3RlcCB7XHJcbiAgICAgICAgLnN0ZXAtdHJpZ2dlciB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAkYnMtc3RlcHBlci10cmlnZ2VyLXBhZGRpbmctdmVydGljYWwgMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5saW5lIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgbWluLWhlaWdodDogMXB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAuYnMtc3RlcHBlci1jb250ZW50IHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIC5jb250ZW50IHtcclxuICAgICAgICAmOm5vdCguYWN0aXZlKSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYud2l6YXJkLWljb25zIHtcclxuICAgICAgLnN0ZXAge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAwLjc1cmVtIDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICYud2l6YXJkLWljb25zIHtcclxuICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGdhcDogMC41cmVtO1xyXG4gICAgICAgIC5icy1zdGVwcGVyLWljb24ge1xyXG4gICAgICAgICAgc3ZnIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAkYnMtc3RlcHBlci1zdmctaWNvbi1oZWlnaHQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAkYnMtc3RlcHBlci1zdmctaWNvbi13aWR0aDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRicy1zdGVwcGVyLWljb24tZm9udC1zaXplO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAuYnMtc3RlcHBlci1sYWJlbCB7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogbGlnaHQuJGZvbnQtd2VpZ2h0LWJhc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBSZW1vdmUgYm9yZGVycyBmcm9tIHdpemFyZCBtb2Rlcm5cclxuICAmLndpemFyZC1tb2Rlcm4ge1xyXG4gICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIC5icy1zdGVwcGVyLWNvbnRlbnQge1xyXG4gICAgICBib3JkZXItcmFkaXVzOiBsaWdodC4kYm9yZGVyLXJhZGl1cztcclxuICAgIH1cclxuXHJcbiAgICAmLnZlcnRpY2FsIHtcclxuICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gU3R5bGVzIGZvciBNb2RhbCBleGFtcGxlIENyZWF0ZSBBcHAgd2l6YXJkXHJcbiN3aXphcmQtY3JlYXRlLWFwcCB7XHJcbiAgJi52ZXJ0aWNhbCB7XHJcbiAgICAuYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gICAgICBtaW4td2lkdGg6ICRicy1zdGVwcGVyLXZlcnRpY2FsLWhlYWRlci1taW4td2lkdGggLSAzO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gTGlnaHQgc3R5bGVcclxuQGlmICRlbmFibGUtbGlnaHQtc3R5bGUge1xyXG4gIC5saWdodC1zdHlsZSB7XHJcbiAgICAuYnMtc3RlcHBlciB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0LiRjYXJkLWJnO1xyXG4gICAgICAmOm5vdCgud2l6YXJkLW1vZGVybikge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRjYXJkLWJveC1zaGFkb3c7XHJcbiAgICAgIH1cclxuICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHQuJGJvcmRlci1jb2xvcjtcclxuXHJcbiAgICAgICAgLmxpbmUge1xyXG4gICAgICAgICAgaSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodC4kdGV4dC1tdXRlZDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5icy1zdGVwcGVyLXRpdGxlLFxyXG4gICAgICAgIC5icy1zdGVwcGVyLWxhYmVsIHtcclxuICAgICAgICAgIGNvbG9yOiBsaWdodC4kaGVhZGluZ3MtY29sb3I7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYnMtc3RlcHBlci1sYWJlbCB7XHJcbiAgICAgICAgICAuYnMtc3RlcHBlci1zdWJ0aXRsZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodC4kdGV4dC1tdXRlZCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnN0ZXAge1xyXG4gICAgICAgICAgJjpub3QoLmFjdGl2ZSkge1xyXG4gICAgICAgICAgICAuYnMtc3RlcHBlci1jaXJjbGUge1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0LnJnYmEtdG8taGV4KHJnYmEobGlnaHQuJGJsYWNrLCAwLjA4KSwgbGlnaHQuJGNhcmQtYmcpO1xyXG4gICAgICAgICAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJi5hY3RpdmUge1xyXG4gICAgICAgICAgICAuYnMtc3RlcHBlci1jaXJjbGUge1xyXG4gICAgICAgICAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRib3gtc2hhZG93LXNtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLmNyb3NzZWQge1xyXG4gICAgICAgICAgICAuYnMtc3RlcHBlci1sYWJlbCxcclxuICAgICAgICAgICAgLmJzLXN0ZXBwZXItdGl0bGUge1xyXG4gICAgICAgICAgICAgIGNvbG9yOiBsaWdodC4kdGV4dC1tdXRlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAuc3RlcC10cmlnZ2VyOmZvY3VzIHtcclxuICAgICAgICBjb2xvcjogbGlnaHQuJGhlYWRpbmdzLWNvbG9yO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLnZlcnRpY2FsIHtcclxuICAgICAgICAuYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgICAgICAgIEBpbmNsdWRlIGxpZ2h0Lm1lZGlhLWJyZWFrcG9pbnQtZG93bihsZykge1xyXG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0LiRib3JkZXItY29sb3I7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLndpemFyZC1tb2Rlcm4ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIC5icy1zdGVwcGVyLWNvbnRlbnQge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHQuJGNhcmQtYmc7XHJcbiAgICAgICAgICBib3gtc2hhZG93OiBsaWdodC4kY2FyZC1ib3gtc2hhZG93O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi53aXphcmQtaWNvbnMge1xyXG4gICAgICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgICAgICAuYnMtc3RlcHBlci1pY29uIHtcclxuICAgICAgICAgICAgc3ZnIHtcclxuICAgICAgICAgICAgICBmaWxsOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpIHtcclxuICAgICAgICAgICAgICBmaWxsOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLmJzLXN0ZXBwZXItbGFiZWwge1xyXG4gICAgICAgICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyAhIEZJWDogVmVydGljYWwgYm9yZGVyIGlzc3VlIGluIHJ0bCBhbmQgbHRyXHJcbiAgQGluY2x1ZGUgYXBwLXJ0bChmYWxzZSkge1xyXG4gICAgJi5saWdodC1zdHlsZSB7XHJcbiAgICAgIC5icy1zdGVwcGVyIHtcclxuICAgICAgICAmLnZlcnRpY2FsIHtcclxuICAgICAgICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgbGlnaHQuJGJvcmRlci1jb2xvcjtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgQGluY2x1ZGUgYXBwLWx0cihmYWxzZSkge1xyXG4gICAgJi5saWdodC1zdHlsZSB7XHJcbiAgICAgIC5icy1zdGVwcGVyIHtcclxuICAgICAgICAmLnZlcnRpY2FsIHtcclxuICAgICAgICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIGxpZ2h0LiRib3JkZXItY29sb3I7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBEYXJrIFN0eWxlXHJcbkBpZiAkZW5hYmxlLWRhcmstc3R5bGUge1xyXG4gIC5kYXJrLXN0eWxlIHtcclxuICAgIC5icy1zdGVwcGVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFyay4kY2FyZC1iZztcclxuICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZGFyay4kYm9yZGVyLWNvbG9yO1xyXG4gICAgICAgIC5saW5lIHtcclxuICAgICAgICAgIGkge1xyXG4gICAgICAgICAgICBjb2xvcjogZGFyay4kdGV4dC1tdXRlZDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5icy1zdGVwcGVyLWxhYmVsLFxyXG4gICAgICAgIC5icy1zdGVwcGVyLXRpdGxlIHtcclxuICAgICAgICAgIGNvbG9yOiBkYXJrLiRoZWFkaW5ncy1jb2xvcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5icy1zdGVwcGVyLWxhYmVsIHtcclxuICAgICAgICAgIC5icy1zdGVwcGVyLXN1YnRpdGxlIHtcclxuICAgICAgICAgICAgY29sb3I6IGRhcmsuJHRleHQtbXV0ZWQgIWltcG9ydGFudDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zdGVwIHtcclxuICAgICAgICAgICY6bm90KC5hY3RpdmUpIHtcclxuICAgICAgICAgICAgLmJzLXN0ZXBwZXItY2lyY2xlIHtcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrLnJnYmEtdG8taGV4KHJnYmEoZGFyay4kYmFzZSwgMC4wOCksIGRhcmsuJGNhcmQtYmcpO1xyXG4gICAgICAgICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLmFjdGl2ZSB7XHJcbiAgICAgICAgICAgIC5icy1zdGVwcGVyLWNpcmNsZSB7XHJcbiAgICAgICAgICAgICAgYm94LXNoYWRvdzogZGFyay4kYm94LXNoYWRvdy1zbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJi5jcm9zc2VkIHtcclxuICAgICAgICAgICAgLmJzLXN0ZXBwZXItbGFiZWwsXHJcbiAgICAgICAgICAgIC5icy1zdGVwcGVyLXRpdGxlIHtcclxuICAgICAgICAgICAgICBjb2xvcjogZGFyay4kdGV4dC1tdXRlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAuc3RlcC10cmlnZ2VyOmZvY3VzIHtcclxuICAgICAgICBjb2xvcjogZGFyay4kaGVhZGluZ3MtY29sb3I7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYudmVydGljYWwge1xyXG4gICAgICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgICAgICAgQGluY2x1ZGUgbGlnaHQubWVkaWEtYnJlYWtwb2ludC1kb3duKGxnKSB7XHJcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBib3JkZXItbGVmdDogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZGFyay4kYm9yZGVyLWNvbG9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi53aXphcmQtbW9kZXJuIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAuYnMtc3RlcHBlci1jb250ZW50IHtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmsuJGNhcmQtYmc7XHJcbiAgICAgICAgICBib3gtc2hhZG93OiBkYXJrLiRjYXJkLWJveC1zaGFkb3c7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLndpemFyZC1pY29ucyB7XHJcbiAgICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICAgIC5icy1zdGVwcGVyLWljb24ge1xyXG4gICAgICAgICAgICBpIHtcclxuICAgICAgICAgICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgc3ZnIHtcclxuICAgICAgICAgICAgICBmaWxsOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAuYnMtc3RlcHBlci1sYWJlbCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gISBGSVg6IFZlcnRpY2FsIGJvcmRlciBpc3N1ZSBpbiBydGwgYW5kIGx0clxyXG4gIEBpbmNsdWRlIGFwcC1ydGwoZmFsc2UpIHtcclxuICAgICYuZGFyay1zdHlsZSB7XHJcbiAgICAgIC5icy1zdGVwcGVyIHtcclxuICAgICAgICAmLnZlcnRpY2FsIHtcclxuICAgICAgICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgZGFyay4kYm9yZGVyLWNvbG9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBAaW5jbHVkZSBhcHAtbHRyKGZhbHNlKSB7XHJcbiAgICAmLmRhcmstc3R5bGUge1xyXG4gICAgICAuYnMtc3RlcHBlciB7XHJcbiAgICAgICAgJi52ZXJ0aWNhbCB7XHJcbiAgICAgICAgICAuYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBkYXJrLiRib3JkZXItY29sb3I7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBSVExcclxuQGluY2x1ZGUgYXBwLXJ0bChmYWxzZSkge1xyXG4gIC5icy1zdGVwcGVyIHtcclxuICAgIC5icy1zdGVwcGVyLWNvbnRlbnQge1xyXG4gICAgICAuYnRuLW5leHQ6bm90KC5idG4tc3VibWl0KSxcclxuICAgICAgLmJ0bi1wcmV2IHtcclxuICAgICAgICBpIHtcclxuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi52ZXJ0aWNhbCB7XHJcbiAgICAgICYud2l6YXJkLWljb25zIHtcclxuICAgICAgICAuYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gICAgICAgICAgLmxpbmU6YmVmb3JlIHtcclxuICAgICAgICAgICAgcmlnaHQ6IDUwJTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBSZW1vdmUgYm9yZGVycyBmcm9tIHdpemFyZCBtb2Rlcm5cclxuICAgICYud2l6YXJkLW1vZGVybiB7XHJcbiAgICAgICYudmVydGljYWwge1xyXG4gICAgICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgICAgICBib3JkZXItbGVmdDogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIGxpZ2h0Lm1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHtcclxuICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICAubGluZSB7XHJcbiAgICAgICAgICBpIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LWRvd24obGcpIHtcclxuICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICAuc3RlcCB7XHJcbiAgICAgICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICAgICAgLmJzLXN0ZXBwZXItbGFiZWwge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLndpemFyZC1pY29ucyB7XHJcbiAgICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICAgIC5saW5lIHtcclxuICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMC43NXJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gTWVkaWEgUXVlcmllc1xyXG5AaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LWRvd24obGcpIHtcclxuICAuYnMtc3RlcHBlciB7XHJcbiAgICAuYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgLnN0ZXAge1xyXG4gICAgICAgIC5zdGVwLXRyaWdnZXIge1xyXG4gICAgICAgICAgcGFkZGluZzogMC41cmVtIDA7XHJcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgLmJzLXN0ZXBwZXItbGFiZWwge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMC4zNXJlbTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAuc3RlcC10cmlnZ2VyIHtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLnZlcnRpY2FsIHtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi53aXphcmQtaWNvbnMge1xyXG4gICAgICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgICAgICAubGluZTpiZWZvcmUge1xyXG4gICAgICAgICAgICBsZWZ0OiAwLjc1cmVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICY6bm90KC52ZXJ0aWNhbCkge1xyXG4gICAgICAuYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gICAgICAgIC5saW5lIHtcclxuICAgICAgICAgIGkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi53aXphcmQtaWNvbnMge1xyXG4gICAgICAuYnMtc3RlcHBlci1oZWFkZXIge1xyXG4gICAgICAgIC5icy1zdGVwcGVyLWljb24ge1xyXG4gICAgICAgICAgc3ZnIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMC41cmVtO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDUyMHB4KSB7XHJcbiAgLmJzLXN0ZXBwZXItaGVhZGVyIHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbn1cclxuXHJcbi8vIFN0eWxlcyBmb3IgQ3JlYXRlIEFwcCBNb2RhbCBXaXphcmRcclxuI3dpemFyZC1jcmVhdGUtYXBwIHtcclxuICAmLnZlcnRpY2FsIHtcclxuICAgIC5icy1zdGVwcGVyLWhlYWRlciB7XHJcbiAgICAgIG1pbi13aWR0aDogJGJzLXN0ZXBwZXItdmVydGljYWwtaGVhZGVyLW1pbi13aWR0aCAtIDM7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIiRlbmFibGUtbGlnaHQtc3R5bGU6IHRydWU7XHJcbiRlbmFibGUtZGFyay1zdHlsZTogdHJ1ZTtcclxuJGVuYWJsZS1ydGwtc3VwcG9ydDogdHJ1ZTtcclxuXHJcbkBtaXhpbiBhcHAtbHRyKCRoYXMtY2hpbGQ6IHRydWUpIHtcclxuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XHJcbiAgICBAaWYgJGhhcy1jaGlsZCB7XHJcbiAgICAgIGh0bWw6bm90KFtkaXI9J3J0bCddKSAmIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgICAgfVxyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgIGh0bWw6bm90KFtkaXI9J3J0bCddKSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGFwcC1sdHItc3R5bGUoKSB7XHJcbiAgQGlmICRlbmFibGUtcnRsLXN1cHBvcnQge1xyXG4gICAgJjpub3QoW2Rpcj0ncnRsJ10pIHtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhcHAtcnRsKCRoYXMtY2hpbGQ6IHRydWUpIHtcclxuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XHJcbiAgICBAaWYgJGhhcy1jaGlsZCB7XHJcbiAgICAgIFtkaXI9J3J0bCddICYge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgICB9XHJcbiAgICB9IEBlbHNlIHtcclxuICAgICAgW2Rpcj0ncnRsJ10ge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gYXBwLXJ0bC1zdHlsZSgpIHtcclxuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XHJcbiAgICAmW2Rpcj0ncnRsJ10ge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLy8gVmFyaWFibGVzXHJcbi8vXHJcbi8vIFZhcmlhYmxlcyBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1zdGF0ZS1wcm9wZXJ0eS1zaXplYCBmb3JtdWxhIGZvclxyXG4vLyBjb25zaXN0ZW50IG5hbWluZy4gRXg6ICRuYXYtbGluay1kaXNhYmxlZC1jb2xvciBhbmQgJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14cy5cclxuLy9cclxuLy8gKEMpIEN1c3RvbSB2YXJpYWJsZXMgZm9yIGV4dGVuZGVkIGNvbXBvbmVudHMgb2YgYm9vdHN0cmFwIG9ubHlcclxuXHJcbi8vICogQ29sb3Igc3lzdGVtXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9yLXZhcmlhYmxlc1xyXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XHJcbiRibGFjazogIzRiNDY1YyAhZGVmYXVsdDtcclxuJGdyYXktMjU6IHJnYmEoJGJsYWNrLCAwLjAxNSkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZ3JheS01MDogcmdiYSgkYmxhY2ssIDAuMDMpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMTAwOiByZ2JhKCRibGFjaywgMC4wNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTIwMDogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcbiRncmF5LTMwMDogcmdiYSgkYmxhY2ssIDAuMykgIWRlZmF1bHQ7XHJcbiRncmF5LTQwMDogcmdiYSgkYmxhY2ssIDAuNCkgIWRlZmF1bHQ7XHJcbiRncmF5LTUwMDogcmdiYSgkYmxhY2ssIDAuNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTYwMDogcmdiYSgkYmxhY2ssIDAuNikgIWRlZmF1bHQ7XHJcbiRncmF5LTcwMDogcmdiYSgkYmxhY2ssIDAuNykgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogcmdiYSgkYmxhY2ssIDAuOCkgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuOSkgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9ycy1tYXBcclxuJGdyYXlzOiAoXHJcbiAgJzI1JzogJGdyYXktMjUsXHJcbiAgJzUwJzogJGdyYXktNTBcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBncmF5LWNvbG9ycy1tYXBcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBjb2xvci12YXJpYWJsZXNcclxuJGJsdWU6ICMwMDdiZmYgIWRlZmF1bHQ7XHJcbiRpbmRpZ286ICM2NjEwZjIgIWRlZmF1bHQ7XHJcbiRwdXJwbGU6ICM3MzY3ZjAgIWRlZmF1bHQ7XHJcbiRwaW5rOiAjZTgzZThjICFkZWZhdWx0O1xyXG4kcmVkOiAjZWE1NDU1ICFkZWZhdWx0O1xyXG4kb3JhbmdlOiAjZmQ3ZTE0ICFkZWZhdWx0O1xyXG4keWVsbG93OiAjZmY5ZjQzICFkZWZhdWx0O1xyXG4kZ3JlZW46ICMyOGM3NmYgIWRlZmF1bHQ7XHJcbiR0ZWFsOiAjMjBjOTk3ICFkZWZhdWx0O1xyXG4kY3lhbjogIzAwY2ZlOCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0aGVtZS1jb2xvci12YXJpYWJsZXNcclxuJHByaW1hcnk6ICRwdXJwbGUgIWRlZmF1bHQ7XHJcbiRzZWNvbmRhcnk6ICNhOGFhYWUgIWRlZmF1bHQ7XHJcbiRzdWNjZXNzOiAkZ3JlZW4gIWRlZmF1bHQ7XHJcbiRpbmZvOiAkY3lhbiAhZGVmYXVsdDtcclxuJHdhcm5pbmc6ICR5ZWxsb3cgIWRlZmF1bHQ7XHJcbiRkYW5nZXI6ICRyZWQgIWRlZmF1bHQ7XHJcbiRsaWdodDogI2RmZGZlMyAhZGVmYXVsdDtcclxuJGRhcms6ICM0YjRiNGIgIWRlZmF1bHQ7XHJcbiRncmF5OiAkZ3JheS0xMDAgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9ycy1tYXBcclxuJHRoZW1lLWNvbG9yczogKFxyXG4gICdwcmltYXJ5JzogJHByaW1hcnksXHJcbiAgJ3NlY29uZGFyeSc6ICRzZWNvbmRhcnksXHJcbiAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcclxuICAnaW5mbyc6ICRpbmZvLFxyXG4gICd3YXJuaW5nJzogJHdhcm5pbmcsXHJcbiAgJ2Rhbmdlcic6ICRkYW5nZXIsXHJcbiAgJ2xpZ2h0JzogJGxpZ2h0LFxyXG4gICdkYXJrJzogJGRhcmssXHJcbiAgJ2dyYXknOiAkZ3JheVxyXG4pICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9ycy1tYXBcclxuXHJcbiRjb2xvci1zY2hlbWU6ICdsaWdodCcgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBUaGUgY29udHJhc3QgcmF0aW8gdG8gcmVhY2ggYWdhaW5zdCB3aGl0ZSwgdG8gZGV0ZXJtaW5lIGlmIGNvbG9yIGNoYW5nZXMgZnJvbSBcImxpZ2h0XCIgdG8gXCJkYXJrXCIuIEFjY2VwdGFibGUgdmFsdWVzIGZvciBXQ0FHIDIuMCBhcmUgMywgNC41IGFuZCA3LlxyXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC8jdmlzdWFsLWF1ZGlvLWNvbnRyYXN0LWNvbnRyYXN0XHJcbiRtaW4tY29udHJhc3QtcmF0aW86IDEuNyAhZGVmYXVsdDtcclxuXHJcbi8vICogT3B0aW9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZW5hYmxlLW5lZ2F0aXZlLW1hcmdpbnM6IHRydWUgIWRlZmF1bHQ7XHJcbiRlbmFibGUtdmFsaWRhdGlvbi1pY29uczogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBQcmVmaXggZm9yIDpyb290IENTUyB2YXJpYWJsZXNcclxuJHZhcmlhYmxlLXByZWZpeDogYnMtICFkZWZhdWx0O1xyXG5cclxuLy8gKiBTcGFjaW5nXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRzcGFjZXI6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kc2l6ZXMtcHg6IChcclxuICBweC0xNDogMTRweCxcclxuICBweC0xODogMThweCxcclxuICBweC0yMDogMjBweCxcclxuICBweC0zMDogMzBweCxcclxuICBweC00MDogNDBweCxcclxuICBweC01MDogNTBweCxcclxuICBweC03NTogNzVweCxcclxuICBweC0xMDA6IDEwMHB4LFxyXG4gIHB4LTE1MDogMTUwcHgsXHJcbiAgcHgtMjAwOiAyMDBweCxcclxuICBweC0yNTA6IDI1MHB4LFxyXG4gIHB4LTMwMDogMzAwcHgsXHJcbiAgcHgtMzUwOiAzNTBweCxcclxuICBweC00MDA6IDQwMHB4LFxyXG4gIHB4LTUwMDogNTAwcHgsXHJcbiAgcHgtNjAwOiA2MDBweCxcclxuICBweC03MDA6IDcwMHB4LFxyXG4gIHB4LTgwMDogODAwcHgsXHJcbiAgYXV0bzogYXV0b1xyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQm9keVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYm9keS1iZzogI2Y4ZjdmYSAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnOiAjZmZmICFkZWZhdWx0OyAvLyAoQylcclxuJGJvZHktY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnLWludmVydGVkOiAjMDAwICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogTGlua3NcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGxpbmstY29sb3I6ICRwcmltYXJ5ICFkZWZhdWx0O1xyXG4kbGluay1kZWNvcmF0aW9uOiBub25lICFkZWZhdWx0O1xyXG4kbGluay1zaGFkZS1wZXJjZW50YWdlOiAxMCUgIWRlZmF1bHQ7XHJcbiRsaW5rLWhvdmVyLWNvbG9yOiBzaGlmdC1jb2xvcigkbGluay1jb2xvciwgJGxpbmstc2hhZGUtcGVyY2VudGFnZSkgIWRlZmF1bHQ7XHJcbiRsaW5rLWhvdmVyLWRlY29yYXRpb246IG51bGwgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEdyaWRcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy8gR3JpZCBjb250YWluZXJzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY29udGFpbmVyLW1heC13aWR0aHNcclxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXHJcbiAgc206IDU0MHB4LFxyXG4gIG1kOiA3MjBweCxcclxuICBsZzogOTYwcHgsXHJcbiAgeGw6IDExNDBweCxcclxuICB4eGw6IDE0NDBweCAvLyBDdXN0b20geHhsIHNpemVcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjb250YWluZXItbWF4LXdpZHRoc1xyXG5cclxuJGdyaWQtZ3V0dGVyLXdpZHRoOiAxLjVyZW0gIWRlZmF1bHQ7XHJcbiRjb250YWluZXItcGFkZGluZy14OiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kY29udGFpbmVyLXBhZGRpbmcteC1zbTogMXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb250YWluZXItcGFkZGluZy15OiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDb21wb25lbnRzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBib3JkZXItdmFyaWFibGVzXHJcbiRib3JkZXItd2lkdGg6IDFweCAhZGVmYXVsdDtcclxuJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kYm9yZGVyLWlubmVyLWNvbG9yOiByZ2JhKCRibGFjaywgMC4wNzUpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXJhZGl1cy12YXJpYWJsZXNcclxuJGJvcmRlci1yYWRpdXM6IDAuMzc1cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy14bDogMC42MjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYm9yZGVyLXJhZGl1cy1sZzogMC41cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJGJvcmRlci1yYWRpdXMteHM6IDAuMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItcmFkaXVzLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGJveC1zaGFkb3ctdmFyaWFibGVzXHJcbiRib3gtc2hhZG93OiAwIDAuMjVyZW0gMXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC40NSkgIWRlZmF1bHQ7XHJcbiRib3gtc2hhZG93LXNtOiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDAuMykgIWRlZmF1bHQ7XHJcbiRib3gtc2hhZG93LWxnOiAwIDAuNjI1cmVtIDEuMjVyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDAuNCkgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuXHJcbiRjb21wb25lbnQtYWN0aXZlLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRjb21wb25lbnQtYWN0aXZlLWJnOiAkcHJpbWFyeSAhZGVmYXVsdDtcclxuXHJcbiRjb21wb25lbnQtaG92ZXItY29sb3I6ICRwcmltYXJ5ICFkZWZhdWx0OyAvLyAoQylcclxuJGNvbXBvbmVudC1ob3Zlci1iZzogcmdiYSgkcHJpbWFyeSwgMC4wOCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGNvbXBvbmVudC1saW5lLWhlaWdodDogMS41NCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb21wb25lbnQtZm9jdXMtc2hhZG93LXdpZHRoOiAycHggIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjA1KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93OiAwIDAuMzFyZW0gMS4yNXJlbSAwICRncmF5LTQwMCAhZGVmYXVsdDsgLy8gKEMpIHVzZWQgZm9yIG1vZGFsIGFuZCByYW5nZVxyXG5cclxuJGhyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kaHItb3BhY2l0eTogMSAhZGVmYXVsdDtcclxuJGJvcmRlcmVkLXJvdy1ib3JkZXItY29sb3I6ICRoci1jb2xvciAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY2FyZXQtdmFyaWFibGVzXHJcbiRjYXJldC13aWR0aDogMC40MmVtICFkZWZhdWx0O1xyXG4kY2FyZXQtdmVydGljYWwtYWxpZ246IG1pZGRsZSAhZGVmYXVsdDtcclxuJGNhcmV0LXNwYWNpbmc6IDAuNWVtICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGNhcmV0LXZhcmlhYmxlc1xyXG5cclxuLy8gKiBUeXBvZ3JhcGh5XHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb250LXZhcmlhYmxlc1xyXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ1B1YmxpYyBTYW5zJywgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCAnT3h5Z2VuJywgJ1VidW50dScsICdDYW50YXJlbGwnLFxyXG4gICdGaXJhIFNhbnMnLCAnRHJvaWQgU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XHJcbiRmb250LWZhbWlseS1zZXJpZjogR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIHNlcmlmICFkZWZhdWx0OyAvLyAoQylcclxuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogJ1NGTW9uby1SZWd1bGFyJywgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsICdMaWJlcmF0aW9uIE1vbm8nLCAnQ291cmllciBOZXcnLCBtb25vc3BhY2UgIWRlZmF1bHQ7XHJcbi8vIHN0eWxlbGludC1lbmFibGUgdmFsdWUta2V5d29yZC1jYXNlXHJcbiRmb250LWZhbWlseS1iYXNlOiB2YXIoLS0jeyR2YXJpYWJsZS1wcmVmaXh9Zm9udC1zYW5zLXNlcmlmKSAhZGVmYXVsdDtcclxuJGZvbnQtZmFtaWx5LWNvZGU6IHZhcigtLSN7JHZhcmlhYmxlLXByZWZpeH1mb250LW1vbm9zcGFjZSkgIWRlZmF1bHQ7XHJcblxyXG4vLyAkZm9udC1zaXplLXJvb3QgZWZmZWN0cyB0aGUgdmFsdWUgb2YgYHJlbWAsIHdoaWNoIGlzIHVzZWQgZm9yIGFzIHdlbGwgZm9udCBzaXplcywgcGFkZGluZ3MgYW5kIG1hcmdpbnNcclxuLy8gJGZvbnQtc2l6ZS1iYXNlIGVmZmVjdHMgdGhlIGZvbnQgc2l6ZSBvZiB0aGUgYm9keSB0ZXh0XHJcbiRmb250LXNpemUtcm9vdDogMTZweCAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1iYXNlOiAwLjkzNzVyZW0gIWRlZmF1bHQ7IC8vIEFzc3VtZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgdHlwaWNhbGx5IGAxNnB4YFxyXG4kZm9udC1zaXplLXhsOiAxLjI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvbnQtc2l6ZS1sZzogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1zbTogMC43NXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS14czogMC42OXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9udC13ZWlnaHQtc2VtaWJvbGQ6IDYwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LWJvbGRlcjogNzAwICFkZWZhdWx0O1xyXG4kZm9udC13ZWlnaHQtbGlnaHRlcjogMzAwICFkZWZhdWx0O1xyXG5cclxuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNDcgIWRlZmF1bHQ7XHJcbiRsaW5lLWhlaWdodC14bDogMS41ICFkZWZhdWx0OyAvLyAoQylcclxuJGxpbmUtaGVpZ2h0LWxnOiAxLjM3NSAhZGVmYXVsdDtcclxuJGxpbmUtaGVpZ2h0LXNtOiAxICFkZWZhdWx0O1xyXG4kbGluZS1oZWlnaHQteHM6IDAuNzUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGgxLWZvbnQtc2l6ZTogMi4zNzVyZW0gIWRlZmF1bHQ7XHJcbiRoMi1mb250LXNpemU6IDJyZW0gIWRlZmF1bHQ7XHJcbiRoMy1mb250LXNpemU6IDEuNjI1cmVtICFkZWZhdWx0O1xyXG4kaDQtZm9udC1zaXplOiAxLjM3NXJlbSAhZGVmYXVsdDtcclxuJGg1LWZvbnQtc2l6ZTogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRoNi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb250LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGhlYWRpbmdzLXZhcmlhYmxlc1xyXG4kaGVhZGluZ3MtbWFyZ2luLWJvdHRvbTogJHNwYWNlciAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcbiRoZWFkaW5ncy1saW5lLWhlaWdodDogMS4zNyAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS05MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgaGVhZGluZ3MtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZGlzcGxheS1oZWFkaW5nc1xyXG4kZGlzcGxheS1mb250LXNpemVzOiAoXHJcbiAgMTogNC43NXJlbSxcclxuICAyOiA0LjM3NXJlbSxcclxuICAzOiAzLjg3NXJlbSxcclxuICA0OiAzLjM3NXJlbSxcclxuICA1OiAzcmVtLFxyXG4gIDY6IDIuNjI1cmVtXHJcbikgIWRlZmF1bHQ7XHJcblxyXG4kZGlzcGxheS1mb250LXdlaWdodDogNTAwICFkZWZhdWx0O1xyXG5cclxuLy8gc2Nzcy1kb2NzLWVuZCBkaXNwbGF5LWhlYWRpbmdzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdHlwZS12YXJpYWJsZXNcclxuXHJcbiRsZWFkLWZvbnQtc2l6ZTogJHNwYWNlciAqIDEuMTI1ICFkZWZhdWx0O1xyXG5cclxuJHRpbnktZm9udC1zaXplOiA3MCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kc21hbGwtZm9udC1zaXplOiAwLjgxMjVyZW0gIWRlZmF1bHQ7XHJcbiRiaWctZm9udC1zaXplOiAxMTIlICFkZWZhdWx0OyAvLyAoQylcclxuJGxhcmdlLWZvbnQtc2l6ZTogMTUwJSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR4bGFyZ2UtZm9udC1zaXplOiAxNzAlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LW11dGVkOiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbiR0ZXh0LW11dGVkLWhvdmVyOiByZ2JhLXRvLWhleCgkZ3JheS02MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJHRleHQtbGlnaHQ6IHJnYmEtdG8taGV4KCRncmF5LTQwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0ZXh0LWxpZ2h0ZXI6IHJnYmEtdG8taGV4KCRncmF5LTMwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0ZXh0LWxpZ2h0ZXN0OiByZ2JhLXRvLWhleCgkZ3JheS0yMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIHR5cGUtdmFyaWFibGVzXHJcblxyXG4vLyAqIFotaW5kZXggbWFzdGVyIGxpc3RcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHppbmRleC1tZW51LWZpeGVkOiAxMDgwICFkZWZhdWx0O1xyXG4kemluZGV4LW1vZGFsOiAxMDkwICFkZWZhdWx0O1xyXG4kemluZGV4LW1vZGFsLWJhY2tkcm9wOiAkemluZGV4LW1vZGFsIC0gMSAhZGVmYXVsdDtcclxuLy8gJHppbmRleC1tb2RhbC10b3A6IDEwOTAgIWRlZmF1bHQ7IC8vIChDKVxyXG4kemluZGV4LW9mZmNhbnZhczogMTA5MCAhZGVmYXVsdDtcclxuJHppbmRleC1vZmZjYW52YXMtYmFja2Ryb3A6ICR6aW5kZXgtb2ZmY2FudmFzIC0gMSAhZGVmYXVsdDtcclxuJHppbmRleC1sYXlvdXQtbW9iaWxlOiAxMTAwICFkZWZhdWx0OyAvLyAoQylcclxuJHppbmRleC1wb3BvdmVyOiAxMDkxICFkZWZhdWx0O1xyXG4kemluZGV4LXRvYXN0OiAxMDk1ICFkZWZhdWx0OyAvLyAoQylcclxuJHppbmRleC10b29sdGlwOiAxMDk5ICFkZWZhdWx0O1xyXG4kemluZGV4LW5vdGlmaWNhdGlvbjogOTk5OTk5ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVGFibGVzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0YWJsZS12YXJpYWJsZXNcclxuJHRhYmxlLWNlbGwtcGFkZGluZy15OiAwLjU1cmVtICFkZWZhdWx0O1xyXG4kdGFibGUtY2VsbC1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteS1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJHRhYmxlLWNlbGwtcGFkZGluZy14LXNtOiAkdGFibGUtY2VsbC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtY2VsbC12ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLXRoLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtc3RyaXBlZC1iZy1mYWN0b3I6IDAuMDIgIWRlZmF1bHQ7XHJcbiR0YWJsZS1zdHJpcGVkLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1hY3RpdmUtYmctZmFjdG9yOiAwLjA4ICFkZWZhdWx0O1xyXG4kdGFibGUtYWN0aXZlLWJnOiByZ2JhKCRwcmltYXJ5LCAkdGFibGUtYWN0aXZlLWJnLWZhY3RvcikgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtaG92ZXItYmctZmFjdG9yOiAwLjA0ICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLWJvcmRlci1mYWN0b3I6IDAuMiAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1iZy1zY2FsZTogLTkyJSAhZGVmYXVsdDtcclxuXHJcbi8vICogQnV0dG9ucyArIEZvcm1zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15OiAwLjZyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tcGFkZGluZy14OiAxLjI1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0OiAxLjEyNSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tZm9jdXMtd2lkdGg6IDAuMDVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9jdXMtY29sb3Itb3BhY2l0eTogMC4xICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yOiByZ2JhKCRjb21wb25lbnQtYWN0aXZlLWJnLCAkaW5wdXQtYnRuLWZvY3VzLWNvbG9yLW9wYWNpdHkpICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWJsdXI6IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdzogMCAwICRpbnB1dC1idG4tZm9jdXMtYmx1ciAkaW5wdXQtYnRuLWZvY3VzLXdpZHRoICRpbnB1dC1idG4tZm9jdXMtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS14czogMC4xNzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC14czogMC43NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXhzOiAkZm9udC1zaXplLXhzICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC14czogJGxpbmUtaGVpZ2h0LXhzICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXNtOiAwLjQxcmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1zbTogMC44NzVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXNtOiAwLjgxMjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LWxnOiAwLjg0cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC1sZzogMS42MjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLWxnOiAxLjA2MjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXhsOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXhsOiAxLjc1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1mb250LXNpemUteGw6ICRmb250LXNpemUteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhsOiAkbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBCdXR0b25zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRidG4tcGFkZGluZy15LXhzOiAkaW5wdXQtYnRuLXBhZGRpbmcteS14cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tcGFkZGluZy14LXhzOiAkaW5wdXQtYnRuLXBhZGRpbmcteC14cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tZm9udC1zaXplLXhzOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS14cyAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kYnRuLXBhZGRpbmcteS14bDogJGlucHV0LWJ0bi1wYWRkaW5nLXkteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLXBhZGRpbmcteC14bDogJGlucHV0LWJ0bi1wYWRkaW5nLXgteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWZvbnQtc2l6ZS14bDogJGlucHV0LWJ0bi1mb250LXNpemUteGwgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1saW5lLWhlaWdodC14czogJGlucHV0LWJ0bi1saW5lLWhlaWdodC14cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbTsgLy8oQylcclxuJGJ0bi1saW5lLWhlaWdodC1sZzogJGxpbmUtaGVpZ2h0LWxnOyAvLyhDKVxyXG4kYnRuLWxpbmUtaGVpZ2h0LXhsOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcclxuJGJ0bi1ib3gtc2hhZG93OiAwcHggMnB4IDRweCByZ2JhKDE2NSwgMTYzLCAxNzQsIDAuNCkgIWRlZmF1bHQ7XHJcbiRidG4tZm9jdXMtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuXHJcbiRidG4tYm9yZGVyLXJhZGl1cy14czogJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWJvcmRlci1yYWRpdXMteGw6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XHJcblxyXG4kYnRuLWxhYmVsLWJnLXNoYWRlLWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1sYWJlbC1iZy10aW50LWFtb3VudDogODUlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1sYWJlbC1ob3Zlci1zaGFkZS1hbW91bnQ6IDI2JSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tbGFiZWwtaG92ZXItdGludC1hbW91bnQ6IDc2JSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRidG4tbGFiZWwtZGlzYWJsZWQtYmctc2hhZGUtYW1vdW50OiA4NCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWxhYmVsLWRpc2FibGVkLWJnLXRpbnQtYW1vdW50OiA4NSUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1ob3Zlci1iZy1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1iZy10aW50LWFtb3VudDogMjUlICFkZWZhdWx0O1xyXG4kYnRuLWhvdmVyLWJvcmRlci1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1ib3JkZXItdGludC1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYmctc2hhZGUtYW1vdW50OiAxMCUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJnLXRpbnQtYW1vdW50OiAyMCUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJvcmRlci1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm9yZGVyLXRpbnQtYW1vdW50OiAxMCUgIWRlZmF1bHQ7XHJcblxyXG4vLyBPdXRsaW5lIGJ1dHRvbnNcclxuJGJ0bi1vdXRsaW5lLWhvdmVyLWJnLXNoYWRlLWFtb3VudDogMTAlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1vdXRsaW5lLWhvdmVyLWJnLXRpbnQtYW1vdW50OiA5MiUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLW91dGxpbmUtYWN0aXZlLWJnLXNoYWRlLWFtb3VudDogMTAlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1vdXRsaW5lLWFjdGl2ZS1iZy10aW50LWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogRm9ybXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tdGV4dC12YXJpYWJsZXNcclxuJGZvcm0tdGV4dC1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tdGV4dC12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWxhYmVsLXZhcmlhYmxlc1xyXG4kZm9ybS1sYWJlbC1tYXJnaW4tYm90dG9tOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kZm9ybS1sYWJlbC1mb250LXNpemU6ICRpbnB1dC1idG4tZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kZm9ybS1sYWJlbC1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1sYWJlbC1sZXR0ZXItc3BhY2luZzogaW5oZXJpdCAhZGVmYXVsdDsgLy8oQylcclxuJGZvcm0tbGFiZWwtdGV4dC10cmFuc2Zvcm06IGluaGVyaXQgIWRlZmF1bHQ7IC8vKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1sYWJlbC12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWlucHV0LXZhcmlhYmxlc1xyXG4kaW5wdXQtcGFkZGluZy15OiAwLjQyMnJlbSAhZGVmYXVsdDtcclxuJGlucHV0LXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXgtc20gIWRlZmF1bHQ7XHJcbiRpbnB1dC1saW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0O1xyXG4kaW5wdXQtZm9udC1zaXplOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wYWRkaW5nLXktc206IDAuMjY2cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtcGFkZGluZy14LXNtOiAwLjYyNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wYWRkaW5nLXktbGc6IDAuNTk0cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtcGFkZGluZy14LWxnOiAkc3BhY2VyICFkZWZhdWx0O1xyXG4kaW5wdXQtZm9udC1zaXplLWxnOiAxLjEyNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kaW5wdXQtZGlzYWJsZWQtYmc6IHJnYmEoJGJsYWNrLCAwLjA4KSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuJGlucHV0LWZvY3VzLWJveC1zaGFkb3c6ICRib3gtc2hhZG93LXNtICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtaGVpZ2h0LWlubmVyOiBweC10by1yZW0oXHJcbiAgZmxvb3IocmVtLXRvLXB4KCgkaW5wdXQtYnRuLWZvbnQtc2l6ZSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQpICsgKCRpbnB1dC1idG4tcGFkZGluZy15ICogMikpKVxyXG4pICFkZWZhdWx0O1xyXG4kaW5wdXQtaGVpZ2h0LWlubmVyLXNtOiBweC10by1yZW0oXHJcbiAgZmxvb3IocmVtLXRvLXB4KCgkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc20pICsgKCRpbnB1dC1idG4tcGFkZGluZy15LXNtICogMikpKVxyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWhlaWdodC1pbm5lci1sZzogcHgtdG8tcmVtKFxyXG4gIGZsb29yKHJlbS10by1weCgoJGZvbnQtc2l6ZS1sZyAqICRsaW5lLWhlaWdodC1sZykgKyAoJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgKiAyKSkpXHJcbikgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0taW5wdXQtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1jaGVjay12YXJpYWJsZXNcclxuJGZvcm0tY2hlY2staW5wdXQtd2lkdGg6IDEuMmVtICFkZWZhdWx0O1xyXG4kZm9ybS1kYXRhdGFibGVzLWNoZWNrLWlucHV0LXNpemU6IDE3cHggIWRlZmF1bHQ7IC8vIChDKSBGb3IgZGF0YXRhYmxlcyB3aXRoIGNoZWNrYm94LSB1cGRhdGUgYWNjb3JkaW5nIHRvICRmb3JtLWNoZWNrLWlucHV0LXdpZHRoXHJcbiRmb3JtLWNoZWNrLW1pbi1oZWlnaHQ6ICRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xyXG4kZm9ybS1jaGVjay1pbnB1dC1ib3JkZXI6IDFweCBzb2xpZCAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tY2hlY2stbGFiZWwtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0OyAvLyAoQylSXHJcblxyXG4kZm9ybS1jaGVjay1pbnB1dC1mb2N1cy1ib3gtc2hhZG93OiAkaW5wdXQtZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWlucHV0LWNoZWNrZWQtY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzExJyBoZWlnaHQ9JzEzJyB2aWV3Qm94PScwIDAgMTUgMTQnIGZpbGw9J25vbmUnJTNFJTNDcGF0aCBkPSdNMy40MTY2NyA3TDYuMzMzMzMgOS45MTY2N0wxMi4xNjY3IDQuMDgzMzMnIHN0cm9rZT0nI3skZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yfScgc3Ryb2tlLXdpZHRoPScxLjUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLXJhZGlvLWNoZWNrZWQtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE4JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTggMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NyZWN0IHg9JzUnIHk9JzUnIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHJ4PSc0JyBmaWxsPScjeyRmb3JtLWNoZWNrLWlucHV0LWNoZWNrZWQtY29sb3J9Jy8lM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtaW5kZXRlcm1pbmF0ZS1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbiRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE4JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTggMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NwYXRoIGQ9J001LjUgOUgxMi41JyBzdHJva2U9JyN7JGZvcm0tY2hlY2staW5wdXQtaW5kZXRlcm1pbmF0ZS1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMS41JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1jaGVjay1pbnB1dC1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLWNoZWNrLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc3dpdGNoLXZhcmlhYmxlc1xyXG4kZm9ybS1zd2l0Y2gtY29sb3I6ICRncmF5LTMwMCAhZGVmYXVsdDtcclxuJGZvcm0tc3dpdGNoLXdpZHRoOiAyZW0gIWRlZmF1bHQ7XHJcbiRmb3JtLXN3aXRjaC1wYWRkaW5nLXN0YXJ0OiAkZm9ybS1zd2l0Y2gtd2lkdGggKyAwLjVlbSAhZGVmYXVsdDtcclxuJGZvcm0tc3dpdGNoLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxOCcgaGVpZ2h0PScxOCcgdmlld0JveD0nMCAwIDE4IDE4JyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDY2lyY2xlIGN4PSc5JyBjeT0nOScgcj0nNicgZmlsbD0nI3skZm9ybS1zd2l0Y2gtY29sb3J9Jy8lM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc3dpdGNoLWZvY3VzLWNvbG9yOiAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1zd2l0Y2gtZm9jdXMtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE4JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTggMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NjaXJjbGUgY3g9JzknIGN5PSc5JyByPSc2JyBmaWxsPScjeyRmb3JtLXN3aXRjaC1mb2N1cy1jb2xvcn0nLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1zd2l0Y2gtY2hlY2tlZC1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcbiRmb3JtLXN3aXRjaC1jaGVja2VkLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxOCcgaGVpZ2h0PScxOCcgdmlld0JveD0nMCAwIDE4IDE4JyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDY2lyY2xlIGN4PSc5JyBjeT0nOScgcj0nNicgZmlsbD0nI3skZm9ybS1zd2l0Y2gtY2hlY2tlZC1jb2xvcn0nLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1zd2l0Y2gtY2hlY2tlZC1iZy1wb3NpdGlvbi1ydGw6IGxlZnQgY2VudGVyICFkZWZhdWx0OyAvLyhDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tc3dpdGNoLXZhcmlhYmxlc1xyXG5cclxuLy9pbnB1dC1ncm91cC12YXJpYWJsZXNcclxuJGlucHV0LWdyb3VwLWFkZG9uLXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXgteHMgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ncm91cC1hZGRvbi1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGlucHV0LWdyb3VwLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc2VsZWN0LXZhcmlhYmxlc1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy15OiAkaW5wdXQtcGFkZGluZy15ICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy14OiAkaW5wdXQtcGFkZGluZy14ICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1wYWRkaW5nLXggKiAyLjggIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1kaXNhYmxlZC1iZzogJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtYmctc2l6ZTogMjJweCAyMHB4ICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMjAnIGhlaWdodD0nMjAnIHZpZXdCb3g9JzAgMCAyMCAyMCcgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTUgNy41TDEwIDEyLjVMMTUgNy41JyBzdHJva2U9JyN7JGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMS41JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQ3BhdGggZD0nTTUgNy41TDEwIDEyLjVMMTUgNy41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4yJyBzdHJva2Utd2lkdGg9JzEuNScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6ICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93ICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteS1zbTogJGlucHV0LXBhZGRpbmcteS1zbSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteC1zbTogJGlucHV0LXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXktbGc6ICRpbnB1dC1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXgtbGc6ICRpbnB1dC1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1zZWxlY3QtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1yYW5nZS12YXJpYWJsZXNcclxuJGZvcm0tcmFuZ2UtdHJhY2staGVpZ2h0OiAwLjEyNXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYmc6ICRncmF5LTIwMCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stZGlzYWJsZWQtYmc6ICRncmF5LTUwICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRmb3JtLXJhbmdlLXRodW1iLXdpZHRoOiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1oZWlnaHQ6ICRmb3JtLXJhbmdlLXRodW1iLXdpZHRoICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1ib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgkYmxhY2ssIDAuMSksICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1mb2N1cy1ib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSgkYmxhY2ssIDAuMSksICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICRmb3JtLXJhbmdlLXRodW1iLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tcmFuZ2UtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtb3BhY2l0eTogMC43NSAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW4tb3V0LCB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dCAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtdHJhbnNmb3JtLXJ0bDogc2NhbGUoMC44NSkgdHJhbnNsYXRlWSgtMC41cmVtKSB0cmFuc2xhdGVYKC0wLjE1cmVtKSAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuXHJcbi8vIEZvcm0gdmFsaWRhdGlvblxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tZmVlZGJhY2stdmFyaWFibGVzXHJcbiRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yOiAkc3VjY2VzcyAhZGVmYXVsdDtcclxuJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcjogJGRhbmdlciAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZyArICRpbnB1dC1oZWlnaHQtaW5uZXIgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZm9ybS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLXNtOiAkZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcgKyAkaW5wdXQtaGVpZ2h0LWlubmVyLXNtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvcm0tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1sZzogJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nICsgJGlucHV0LWhlaWdodC1pbm5lci1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mZWVkYmFjay12YXJpYWJsZXNcclxuXHJcbi8vICogTmF2c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2LXNwYWNlcjogMC4xMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG5hdi1saW5rLXBhZGRpbmcteTogMC41NDNyZW0gIWRlZmF1bHQ7XHJcbiRuYXYtbGluay1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiRuYXYtbGluay1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LWxpbmstcGFkZGluZy15LWxnOiAwLjZyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2LWxpbmstcGFkZGluZy14LWxnOiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2LWxpbmstbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LWxpbmstcGFkZGluZy15LXNtOiAwLjM3NnJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1wYWRkaW5nLXgtc206IDFyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2LWxpbmstbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LXRhYnMtYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJG5hdi10YWJzLWxpbmstYWN0aXZlLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcclxuJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIE5hdmJhclxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiAwLjVyZW0gIWRlZmF1bHQ7XHJcbiRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXg6IDAuN3JlbSAhZGVmYXVsdDtcclxuJG5hdmJhci10b2dnbGVyLWZvbnQtc2l6ZTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kbmF2YmFyLWRhcmstY29sb3I6IHJnYmEoJHdoaXRlLCAwLjgpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhcmstaG92ZXItY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhcmstZGlzYWJsZWQtY29sb3I6IHJnYmEoJHdoaXRlLCAwLjQpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRhcmstdG9nZ2xlci1pY29uLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxNHB4JyBoZWlnaHQ9JzExcHgnIHZpZXdCb3g9JzAgMCAxNCAxMScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGQ9J00wLDAgTDE0LDAgTDE0LDEuNzUgTDAsMS43NSBMMCwwIFogTTAsNC4zNzUgTDE0LDQuMzc1IEwxNCw2LjEyNSBMMCw2LjEyNSBMMCw0LjM3NSBaIE0wLDguNzUgTDE0LDguNzUgTDE0LDEwLjUgTDAsMTAuNSBMMCw4Ljc1IFonIGlkPSdwYXRoLTEnJTNFJTNDL3BhdGglM0UlM0MvZGVmcyUzRSUzQ2cgaWQ9J/Cfko4tVUktRWxlbWVudHMnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDZyBpZD0nMTIpLU5hdmJhcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTExNzQuMDAwMDAwLCAtMTI5MC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0dyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxMTc0LjAwMDAwMCwgMTI4OC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0ljb24tQ29sb3InIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMCknJTNFJTNDdXNlIGZpbGw9JyN7JG5hdmJhci1kYXJrLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjEnIGZpbGw9JyN7JG5hdmJhci1kYXJrLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9zdmclM0VcIikgIWRlZmF1bHQ7XHJcblxyXG4kbmF2YmFyLWxpZ2h0LWNvbG9yOiAkZ3JheS01MDAgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtaG92ZXItY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6ICRncmF5LTMwMCAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC10b2dnbGVyLWljb24tYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE0cHgnIGhlaWdodD0nMTFweCcgdmlld0JveD0nMCAwIDE0IDExJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BhdGggZD0nTTAsMCBMMTQsMCBMMTQsMS43NSBMMCwxLjc1IEwwLDAgWiBNMCw0LjM3NSBMMTQsNC4zNzUgTDE0LDYuMTI1IEwwLDYuMTI1IEwwLDQuMzc1IFogTTAsOC43NSBMMTQsOC43NSBMMTQsMTAuNSBMMCwxMC41IEwwLDguNzUgWicgaWQ9J3BhdGgtMSclM0UlM0MvcGF0aCUzRSUzQy9kZWZzJTNFJTNDZyBpZD0n8J+Sji1VSS1FbGVtZW50cycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPScxMiktTmF2YmFyJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTE3NC4wMDAwMDAsIC0xMjkwLjAwMDAwMCknJTNFJTNDZyBpZD0nR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDExNzQuMDAwMDAwLCAxMjg4LjAwMDAwMCknJTNFJTNDZyBpZD0nSWNvbi1Db2xvcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDIuMDAwMDAwKSclM0UlM0N1c2UgZmlsbD0nI3skbmF2YmFyLWxpZ2h0LWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjEnIGZpbGw9JyN7JG5hdmJhci1saWdodC1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuJG5hdmJhci1saWdodC10b2dnbGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMDYpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRyb3Bkb3duLWhvdmVyLWJnOiByZ2JhKCRibGFjaywgMC4wNCkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kbmF2YmFyLWRyb3Bkb3duLWljb24tYmc6IHJnYmEoJGJsYWNrLCAwLjA4KSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIERyb3Bkb3duc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZHJvcGRvd24tc3BhY2VyOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1ib3gtc2hhZG93OiAkYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuXHJcbiRkcm9wZG93bi1pbm5lci1ib3JkZXItcmFkaXVzOiAwcHggIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24tbGluay1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjogJGNvbXBvbmVudC1ob3Zlci1jb2xvciAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICRjb21wb25lbnQtaG92ZXItYmcgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1saW5rLWxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAwLjQycmVtICFkZWZhdWx0O1xyXG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXg6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjogJHRleHQtbGlnaHRlciAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBhZ2luYXRpb25cclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAwLjU5NHJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14OiAwLjM1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktc206IDAuNXJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAwLjE1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktbGc6IDAuODc1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtbGc6IDAuNHJlbSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6IDEgIWRlZmF1bHQ7IC8vIChjKVxyXG5cclxuJHBhZ2luYXRpb24tY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tYmc6IHJnYmEoJGJsYWNrLCAwLjA4KSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tbWFyZ2luLXN0YXJ0OiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICRwYWdpbmF0aW9uLWJnICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tZm9jdXMtY29sb3I6ICRwYWdpbmF0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1mb2N1cy1iZzogcmdiYSgkYmxhY2ssIDAuMTYpICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1mb2N1cy1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24taG92ZXItY29sb3I6ICRwYWdpbmF0aW9uLWZvY3VzLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ob3Zlci1iZzogJHBhZ2luYXRpb24tZm9jdXMtYmcgIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlci1jb2xvcjogJHBhZ2luYXRpb24taG92ZXItYmcgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiAkcGFnaW5hdGlvbi1iZyAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtYm9yZGVyLWNvbG9yOiAkcGFnaW5hdGlvbi1kaXNhYmxlZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogQ2FyZHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGNhcmQtc3BhY2VyLXk6ICRzcGFjZXIgKiAxLjUgIWRlZmF1bHQ7XHJcbiRjYXJkLXNwYWNlci14OiAkc3BhY2VyICogMS41ICFkZWZhdWx0O1xyXG4kY2FyZC10aXRsZS1zcGFjZXIteTogJHNwYWNlciAqIDAuODc1ICFkZWZhdWx0O1xyXG4kY2FyZC1zcGFjZXIteC1zbTogMXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjYXJkLWJvcmRlci13aWR0aDogMCAhZGVmYXVsdDtcclxuJGNhcmQtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kY2FyZC1pbm5lci1ib3JkZXItY29sb3I6ICRib3JkZXItaW5uZXItY29sb3IgIWRlZmF1bHQ7IC8vIChDKVxyXG4kY2FyZC1jYXAtcGFkZGluZy15OiAkc3BhY2VyICogMS41ICFkZWZhdWx0O1xyXG4kY2FyZC1jYXAtYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kY2FyZC1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kY2FyZC1pbWctb3ZlcmxheS1wYWRkaW5nOiAxLjVyZW0gIWRlZmF1bHQ7XHJcbiRjYXJkLWJveC1zaGFkb3c6IDAgMC4yNXJlbSAxLjEyNXJlbSByZ2JhKCRibGFjaywgMC4xKSAhZGVmYXVsdDtcclxuXHJcbi8vICogQWNjb3JkaW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhY2NvcmRpb24tcGFkZGluZy15OiAwLjgycmVtICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1ib3JkZXItY29sb3I6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1hY3RpdmUtYmc6ICRhY2NvcmRpb24tYmcgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWljb24td2lkdGg6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWljb24tY29sb3I6ICRhY2NvcmRpb24tYnV0dG9uLWNvbG9yICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWljb24tYWN0aXZlLWNvbG9yOiAkYWNjb3JkaW9uLWJ1dHRvbi1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWljb24tdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1idXR0b24taWNvbjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMjAnIGhlaWdodD0nMjEnIHZpZXdCb3g9JzAgMCAyMCAyMScgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTcuNSA1LjVMMTIuNSAxMC41TDcuNSAxNS41JyBzdHJva2U9JyN7JGFjY29yZGlvbi1pY29uLWNvbG9yfScgc3Ryb2tlLXdpZHRoPScxLjc1JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQ3BhdGggZD0nTTcuNSA1LjVMMTIuNSAxMC41TDcuNSAxNS41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4xJyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuXHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScyMCcgaGVpZ2h0PScyMScgdmlld0JveD0nMCAwIDIwIDIxJyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBkPSdNNy41IDUuNUwxMi41IDEwLjVMNy41IDE1LjUnIHN0cm9rZT0nI3skYWNjb3JkaW9uLWljb24tY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNy41IDUuNUwxMi41IDEwLjVMNy41IDE1LjUnIHN0cm9rZT0nd2hpdGUnIHN0cm9rZS1vcGFjaXR5PScwLjEnIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBUb29sdGlwc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kdG9vbHRpcC1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJHRvb2x0aXAtYmc6ICRkYXJrICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1vcGFjaXR5OiAxICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1wYWRkaW5nLXk6ICRzcGFjZXIgKiAwLjMxMjUgIWRlZmF1bHQ7XHJcbiR0b29sdGlwLXBhZGRpbmcteDogJHNwYWNlciAqIDAuNzUgIWRlZmF1bHQ7XHJcblxyXG4kdG9vbHRpcC1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogUG9wb3ZlcnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kcG9wb3Zlci1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJHBvcG92ZXItYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm94LXNoYWRvdzogJGJveC1zaGFkb3cgIWRlZmF1bHQ7XHJcblxyXG4kcG9wb3Zlci1oZWFkZXItYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1oZWFkZXItY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteTogJHNwYWNlciAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kcG9wb3Zlci1ib2R5LWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXk6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFRvYXN0c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiR0b2FzdC1wYWRkaW5nLXk6IDAuNDA2cmVtICFkZWZhdWx0O1xyXG4kdG9hc3QtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XHJcbiR0b2FzdC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiR0b2FzdC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjYXJkLWJnLCAwLjg1KTtcclxuJHRvYXN0LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kdG9hc3QtaGVhZGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYm9yZGVyLWNvbG9yLCAwLjMpICFkZWZhdWx0O1xyXG4kdG9hc3Qtc3BhY2luZzogMXJlbSAhZGVmYXVsdDtcclxuXHJcbiR0b2FzdC1oZWFkZXItY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1iYWNrZ3JvdW5kLWNvbG9yOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogQmFkZ2VzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRiYWRnZS1mb250LXNpemU6IDAuODFlbSAhZGVmYXVsdDtcclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcbiRiYWRnZS1wYWRkaW5nLXk6IDAuNDllbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBhZGRpbmcteDogMWVtICFkZWZhdWx0O1xyXG4kYmFkZ2UtYm9yZGVyLXJhZGl1czogMC4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRiYWRnZS1waWxsLXBhZGRpbmcteDogMC41ODNlbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBpbGwtYm9yZGVyLXJhZGl1czogMTByZW0gIWRlZmF1bHQ7XHJcblxyXG4kYmFkZ2UtaGVpZ2h0OiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYmFkZ2Utd2lkdGg6IDEuNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRiYWRnZS1jZW50ZXItZm9udC1zaXplOiAwLjgxMnJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE1vZGFsc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbW9kYWwtaW5uZXItcGFkZGluZzogMS41cmVtICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLWZvb3Rlci1tYXJnaW4tYmV0d2VlbjogMXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1kaWFsb2ctbWFyZ2luOiAkbW9kYWwtaW5uZXItcGFkZGluZyAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14czogJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3cgIWRlZmF1bHQ7XHJcbiRtb2RhbC1jb250ZW50LWJveC1zaGFkb3ctc20tdXA6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kbW9kYWwtYmFja2Ryb3Atb3BhY2l0eTogMC41ICFkZWZhdWx0O1xyXG4kbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteTogMS4yNXJlbSAhZGVmYXVsdDtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXg6IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZzogJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgJG1vZGFsLWlubmVyLXBhZGRpbmcgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbiRtb2RhbC1mb290ZXItcGFkZGluZzogJG1vZGFsLWhlYWRlci1wYWRkaW5nLXggJG1vZGFsLWlubmVyLXBhZGRpbmcgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG1vZGFsLWxnOiA1MHJlbSAhZGVmYXVsdDtcclxuJG1vZGFsLW1kOiAzNXJlbSAhZGVmYXVsdDtcclxuJG1vZGFsLXNtOiAyMi41cmVtICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLWZhZGUtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDBweCkgc2NhbGUoMC44KSAhZGVmYXVsdDtcclxuJG1vZGFsLXNob3ctdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMTVzICFkZWZhdWx0OyAvLyAoQylcclxuJG1vZGFsLXRyYW5zaXRpb246IHRyYW5zZm9ybSAkbW9kYWwtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlLW91dCAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1zaW1wbGUtcGFkZGluZzogM3JlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRtb2RhbC1zaW1wbGUtY2xvc2UtcG9zaXRpb246IDFyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBBbGVydHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGFsZXJ0LXBhZGRpbmcteTogJHNwYWNlciAqIDAuNjg3ICFkZWZhdWx0O1xyXG4kYWxlcnQtcGFkZGluZy14OiAkc3BhY2VyICogMC44NzUgIWRlZmF1bHQ7XHJcbiRhbGVydC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcclxuJGFsZXJ0LWJnLXNjYWxlOiAtODQlICFkZWZhdWx0O1xyXG4kYWxlcnQtYm9yZGVyLXNjYWxlOiAtODQlICFkZWZhdWx0O1xyXG4kYWxlcnQtY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xyXG4kYWxlcnQtaWNvbi1iZzogJHdoaXRlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogUHJvZ3Jlc3MgYmFyc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kcHJvZ3Jlc3MtaGVpZ2h0OiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtZm9udC1zaXplOiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtYmc6IHJnYmEtdG8taGV4KHJnYmEoJGdyYXktNTAwLCAwLjA4KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWJvcmRlci1yYWRpdXM6IDMuMTI1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtYmFyLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcblxyXG4vLyBMaXN0IGdyb3VwXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBsaXN0LWdyb3VwLXZhcmlhYmxlc1xyXG4kbGlzdC1ncm91cC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteTogMC41N3JlbSAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tYmctc2NhbGU6IC04NCUgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tYm9yZGVyLXNjYWxlOiAtODQlICFkZWZhdWx0OyAvLyAoQylcclxuJGxpc3QtZ3JvdXAtaXRlbS1jb2xvci1zY2FsZTogMCUgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tYmctaG92ZXItc2NhbGU6IDAlICFkZWZhdWx0OyAvLyAgKGMpXHJcblxyXG4kbGlzdC1ncm91cC1ob3Zlci1iZzogcmdiYS10by1oZXgoJGNvbXBvbmVudC1ob3Zlci1iZywgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiRsaXN0LWdyb3VwLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtYmc6ICRsaXN0LWdyb3VwLWJnICFkZWZhdWx0O1xyXG5cclxuJGxpc3QtZ3JvdXAtYWN0aW9uLWhvdmVyLWNvbG9yOiAkY29tcG9uZW50LWhvdmVyLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWFjdGlvbi1hY3RpdmUtYmc6ICRsaXN0LWdyb3VwLWhvdmVyLWJnICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGxpc3QtZ3JvdXAtdmFyaWFibGVzXHJcblxyXG4vLyAqIEltYWdlIHRodW1ibmFpbHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHRodW1ibmFpbC1wYWRkaW5nOiAwICFkZWZhdWx0O1xyXG4kdGh1bWJuYWlsLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJHRodW1ibmFpbC1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHRodW1ibmFpbC1ib3JkZXItcmFkaXVzOiAwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEZpZ3VyZXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGZpZ3VyZS1jYXB0aW9uLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuXHJcbi8vICogQnJlYWRjcnVtYnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGJyZWFkY3J1bWItcGFkZGluZy15OiAwICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1wYWRkaW5nLXg6IDAgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWl0ZW0tcGFkZGluZy14OiAwLjg3NXJlbSAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItbWFyZ2luLWJvdHRvbTogMXJlbSAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAkYmxhY2sgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWFjdGl2ZS1jb2xvcjogJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvciAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItZGl2aWRlcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGNsYXNzPSdpY29uIGljb24tdGFibGVyIGljb24tdGFibGVyLWNoZXZyb24tcmlnaHQnIHdpZHRoPScxNicgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDI0IDI0JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZT0nI3skYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yfScgZmlsbD0nbm9uZScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyUzRSUzQ3BhdGggc3Ryb2tlPSdub25lJyBkPSdNMCAwaDI0djI0SDB6JyBmaWxsPSdub25lJyUzRSUzQy9wYXRoJTNFJTNDcG9seWxpbmUgcG9pbnRzPSc5IDYgMTUgMTIgOSAxOCclM0UlM0MvcG9seWxpbmUlM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1kaXZpZGVyLWZsaXBwZWQ6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBjbGFzcz0naWNvbiBpY29uLXRhYmxlciBpY29uLXRhYmxlci1jaGV2cm9uLWxlZnQnIHdpZHRoPScxNicgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDI0IDI0JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZT0nI3skYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yfScgZmlsbD0nbm9uZScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyUzRSUzQ3BhdGggc3Ryb2tlPSdub25lJyBkPSdNMCAwaDI0djI0SDB6JyBmaWxsPSdub25lJyUzRSUzQy9wYXRoJTNFJTNDcG9seWxpbmUgcG9pbnRzPScxNSA2IDkgMTIgMTUgMTgnJTNFJTNDL3BvbHlsaW5lJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWJnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRicmVhZGNydW1iLWRpdmlkZXItY2hlY2s6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBjbGFzcz0naWNvbiBpY29uLXRhYmxlciBpY29uLXRhYmxlci1jaGVjaycgd2lkdGg9JzE2JyBoZWlnaHQ9JzI0JyB2aWV3Qm94PScwIDAgMjQgMjQnIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlPScjeyRicmVhZGNydW1iLWRpdmlkZXItY29sb3J9JyBmaWxsPSdub25lJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnJTNFJTNDcGF0aCBzdHJva2U9J25vbmUnIGQ9J00wIDBoMjR2MjRIMHonIGZpbGw9J25vbmUnJTNFJTNDL3BhdGglM0UlM0NwYXRoIGQ9J001IDEybDUgNWwxMCAtMTAnJTNFJTNDL3BhdGglM0UlM0Mvc3ZnJTNFXCIpO1xyXG5cclxuJGJyZWFkY3J1bWItaWNvbi1jaGVjay1zdmc6IHN0ci1yZXBsYWNlKFxyXG4gIHN0ci1yZXBsYWNlKCRicmVhZGNydW1iLWRpdmlkZXItY2hlY2ssICcjeyRicmVhZGNydW1iLWRpdmlkZXItY29sb3J9JywgJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvciksXHJcbiAgJyMnLFxyXG4gICclMjMnXHJcbik7IC8vIChDKVxyXG5cclxuLy8gKiBDYXJvdXNlbFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kY2Fyb3VzZWwtY29udHJvbC1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuJGNhcm91c2VsLWluZGljYXRvci13aWR0aDogMzRweCAhZGVmYXVsdDtcclxuJGNhcm91c2VsLWluZGljYXRvci1oZWlnaHQ6IDVweCAhZGVmYXVsdDtcclxuJGNhcm91c2VsLWluZGljYXRvci1oaXQtYXJlYS1oZWlnaHQ6IDAgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1pbmRpY2F0b3Itc3BhY2VyOiA1cHggIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1pbmRpY2F0b3Itb3BhY2l0eTogMC40ICFkZWZhdWx0O1xyXG5cclxuJGNhcm91c2VsLWNhcHRpb24tc3BhY2VyOiAxLjQzN3JlbSAhZGVmYXVsdDtcclxuXHJcbiRjYXJvdXNlbC1jb250cm9sLWljb24td2lkdGg6IDIuNXJlbSAhZGVmYXVsdDtcclxuJGNhcm91c2VsLWNvbnRyb2wtcHJldi1pY29uLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxOCcgaGVpZ2h0PScxOCcgdmlld0JveD0nMCAwIDE4IDE4JyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBkPSdNMTEuMjUgNC41TDYuNzUgOUwxMS4yNSAxMy41JyBzdHJva2U9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNMTEuMjUgNC41TDYuNzUgOUwxMS4yNSAxMy41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4yJyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuXHJcbiRjYXJvdXNlbC1jb250cm9sLW5leHQtaWNvbi1iZzogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTknIGhlaWdodD0nMTgnIHZpZXdCb3g9JzAgMCAxOSAxOCcgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTcuMjUgNC41TDExLjc1IDlMNy4yNSAxMy41JyBzdHJva2U9JyN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNy4yNSA0LjVMMTEuNzUgOUw3LjI1IDEzLjUnIHN0cm9rZT0nd2hpdGUnIHN0cm9rZS1vcGFjaXR5PScwLjInIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuLy8gU3Bpbm5lcnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHNwaW5uZXItd2lkdGgtbGc6IDNyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kc3Bpbm5lci1oZWlnaHQtbGc6ICRzcGlubmVyLXdpZHRoLWxnICFkZWZhdWx0OyAvLyAoQylcclxuJHNwaW5uZXItYm9yZGVyLXdpZHRoLWxnOiAwLjNlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIENsb3NlXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRidG4tY2xvc2Utd2lkdGg6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWNvbG9yOiAkYmxhY2sgIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2UtYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE5JyBoZWlnaHQ9JzE4JyB2aWV3Qm94PScwIDAgMTkgMTgnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NwYXRoIGQ9J00xNCA0LjVMNSAxMy41JyBzdHJva2U9JyN7JGJ0bi1jbG9zZS1jb2xvcn0nIHN0cm9rZS13aWR0aD0nMS43NScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJy8lM0UlM0NwYXRoIGQ9J00xNCA0LjVMNSAxMy41JyBzdHJva2U9J3doaXRlJyBzdHJva2Utb3BhY2l0eT0nMC4yJyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNSA0LjVMMTQgMTMuNScgc3Ryb2tlPScjeyRidG4tY2xvc2UtY29sb3J9JyBzdHJva2Utd2lkdGg9JzEuNzUnIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcvJTNFJTNDcGF0aCBkPSdNNSA0LjVMMTQgMTMuNScgc3Ryb2tlPSd3aGl0ZScgc3Ryb2tlLW9wYWNpdHk9JzAuMicgc3Ryb2tlLXdpZHRoPScxLjc1JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnLyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2UtZm9jdXMtc2hhZG93OiBub25lICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWZvY3VzLW9wYWNpdHk6IDAuNzUgIWRlZmF1bHQ7XHJcblxyXG4kY2xvc2UtZm9udC13ZWlnaHQ6IDMwMCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE9mZmNhbnZhc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgb2ZmY2FudmFzLXZhcmlhYmxlc1xyXG4kb2ZmY2FudmFzLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIG9mZmNhbnZhcy12YXJpYWJsZXNcclxuXHJcbi8vIFV0aWxpdGllc1xyXG4kb3ZlcmZsb3dzOiBhdXRvLCBoaWRkZW4sIHNjcm9sbCwgdmlzaWJsZSAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ1xyXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xyXG4kZGFyay1zdHlsZTogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBVc2VmdWwgSWNvbnNcclxuJHVwbG9hZC1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgY2xhc3M9J2ljb24gaWNvbi10YWJsZXIgaWNvbi10YWJsZXItdXBsb2FkJyB3aWR0aD0nMjQnIGhlaWdodD0nMjQnIHZpZXdCb3g9JzAgMCAyNCAyNCcgc3Ryb2tlLXdpZHRoPScyJyBzdHJva2U9J2N1cnJlbnRDb2xvcicgZmlsbD0nbm9uZScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyUzRSUzQ3BhdGggc3Ryb2tlPSdub25lJyBkPSdNMCAwaDI0djI0SDB6JyBmaWxsPSdub25lJy8lM0UlM0NwYXRoIGQ9J000IDE3djJhMiAyIDAgMCAwIDIgMmgxMmEyIDIgMCAwIDAgMiAtMnYtMicgLyUzRSUzQ3BvbHlsaW5lIHBvaW50cz0nNyA5IDEyIDQgMTcgOScgLyUzRSUzQ2xpbmUgeDE9JzEyJyB5MT0nNCcgeDI9JzEyJyB5Mj0nMTYnIC8lM0UlM0Mvc3ZnJTNFXCIpO1xyXG4iLCIvLyBWYXJpYWJsZXNcclxuLy9cclxuLy8gVmFyaWFibGVzIHNob3VsZCBmb2xsb3cgdGhlIGAkY29tcG9uZW50LXN0YXRlLXByb3BlcnR5LXNpemVgIGZvcm11bGEgZm9yXHJcbi8vIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxyXG4vL1xyXG4vLyAoQykgQ3VzdG9tIHZhcmlhYmxlcyBmb3IgZXh0ZW5kZWQgY29tcG9uZW50cyBvZiBib290c3RyYXAgb25seVxyXG5cclxuLy8gISBfdmFyaWFibGUtZGFyay5zY3NzIGZpbGUgb3ZlcnJpZGVzIF92YXJpYWJsZS5zY3NzIGZpbGUuXHJcblxyXG4vLyAqIENvbG9yc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xyXG4kYmxhY2s6ICMwMDAgIWRlZmF1bHQ7XHJcblxyXG4kYmFzZTogIzg2OTJkMCAhZGVmYXVsdDtcclxuJGdyYXktMjU6IHJnYmEoJHdoaXRlLCAwLjAxNSkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZ3JheS01MDogcmdiYSgkd2hpdGUsIDAuMDMpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMTAwOiByZ2JhKCR3aGl0ZSwgMC44KSAhZGVmYXVsdDtcclxuJGdyYXktMjAwOiByZ2JhKCR3aGl0ZSwgMC42KSAhZGVmYXVsdDtcclxuJGdyYXktMzAwOiByZ2JhKCR3aGl0ZSwgMC40KSAhZGVmYXVsdDtcclxuJGdyYXktNDAwOiByZ2JhKCR3aGl0ZSwgMC4zKSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAkYmFzZSAhZGVmYXVsdDtcclxuJGdyYXktNjAwOiByZ2JhKCRibGFjaywgMC4xKSAhZGVmYXVsdDtcclxuJGdyYXktNzAwOiByZ2JhKCRibGFjaywgMC4zKSAhZGVmYXVsdDtcclxuJGdyYXktODAwOiByZ2JhKCRibGFjaywgMC40NSkgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuNjUpICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3ItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZ3JheS1jb2xvcnMtbWFwXHJcbiRncmF5czogKFxyXG4gICcyNSc6ICRncmF5LTI1LFxyXG4gICc1MCc6ICRncmF5LTUwXHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvcnMtbWFwXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY29sb3ItdmFyaWFibGVzXHJcbiRibHVlOiAjMDA3YmZmICFkZWZhdWx0O1xyXG4kaW5kaWdvOiAjNjYxMGYyICFkZWZhdWx0O1xyXG4kcHVycGxlOiAjNzM2N2YwICFkZWZhdWx0O1xyXG4kcGluazogI2U4M2U4YyAhZGVmYXVsdDtcclxuJHJlZDogI2VhNTQ1NSAhZGVmYXVsdDtcclxuJG9yYW5nZTogI2ZkN2UxNCAhZGVmYXVsdDtcclxuJHllbGxvdzogI2ZmOWY0MyAhZGVmYXVsdDtcclxuJGdyZWVuOiAjMjhjNzZmICFkZWZhdWx0O1xyXG4kdGVhbDogIzIwYzk5NyAhZGVmYXVsdDtcclxuJGN5YW46ICMwMGNmZTggIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgY29sb3ItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3ItdmFyaWFibGVzXHJcbiRwcmltYXJ5OiAkcHVycGxlICFkZWZhdWx0O1xyXG4kc2Vjb25kYXJ5OiAjYThhYWFlICFkZWZhdWx0O1xyXG4kc3VjY2VzczogJGdyZWVuICFkZWZhdWx0O1xyXG4kaW5mbzogJGN5YW4gIWRlZmF1bHQ7XHJcbiR3YXJuaW5nOiAkeWVsbG93ICFkZWZhdWx0O1xyXG4kZGFuZ2VyOiAkcmVkICFkZWZhdWx0O1xyXG4kbGlnaHQ6ICM0NDQ3NWIgIWRlZmF1bHQ7XHJcbiRkYXJrOiAjZDdkOGRlICFkZWZhdWx0O1xyXG4kZ3JheTogJGdyYXktMTAwICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCB0aGVtZS1jb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0aGVtZS1jb2xvcnMtbWFwXHJcbiR0aGVtZS1jb2xvcnM6IChcclxuICAncHJpbWFyeSc6ICRwcmltYXJ5LFxyXG4gICdzZWNvbmRhcnknOiAkc2Vjb25kYXJ5LFxyXG4gICdzdWNjZXNzJzogJHN1Y2Nlc3MsXHJcbiAgJ2luZm8nOiAkaW5mbyxcclxuICAnd2FybmluZyc6ICR3YXJuaW5nLFxyXG4gICdkYW5nZXInOiAkZGFuZ2VyLFxyXG4gICdsaWdodCc6ICRsaWdodCxcclxuICAnZGFyayc6ICRkYXJrLFxyXG4gICdncmF5JzogJGdyYXlcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCB0aGVtZS1jb2xvcnMtbWFwXHJcblxyXG4kY29sb3Itc2NoZW1lOiAnZGFyaycgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBCb2R5XHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRib2R5LWJnOiAjMjUyOTNjICFkZWZhdWx0O1xyXG4kcmdiYS10by1oZXgtYmc6ICRiYXNlICFkZWZhdWx0OyAvLyAoQylcclxuJGJvZHktY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTMwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnLWludmVydGVkOiByZ2IoMTYwLCAxNDksIDE0OSkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDb21wb25lbnRzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhbGVydC1iZy1zY2FsZTogLTg0JSAhZGVmYXVsdDtcclxuJGFsZXJ0LWJvcmRlci1zY2FsZTogLTg0JSAhZGVmYXVsdDtcclxuJGFsZXJ0LWNvbG9yLXNjYWxlOiAwJSAhZGVmYXVsdDtcclxuJGFsZXJ0LWljb24tYmc6ICMyODMwNDYgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgocmdiYSgkd2hpdGUsIDAuMSksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbi8vICRib3JkZXItaW5uZXItY29sb3I6IHJnYmEtdG8taGV4KHJnYmEoJHdoaXRlLCAwLjA5KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRib3JkZXItY29sb3I6ICM0MzQ5NjggIWRlZmF1bHQ7XHJcbiRib3JkZXItaW5uZXItY29sb3I6IHJnYmEoJHdoaXRlLCAwLjA5KSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuJGJveC1zaGFkb3c6IDAgMC4yNXJlbSAxcmVtIHJnYmEoMTUsIDIwLCAzNCwgMC41NSkgIWRlZmF1bHQ7XHJcbiRib3gtc2hhZG93LXNtOiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYSgxNSwgMjAsIDM0LCAwLjQpICFkZWZhdWx0O1xyXG4kYm94LXNoYWRvdy1sZzogMCAwLjYyNXJlbSAxLjI1cmVtIHJnYmEoMTUsIDIwLCAzNCwgMC41KSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3gtc2hhZG93LXZhcmlhYmxlc1xyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHJnYmEoJHdoaXRlLCAwLjA1KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93OiAwIDAuMzFyZW0gMS4yNXJlbSAwIHJnYmEoJGJsYWNrLCAwLjQpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVHlwb2dyYXBoeVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kdGV4dC1tdXRlZDogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJHdoaXRlLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LWxpZ2h0OiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVzdDogcmdiYS10by1oZXgoJGdyYXktMzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRoZWFkaW5ncy1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDYXJkc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kY2FyZC1iZzogIzJmMzM0OSAhZGVmYXVsdDtcclxuJGNhcmQtYm94LXNoYWRvdzogMCAwLjI1cmVtIDEuMjVyZW0gcmdiYSgxNSwgMjAsIDM0LCAwLjQpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBUYWJsZXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yOiAwLjAyICFkZWZhdWx0O1xyXG4kdGFibGUtc3RyaXBlZC1iZzogcmdiYS10by1oZXgocmdiYSgkYmFzZSwgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJGNhcmQtYmcpICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLWhvdmVyLWJnLWZhY3RvcjogMC4wOCAhZGVmYXVsdDtcclxuJHRhYmxlLWhvdmVyLWJnOiByZ2JhKCRiYXNlLCAkdGFibGUtaG92ZXItYmctZmFjdG9yKSAhZGVmYXVsdDtcclxuXHJcbi8vICogQWNjb3JkaW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJGFjY29yZGlvbi1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYm9yZGVyLWNvbG9yOiAkYWNjb3JkaW9uLWJnICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1idXR0b24tY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vICogVG9vbHRpcHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kdG9vbHRpcC1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gQnV0dG9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYnRuLWJveC1zaGFkb3c6IDBweCAycHggNHB4IHJnYmEoMTUsIDIwLCAzNCwgMC40KSAhZGVmYXVsdDtcclxuXHJcbi8vICogRm9ybXNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGlucHV0LWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuJGlucHV0LWRpc2FibGVkLWJnOiByZ2JhKCRiYXNlLCAwLjA4KSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtYm9yZGVyOiAxcHggc29saWQgJGdyYXktNTAwO1xyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtZGlzYWJsZWQtYmc6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9ybS1zd2l0Y2gtY29sb3I6IHJnYmEtdG8taGV4KHJnYmEoJHdoaXRlLCAwLjE1KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXJhbmdlLXRodW1iLWJnOiByZ2JhLXRvLWhleChyZ2JhKCR3aGl0ZSwgMC41KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbi8vICogTmF2c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2LXRhYnMtbGluay1hY3RpdmUtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gKiBOYXZiYXJcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJG5hdmJhci1saWdodC1ob3Zlci1jb2xvcjogIzRlNTE1NSAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3I6ICM0ZTUxNTUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6IHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xyXG4kbmF2YmFyLWRyb3Bkb3duLWhvdmVyLWJnOiByZ2JhKCRiYXNlLCAwLjA2KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXZiYXItZHJvcGRvd24taWNvbi1iZzogcmdiYSgkYmFzZSwgMC4wOCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBEcm9wZG93bnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGRyb3Bkb3duLWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogUGFnaW5hdGlvblxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kcGFnaW5hdGlvbi1iZzogcmdiYSgkYmFzZSwgMC4wOCkgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1mb2N1cy1iZzogcmdiYSgkYmFzZSwgMC4xNikgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBvcG92ZXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJHBvcG92ZXItYm9keS1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNTAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIE1vZGFsXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJG1vZGFsLWNvbnRlbnQtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG5cclxuLy8gKiBQcm9ncmVzcyBiYXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJHByb2dyZXNzLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRncmF5LTUwMCwgMC4wOCksICRjYXJkLWJnKSAhZGVmYXVsdDtcclxuXHJcbi8vICogTGlzdCBncm91cFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbGlzdC1ncm91cC1ob3Zlci1iZzogcmdiYS10by1oZXgocmdiYSgkcHJpbWFyeSwgMC4wOCksICRjYXJkLWJnKSAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1iZzogJGxpc3QtZ3JvdXAtaG92ZXItYmcgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEJyZWFkY3J1bWJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRicmVhZGNydW1iLWRpdmlkZXItY29sb3I6ICRiYXNlICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDbG9zZVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRidG4tY2xvc2UtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbiRrYmQtY29sb3I6ICRkYXJrICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDb25maWdcclxuJHJ0bC1zdXBwb3J0OiBmYWxzZSAhZGVmYXVsdDtcclxuJGRhcmstc3R5bGU6IHRydWUgIWRlZmF1bHQ7XHJcbiIsIi8vIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuXG4vL1xuLy8gQnJlYWtwb2ludHMgYXJlIGRlZmluZWQgYXMgYSBtYXAgb2YgKG5hbWU6IG1pbmltdW0gd2lkdGgpLCBvcmRlciBmcm9tIHNtYWxsIHRvIGxhcmdlOlxuLy9cbi8vICAgICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpXG4vL1xuLy8gVGhlIG1hcCBkZWZpbmVkIGluIHRoZSBgJGdyaWQtYnJlYWtwb2ludHNgIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuXG4vLyBOYW1lIG9mIHRoZSBuZXh0IGJyZWFrcG9pbnQsIG9yIG51bGwgZm9yIHRoZSBsYXN0IGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4LCB4eGw6IDE0MDBweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kIGxnIHhsIHh4bCkpXG4vLyAgICBtZFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cywgJGJyZWFrcG9pbnQtbmFtZXM6IG1hcC1rZXlzKCRicmVha3BvaW50cykpIHtcbiAgJG46IGluZGV4KCRicmVha3BvaW50LW5hbWVzLCAkbmFtZSk7XG4gIEBpZiBub3QgJG4ge1xuICAgIEBlcnJvciBcImJyZWFrcG9pbnQgYCN7JG5hbWV9YCBub3QgZm91bmQgaW4gYCN7JGJyZWFrcG9pbnRzfWBcIjtcbiAgfVxuICBAcmV0dXJuIGlmKCRuIDwgbGVuZ3RoKCRicmVha3BvaW50LW5hbWVzKSwgbnRoKCRicmVha3BvaW50LW5hbWVzLCAkbiArIDEpLCBudWxsKTtcbn1cblxuLy8gTWluaW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgc21hbGxlc3QgKGZpcnN0KSBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWluKHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KSlcbi8vICAgIDU3NnB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguXG4vLyBUaGUgbWF4aW11bSB2YWx1ZSBpcyByZWR1Y2VkIGJ5IDAuMDJweCB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2Zcbi8vIGBtaW4tYCBhbmQgYG1heC1gIHByZWZpeGVzIGFuZCB2aWV3cG9ydHMgd2l0aCBmcmFjdGlvbmFsIHdpZHRocy5cbi8vIFNlZSBodHRwczovL3d3dy53My5vcmcvVFIvbWVkaWFxdWVyaWVzLTQvI21xLW1pbi1tYXhcbi8vIFVzZXMgMC4wMnB4IHJhdGhlciB0aGFuIDAuMDFweCB0byB3b3JrIGFyb3VuZCBhIGN1cnJlbnQgcm91bmRpbmcgYnVnIGluIFNhZmFyaS5cbi8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTc4MjYxXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1tYXgobWQsICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpKVxuLy8gICAgNzY3Ljk4cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtYXggYW5kICRtYXggPiAwLCAkbWF4IC0gLjAyLCBudWxsKTtcbn1cblxuLy8gUmV0dXJucyBhIGJsYW5rIHN0cmluZyBpZiBzbWFsbGVzdCBicmVha3BvaW50LCBvdGhlcndpc2UgcmV0dXJucyB0aGUgbmFtZSB3aXRoIGEgZGFzaCBpbiBmcm9udC5cbi8vIFVzZWZ1bCBmb3IgbWFraW5nIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtaW5maXgoeHMsICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpKVxuLy8gICAgXCJcIiAgKFJldHVybnMgYSBibGFuayBzdHJpbmcpXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KSlcbi8vICAgIFwiLXNtXCJcbkBmdW5jdGlvbiBicmVha3BvaW50LWluZml4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gIEByZXR1cm4gaWYoYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cykgPT0gbnVsbCwgXCJcIiwgXCItI3skbmFtZX1cIik7XG59XG5cbi8vIE1lZGlhIG9mIGF0IGxlYXN0IHRoZSBtaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgd2lkZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtaW4ge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtYXgge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIHRoYXQgc3BhbnMgbXVsdGlwbGUgYnJlYWtwb2ludCB3aWR0aHMuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgYmV0d2VlbiB0aGUgbWluIGFuZCBtYXggYnJlYWtwb2ludHNcbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJGxvd2VyLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkdXBwZXIsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IG9ubHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQsIG5vdCB2aWV3cG9ydHMgYW55IHdpZGVyIG9yIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtb25seSgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiAgYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gICRuZXh0OiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50cyk7XG4gICRtYXg6ICBicmVha3BvaW50LW1heCgkbmV4dCwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5leHQsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iXX0= */
